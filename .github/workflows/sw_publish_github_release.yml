name: Update github release with Swan Lake release

on:
  workflow_dispatch:

jobs:
  update-sl-github-release:
    runs-on: ubuntu-latest

    steps:    
    - name: Install jq for json manipulation
      run: sudo apt-get install jq

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create new release in github
      env:
        WEBSITE_TOKEN: ${{ secrets.WEBSITE_TOKEN }}
      run: |
        VERSION="`jq -r '.version' _data/swanlake-latest/metadata.json`"
        ls downloads/swan-lake-release-notes
        cat downloads/swan-lake-release-notes/$VERSION/RELEASE_NOTE.md | sed '/---/d' | sed '/layout: release-note/d' | sed '/title: Release note/d' > RN.md
        #python script takes RN.md as the input and produces out.json as the output
        python3 .github/scripts/sanitize_rn.py _data/swanlake-latest/metadata.json

        if ! curl -v -H "Authorization: token $WEBSITE_TOKEN" -H "Content-Type: application/json" -H "Connection: close" -d @out.json https://api.github.com/repos/ballerina-platform/ballerina-lang/releases --fail; then
          exit 1
        fi
