{"pageProps":{"frontmatter":{"layout":"ballerina-style-guide-left-nav-pages-swanlake","title":"Annotations, documentation and comments","description":"The Ballerina Style Guide aims at maintaining a standard coding style among the Ballerina community. The Ballerina code formatting tools are based on this guide.","keywords":"ballerina, programming language, ballerina style guide, annotations, comments","permalink":"/learn/style-guide/annotations-documentation-and-comments/","active":"annotations-documentation-and-comments","intro":"The sections below include the coding conventions with respect to annotations, documentation, and comments."},"content":"\n## Annotations\n* Do not have spaces around the `@` symbol.\n* Indent annotations to align them with the starting position of the owner (statement or definition).\n* Each annotation attribute (i.e., key-value pairs) can be expanded and block indented on its own line or kept as inline fields.\n\n**Example,**\n\n```ballerina\n// Function annotations are aligned with the starting position of the function.\n@test:Config {\n    before: beforeFunc,\n    after: afterFunc\n}\nfunction testFunction() {\n    io:println(\"I'm in test function!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n```\n\n* If an annotation is empty, place it in a single line and \n  do not have spaces between both braces.\n  \n**Example,**\n\n```ballerina\n@test:Config {}\n```\n\n* If you are annotating a parameter or a return type, the annotation should be added inline to the parameter or the return type.\n  \n**Example,**\n  \n```ballerina\n// Parameter annotation.\npublic function secureFunction1(@untainted string secureInName, @untainted int secureInId, string insecureIn) {\n    ...\n}\n  \npublic function secureFunction2(@untainted string secureInName,\n    @untainted int secureInId, string insecureIn) {\n    ...\n}\n  \n// Return type annotation.\npublic function taintedReturn1() returns @tainted string {\n    ...\n}\n    \npublic function taintedReturn2() returns \n    @tainted string {\n    ...\n}\n  \n```\n\n## Comments\n* Use `//` for both single-line and multi-line comments.\n  \n**Example,**\n\n```ballerina\n// This is a single-line comment.\n```\n\n  and \n  \n```ballerina\n// Copyright (c) 2022 WSO2 LLC (http://www.wso2.org) All Rights Reserved.\n//\n// WSO2 LLC licenses this file to you under the Apache License,\n// Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n```\n  \n* Add a single space between the `//` and the content.\n* If the comment is in its own line, then indent it considering its context (i.e., top-level or in a block).\n  \n**Example,**\n\n```ballerina\n// This is a top-level comment.\n\nfunction func1() {\n    // This is a block-level comment. \n    int x = 10;\n}\n\nfunction func2() {\n    if (true) {\n        if (true) {\n            // This is a nested if block-level comment.\n            string a = \"hello\";\n        }\n    }\n}\n```\n\n* If the comment is in line with the code, add a space before it.\n\n**Example,**\n\n```ballerina\ntype People record {}; // Inline comment\n\nfunction func1() {\n    int a = 0; // Inline comment\n}\n```\n\n\n## Documentation\n* Always, indent them to align with the starting position of the owner.\n* Add a space after the `#` symbol.\n* Add an empty line after the description.\n\n**Example,**\n\n```ballerina\n# Description.\n#\n# + value - value input parameter \n# + return - return a integer value\nfunction getValue(int value) returns int {\n    return value;\n}\n```\n\n* Add only one space after the parameter marker (`+`), divider (`-`), and `return`.\n* Begin the param identifier and description with a single space.\n\n**Example,**\n  \n```ballerina\n# Description.\n#\n# + value - Parameter description\n# + return - Return value description\nfunction getValue(int value) returns int {\n    ...\n}\n\n# Description.\nservice / on new http:Listener(8080) {\n    # Description.\n    #\n    # + caller - Parameter description.\n    # + request - Parameter description.\n    resource function get greeting(http:Caller caller, http:Request request) {\n        ...\n    }\n}\n```\n\n<div class=\"cGitButtonContainer\"><p data-button=\"iGitStarText\">\"Star\"</p><p data-button=\"iGitWatchText\">\"Watch\"</p></div>\n\n\n<style> #tree-expand-all , #tree-collapse-all, .cTocElements {display:none;} .cGitButtonContainer {padding-left: 40px;display: none;} </style>\n","id":"annotations-documentation-and-comments","sub":"source-code-dependencies","third":"style-guide","slug":"source-code-dependencies/style-guide/annotations-documentation-and-comments","codes":"[[-621909743,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Function annotations are aligned with the starting position of the function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Config</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    before</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> beforeFunc,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    after</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> afterFunc</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">testFunction</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    io</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;I&#39;m in test function!&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    test</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">assertTrue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">true</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">msg</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[1973136440,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Config</span><span style=\\\"color: #24292E\\\"> {}</span></span></code></pre>\"],[1951425197,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Parameter annotation.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">secureFunction1</span><span style=\\\"color: #24292E\\\">(@</span><span style=\\\"color: #005CC5\\\">untainted</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">secureInName</span><span style=\\\"color: #24292E\\\">, @</span><span style=\\\"color: #005CC5\\\">untainted</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">secureInId</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">insecureIn</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">secureFunction2</span><span style=\\\"color: #24292E\\\">(@</span><span style=\\\"color: #005CC5\\\">untainted</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">secureInName</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    @</span><span style=\\\"color: #005CC5\\\">untainted</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">secureInId</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">insecureIn</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Return type annotation.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">taintedReturn1</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> @tainted </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">taintedReturn2</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    @tainted </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-465943287,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// This is a single-line comment.</span></span></code></pre>\"],[-894153544,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Copyright (c) 2022 WSO2 LLC (http://www.wso2.org) All Rights Reserved.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">//</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// WSO2 LLC licenses this file to you under the Apache License,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Version 2.0 (the &quot;License&quot;); you may not use this file except</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// in compliance with the License.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// You may obtain a copy of the License at</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">//</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// http://www.apache.org/licenses/LICENSE-2.0</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">//</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Unless required by applicable law or agreed to in writing,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// software distributed under the License is distributed on an</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// KIND, either express or implied.  See the License for the</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// specific language governing permissions and limitations</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// under the License.</span></span></code></pre>\"],[-595751877,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// This is a top-level comment.</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">func1</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\">// This is a block-level comment. </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> x </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">10</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">func2</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #D73A49\\\">true</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #D73A49\\\">true</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #6A737D\\\">// This is a nested if block-level comment.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> a </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;hello&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[882312389,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">People</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {}; </span><span style=\\\"color: #6A737D\\\">// Inline comment</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">func1</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> a </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">; </span><span style=\\\"color: #6A737D\\\">// Inline comment</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[2143426931,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># Description.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">value</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">value input parameter </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">return</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">return a integer value</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">value</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> value;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1689139718,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># Description.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">value</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">Parameter description</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">return</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">Return value description</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">value</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># Description.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> / </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> http:Listener(</span><span style=\\\"color: #005CC5\\\">8080</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\"># Description.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">caller</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">Parameter description.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">request</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">Parameter description.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">resource</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">get</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">greeting</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Caller caller, </span><span style=\\\"color: #E36209\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Request request) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"]]"},"__N_SSG":true}