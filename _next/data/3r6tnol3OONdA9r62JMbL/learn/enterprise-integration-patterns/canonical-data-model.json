{"pageProps":{"tagline":"Common message format for communication between applications","desc":"The Canonical Data Model is a common message format used by different applications for communication.","category":"Message Transformation","index":41,"helps":"Ballerina provides powerful data modelling capabilities through its Type System. You can define data types like JSON and xml, and structures like records to represent your canonical data model. This ensures interoperability when integrating different components in your system, making it easier to exchange data seamlessly.","tags":["Canonical Data Model","Message Router","Message Translator","Format Indicator"],"link":"https://www.enterpriseintegrationpatterns.com/patterns/messaging/CanonicalDataModel.html","content":[{"headerCode":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const </span><span style=\"color:#005CC5\">PROJECT_ID</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#032F62\"> \"LAND-TEST04\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const </span><span style=\"color:#005CC5\">DATASET_ID</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#032F62\"> \"f57074a0-a8b6-403e-9df1-e9fc46\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client gMapClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"http://mapsplatformdatasets.googleapis.com.balmock.io\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client microsoftClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"http://atlas.microsoft.com.balmock.io\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Gpx</span><span style=\"color:#005CC5\"> xml</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Kml</span><span style=\"color:#005CC5\"> xml</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Csv</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    float</span><span style=\"color:#24292E\"> X;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    float</span><span style=\"color:#24292E\"> Y;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> Name;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> Description;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">}[];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> GeoJson</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> 'type </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"FeatureCollection\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> name </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"PlaceMarks\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Feature[] features;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Feature</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> 'type </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"Feature\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\"> X;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\"> Y;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\"> Name;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\"> description;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    |</span><span style=\"color:#24292E\">} properties;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\"> 'type </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"Point\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\">[] coordinates;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    |</span><span style=\"color:#24292E\">} geometry;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> GMapResponse</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> name;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> displayName;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> createTime;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> MicrosoftMapResponse</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> formatVersion;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            string</span><span style=\"color:#24292E\"> latitude;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            string</span><span style=\"color:#24292E\"> longitude;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }[] points;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }[] routes;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span></code></pre>","mainCode":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#6F42C1\"> /map</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> http:Listener(</span><span style=\"color:#005CC5\">8080</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> post</span><span style=\"color:#6F42C1\"> uploadPlaceMarks</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Request request) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> GMapResponse</span><span style=\"color:#D73A49\">|error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Csv</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">Gpx data </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#6F42C1\"> getPayload</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">request</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        GeoJson geoJson </span><span style=\"color:#D73A49\">=</span><span style=\"color:#6F42C1\"> convertToCanonical</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">data</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Kml kmlData </span><span style=\"color:#D73A49\">=</span><span style=\"color:#6F42C1\"> convertFromCanonicalToKml</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">geoJson</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        GMapResponse gMapResponse </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> gMapClient</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">post</span><span style=\"color:#24292E\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            string</span><span style=\"color:#032F62\"> `/v1/projects/${</span><span style=\"color:#24292E\">PROJECT_ID</span><span style=\"color:#032F62\">}/datasets/${</span><span style=\"color:#24292E\">DATASET_ID</span><span style=\"color:#032F62\">}:import`</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">kmlData</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> gMapResponse;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> post</span><span style=\"color:#6F42C1\"> getRouteDirection</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Request request, </span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> query</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> MicrosoftMapResponse</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Csv</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">Gpx data </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#6F42C1\"> getPayload</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">request</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        GeoJson geoJson </span><span style=\"color:#D73A49\">=</span><span style=\"color:#6F42C1\"> convertToCanonical</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">data</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        MicrosoftMapResponse microsoftMapResponse </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> microsoftClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">route</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">directions</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">'json.</span><span style=\"color:#6F42C1\">post</span><span style=\"color:#24292E\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            {</span><span style=\"color:#032F62\">\"supportingPoints\"</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> geoJson.</span><span style=\"color:#6F42C1\">toJson</span><span style=\"color:#24292E\">()}, {query</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> string </span><span style=\"color:#032F62\">`${</span><span style=\"color:#24292E\">query</span><span style=\"color:#032F62\">}`</span><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        );</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> microsoftMapResponse;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> convertToCanonical</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Csv</span><span style=\"color:#D73A49\">|</span><span style=\"color:#E36209\">Gpx</span><span style=\"color:#E36209\"> data</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> GeoJson {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    if</span><span style=\"color:#24292E\"> data </span><span style=\"color:#D73A49\">is</span><span style=\"color:#24292E\"> Csv {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#6F42C1\"> convertFromCsvToCanonical</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">data</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    } </span><span style=\"color:#D73A49\">else</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#6F42C1\"> convertFromGpxToCanonical</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">data</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> getPayload</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Request request) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Csv</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">Gpx</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    if</span><span style=\"color:#24292E\"> request.</span><span style=\"color:#6F42C1\">getContentType</span><span style=\"color:#24292E\">().</span><span style=\"color:#6F42C1\">includes</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\"xml\"</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> request.</span><span style=\"color:#6F42C1\">getXmlPayload</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    json</span><span style=\"color:#24292E\"> data </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> request.</span><span style=\"color:#6F42C1\">getJsonPayload</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#24292E\"> data.</span><span style=\"color:#6F42C1\">cloneWithType</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Csv</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> convertFromCsvToCanonical</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Csv</span><span style=\"color:#E36209\"> data</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> GeoJson {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        features</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> from </span><span style=\"color:#005CC5\">var</span><span style=\"color:#24292E\"> member </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> data</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                  let</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> X </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> member.X.</span><span style=\"color:#6F42C1\">toString</span><span style=\"color:#24292E\">(), </span><span style=\"color:#005CC5\">string</span><span style=\"color:#24292E\"> Y </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> member.Y.</span><span style=\"color:#6F42C1\">toString</span><span style=\"color:#24292E\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                  select</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                      properties</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {X, Y, Name</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> member.Name, description</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> member.Description},</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                      geometry</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {coordinates: [X, Y]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> convertFromGpxToCanonical</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Gpx</span><span style=\"color:#E36209\"> gpxData</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> GeoJson {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        features</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> from </span><span style=\"color:#005CC5\">var</span><span style=\"color:#24292E\"> extension </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> gpxData/**/&#x3C;extensions</span><span style=\"color:#D73A49\">></span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            select</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                properties</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    X</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">extension</span><span style=\"color:#D73A49\">/**/&#x3C;</span><span style=\"color:#E36209\">X</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\">).</span><span style=\"color:#6F42C1\">data</span><span style=\"color:#24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    Y</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">extension</span><span style=\"color:#D73A49\">/**/&#x3C;</span><span style=\"color:#E36209\">X</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\">).</span><span style=\"color:#6F42C1\">data</span><span style=\"color:#24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    Name</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">extension</span><span style=\"color:#D73A49\">/**/&#x3C;</span><span style=\"color:#E36209\">Name</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\">).</span><span style=\"color:#6F42C1\">data</span><span style=\"color:#24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    description</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">extension</span><span style=\"color:#D73A49\">/**/&#x3C;</span><span style=\"color:#E36209\">description</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\">).</span><span style=\"color:#6F42C1\">data</span><span style=\"color:#24292E\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                geometry</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {coordinates: [(extension/**/&#x3C;X>).</span><span style=\"color:#6F42C1\">data</span><span style=\"color:#24292E\">(), (extension/**/&#x3C;Y>).</span><span style=\"color:#6F42C1\">data</span><span style=\"color:#24292E\">()]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> convertFromCanonicalToKml</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">GeoJson</span><span style=\"color:#E36209\"> geoJson</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Kml {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    xml</span><span style=\"color:#24292E\"> kmlData </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> xml</span><span style=\"color:#032F62\"> `&#x3C;</span><span style=\"color:#22863A\">kml</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        &#x3C;</span><span style=\"color:#22863A\">Document</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">            &#x3C;</span><span style=\"color:#22863A\">Schema</span><span style=\"color:#6F42C1\"> id</span><span style=\"color:#032F62\">=\"temp\"></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                &#x3C;</span><span style=\"color:#22863A\">SimpleField</span><span style=\"color:#6F42C1\"> name</span><span style=\"color:#032F62\">=\"X\" </span><span style=\"color:#6F42C1\">type</span><span style=\"color:#032F62\">=\"double\"/></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                &#x3C;</span><span style=\"color:#22863A\">SimpleField</span><span style=\"color:#6F42C1\"> name</span><span style=\"color:#032F62\">=\"Y\" </span><span style=\"color:#6F42C1\">type</span><span style=\"color:#032F62\">=\"double\"/></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                &#x3C;</span><span style=\"color:#22863A\">SimpleField</span><span style=\"color:#6F42C1\"> name</span><span style=\"color:#032F62\">=\"Name\" </span><span style=\"color:#6F42C1\">type</span><span style=\"color:#032F62\">=\"string\"/></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">            &#x3C;/</span><span style=\"color:#22863A\">Schema</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            ${</span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> Feature feature </span><span style=\"color:#D73A49\">in</span><span style=\"color:#032F62\"> geoJson.features</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">              select</span><span style=\"color:#005CC5\"> xml</span><span style=\"color:#032F62\"> `&#x3C;</span><span style=\"color:#22863A\">Placemark</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                            &#x3C;</span><span style=\"color:#22863A\">description</span><span style=\"color:#032F62\">></span><span style=\"color:#005CC5\">${</span><span style=\"color:#032F62\">feature.properties.description</span><span style=\"color:#005CC5\">}</span><span style=\"color:#032F62\">&#x3C;/</span><span style=\"color:#22863A\">description</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                            &#x3C;</span><span style=\"color:#22863A\">Point</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                                &#x3C;</span><span style=\"color:#22863A\">coordinates</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">                                    ${</span><span style=\"color:#032F62\">feature.geometry.coordinates[</span><span style=\"color:#005CC5\">0</span><span style=\"color:#032F62\">]</span><span style=\"color:#005CC5\">}</span><span style=\"color:#032F62\">,</span><span style=\"color:#005CC5\">${</span><span style=\"color:#032F62\">feature.geometry.coordinates[</span><span style=\"color:#005CC5\">1</span><span style=\"color:#032F62\">]</span><span style=\"color:#005CC5\">}</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                                &#x3C;/</span><span style=\"color:#22863A\">coordinates</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                            &#x3C;/</span><span style=\"color:#22863A\">Point</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                          &#x3C;/</span><span style=\"color:#22863A\">Placemark</span><span style=\"color:#032F62\">>`</span><span style=\"color:#005CC5\">}</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">            &#x3C;/</span><span style=\"color:#22863A\">Document</span><span style=\"color:#032F62\">></span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        &#x3C;/</span><span style=\"color:#22863A\">kml</span><span style=\"color:#032F62\">>`</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#24292E\"> kmlData;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","raw":"import ballerina/http;\n\nconst PROJECT_ID = \"LAND-TEST04\";\nconst DATASET_ID = \"f57074a0-a8b6-403e-9df1-e9fc46\";\n\nfinal http:Client gMapClient = check new (\"http://mapsplatformdatasets.googleapis.com.balmock.io\");\nfinal http:Client microsoftClient = check new (\"http://atlas.microsoft.com.balmock.io\");\n\ntype Gpx xml;\n\ntype Kml xml;\n\ntype Csv record {|\n    float X;\n    float Y;\n    string Name;\n    string Description;\n|}[];\n\ntype GeoJson record {\n    string 'type = \"FeatureCollection\";\n    string name = \"PlaceMarks\";\n    Feature[] features;\n};\n\ntype Feature record {|\n    string 'type = \"Feature\";\n    record {|\n        string X;\n        string Y;\n        string Name;\n        string description;\n    |} properties;\n    record {|\n        string 'type = \"Point\";\n        string[] coordinates;\n    |} geometry;\n|};\n\ntype GMapResponse record {\n    string name;\n    string displayName;\n    string createTime;\n};\n\ntype MicrosoftMapResponse record {\n    string formatVersion;\n    record {\n        record {\n            string latitude;\n            string longitude;\n        }[] points;\n    }[] routes;\n};\n\nservice /map on new http:Listener(8080) {\n    resource function post uploadPlaceMarks(http:Request request) returns GMapResponse|error? {\n        Csv|Gpx data = check getPayload(request);\n        GeoJson geoJson = convertToCanonical(data);\n        Kml kmlData = convertFromCanonicalToKml(geoJson);\n        GMapResponse gMapResponse = check gMapClient->post(\n            string `/v1/projects/${PROJECT_ID}/datasets/${DATASET_ID}:import`, kmlData);\n        return gMapResponse;\n    }\n\n    resource function post getRouteDirection(http:Request request, string query) returns MicrosoftMapResponse|error {\n        Csv|Gpx data = check getPayload(request);\n        GeoJson geoJson = convertToCanonical(data);\n        MicrosoftMapResponse microsoftMapResponse = check microsoftClient->/route/directions/'json.post(\n            {\"supportingPoints\": geoJson.toJson()}, {query: string `${query}`}\n        );\n        return microsoftMapResponse;\n    }\n}\n\nisolated function convertToCanonical(Csv|Gpx data) returns GeoJson {\n    if data is Csv {\n        return convertFromCsvToCanonical(data);\n    } else {\n        return convertFromGpxToCanonical(data);\n    }\n}\n\nisolated function getPayload(http:Request request) returns Csv|Gpx|error {\n    if request.getContentType().includes(\"xml\") {\n        return request.getXmlPayload();\n    }\n    json data = check request.getJsonPayload();\n    return data.cloneWithType(Csv);\n}\n\nisolated function convertFromCsvToCanonical(Csv data) returns GeoJson {\n    return {\n        features: from var member in data\n                  let string X = member.X.toString(), string Y = member.Y.toString()\n                  select {\n                      properties: {X, Y, Name: member.Name, description: member.Description},\n                      geometry: {coordinates: [X, Y]}\n                  }\n    };\n}\n\nisolated function convertFromGpxToCanonical(Gpx gpxData) returns GeoJson {\n    return {\n        features: from var extension in gpxData/**/<extensions>\n            select {\n                properties: {\n                    X: (extension/**/<X>).data(),\n                    Y: (extension/**/<X>).data(),\n                    Name: (extension/**/<Name>).data(),\n                    description: (extension/**/<description>).data()\n                },\n                geometry: {coordinates: [(extension/**/<X>).data(), (extension/**/<Y>).data()]}\n            }\n    };\n}\n\nisolated function convertFromCanonicalToKml(GeoJson geoJson) returns Kml {\n    xml kmlData = xml `<kml>\n        <Document>\n            <Schema id=\"temp\">\n                <SimpleField name=\"X\" type=\"double\"/>\n                <SimpleField name=\"Y\" type=\"double\"/>\n                <SimpleField name=\"Name\" type=\"string\"/>\n            </Schema>\n            ${from Feature feature in geoJson.features\n              select xml `<Placemark>\n                            <description>${feature.properties.description}</description>\n                            <Point>\n                                <coordinates>\n                                    ${feature.geometry.coordinates[0]},${feature.geometry.coordinates[1]}\n                                </coordinates>\n                            </Point>\n                          </Placemark>`}\n            </Document>\n        </kml>`;\n    return kmlData;\n}\n","name":"canonical-data-model.bal"}],"name":" Canonical Data Model"},"__N_SSG":true}