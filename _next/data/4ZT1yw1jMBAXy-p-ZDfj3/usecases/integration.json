{"pageProps":{"samples":{"built-in-observability":{"frontmatter":{"title":"Built-in observability","description":"Every Ballerina program is automatically observable by any Open Telemetry tool, giving you complete control and visibility into the codeâ€™s behavior and performance.","url":"","image":"images/screenshots-collage-final-image-transparent.png"},"code":""},"built-in-transactions":{"frontmatter":{"title":"Built-in transactions","description":"Eventual consistency in Data integration is nice and all, but if you really need to make sure your distributed data integrations run transactionally, then Ballerina makes that effortless and mistake-free for developers with compile-time support.","url":"https://github.com/ballerina-guides/integration-samples/blob/main/mysql-client-with-transactions/main.bal#L22","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #ffffff\"><code><span class=\"line\"><span style=\"color: #CF222E\">type</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Order</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">record</span><span style=\"color: #24292F\"> {</span><span style=\"color: #CF222E\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> id;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> orderDate;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> productId;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">int</span><span style=\"color: #24292F\"> quantity;</span></span>\n<span class=\"line\"><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #CF222E\">final</span><span style=\"color: #24292F\"> mysql</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Client db </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">new</span><span style=\"color: #24292F\"> (</span><span style=\"color: #953800\">host</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\">user</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\">password</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\">database</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\">port</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">createOrder</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">Order</span><span style=\"color: #24292F\"> &#39;order) </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">error?</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #6E7781\">// Start a transaction.</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">transaction</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #6E7781\">// Insert into `sales_order` table.</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        _ </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> db</span><span style=\"color: #CF222E\">-&gt;</span><span style=\"color: #8250DF\">execute</span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">`INSERT INTO sales_orders VALUES (${</span><span style=\"color: #24292F\">&#39;order</span><span style=\"color: #0A3069\">.</span><span style=\"color: #24292F\">id</span><span style=\"color: #0A3069\">}, ${</span><span style=\"color: #24292F\">&#39;order</span><span style=\"color: #0A3069\">.</span><span style=\"color: #24292F\">orderDate</span><span style=\"color: #0A3069\">},</span></span>\n<span class=\"line\"><span style=\"color: #0A3069\">                ${</span><span style=\"color: #24292F\">&#39;order</span><span style=\"color: #0A3069\">.</span><span style=\"color: #24292F\">productId</span><span style=\"color: #0A3069\">}, ${</span><span style=\"color: #24292F\">&#39;order</span><span style=\"color: #0A3069\">.</span><span style=\"color: #24292F\">quantity</span><span style=\"color: #0A3069\">})`</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #6E7781\">// Update product quantity as per the order.</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        sql</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">ExecutionResult inventoryUpdate </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> db</span><span style=\"color: #CF222E\">-&gt;</span><span style=\"color: #8250DF\">execute</span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">`UPDATE inventory SET </span></span>\n<span class=\"line\"><span style=\"color: #0A3069\">                quantity = quantity - ${</span><span style=\"color: #24292F\">&#39;order</span><span style=\"color: #0A3069\">.</span><span style=\"color: #24292F\">quantity</span><span style=\"color: #0A3069\">} WHERE id = ${</span><span style=\"color: #24292F\">&#39;order</span><span style=\"color: #0A3069\">.</span><span style=\"color: #24292F\">productId</span><span style=\"color: #0A3069\">}`</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #6E7781\">// If the product is not found, rollback or else commit the transaction.</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #CF222E\">if</span><span style=\"color: #24292F\"> inventoryUpdate.affectedRowCount </span><span style=\"color: #CF222E\">==</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">0</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            </span><span style=\"color: #CF222E\">rollback</span><span style=\"color: #24292F\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">error</span><span style=\"color: #24292F\">(</span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">`Product ${</span><span style=\"color: #24292F\">&#39;order</span><span style=\"color: #0A3069\">.</span><span style=\"color: #24292F\">productId</span><span style=\"color: #0A3069\">} not found.`</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        } </span><span style=\"color: #CF222E\">else</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">commit</span><span style=\"color: #24292F\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    } </span><span style=\"color: #CF222E\">on</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">fail</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">error</span><span style=\"color: #24292F\"> e {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #6E7781\">// In case of error, the transaction block is rolled back automatically.</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">error</span><span style=\"color: #24292F\">(</span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">`Error occurred while processing the order: ${</span><span style=\"color: #24292F\">&#39;order</span><span style=\"color: #0A3069\">.</span><span style=\"color: #24292F\">id</span><span style=\"color: #0A3069\">}.`</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\">e</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">}</span></span></code></pre>"},"code-is-the-picture-picture-is-the-code":{"frontmatter":{"title":"Code is the picture / picture is the code","description":"Instead of deciphering lines of code, Ballerina programs can be viewed and edited as sequence diagrams with flow charts. This makes maintaining and understanding integration applications a breeze. Code never goes out of sync with the picture and vice versa.","url":"https://github.com/ballerina-guides/integration-samples/blob/main/github-pull-requests-to-gsheets/main.bal#L18","image":"images/code-is-picture.png"},"code":""},"concurrent-programming-made-simple":{"frontmatter":{"title":"Concurrent programming made simple","description":"Sequence diagrams have been used to model concurrency for decades. Ballerinaâ€™s concurrent programming model is sequence diagrams along with various concurrency control capabilities that make concurrent programming visual and accessible to all.","url":"https://github.com/ballerina-guides/integration-samples/blob/main/pattern-scatter-gather/main.bal#L23","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #ffffff\"><code><span class=\"line\"><span style=\"color: #CF222E\">type</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Quote</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">record</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> customerName;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> product;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">int</span><span style=\"color: #24292F\"> quantity;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">decimal</span><span style=\"color: #24292F\"> price;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">findBestQuote</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">QuoteRequest</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">quoteReq</span><span style=\"color: #24292F\">) </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> Quote {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #6E7781\">// The fork statement starts with one or more named workers, </span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #6E7781\">//  which run in parallel with each other </span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">fork</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #CF222E\">worker</span><span style=\"color: #24292F\"> venderA </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> Quote</span><span style=\"color: #CF222E\">|error</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            http</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Client venderAEP </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">new</span><span style=\"color: #24292F\"> (</span><span style=\"color: #953800\">venderAURL</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> venderAEP </span><span style=\"color: #CF222E\">-&gt;</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">/</span><span style=\"color: #24292F\">quote.</span><span style=\"color: #8250DF\">get</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">p</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> quoteReq.product, </span><span style=\"color: #953800\">q</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> quoteReq.quantity);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #CF222E\">worker</span><span style=\"color: #24292F\"> venderB </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> Quote</span><span style=\"color: #CF222E\">|error</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            http</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Client venderBEP </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">new</span><span style=\"color: #24292F\"> (</span><span style=\"color: #953800\">venderBURL</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> venderBEP </span><span style=\"color: #CF222E\">-&gt;</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">/</span><span style=\"color: #24292F\">quote.</span><span style=\"color: #8250DF\">get</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">p</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> quoteReq.product, </span><span style=\"color: #953800\">q</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> quoteReq.quantity);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #CF222E\">worker</span><span style=\"color: #24292F\"> venderC </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> Quote</span><span style=\"color: #CF222E\">|error</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            http</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Client venderCEP </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">new</span><span style=\"color: #24292F\"> (</span><span style=\"color: #953800\">venderCURL</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">            </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> venderCEP </span><span style=\"color: #CF222E\">-&gt;</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">/</span><span style=\"color: #24292F\">quote.</span><span style=\"color: #8250DF\">get</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">p</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> quoteReq.product, </span><span style=\"color: #953800\">q</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> quoteReq.quantity);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #6E7781\">// Wait for all the workers to finish and collect the results.</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">map&lt;</span><span style=\"color: #24292F\">Quote</span><span style=\"color: #CF222E\">|error&gt;</span><span style=\"color: #24292F\"> quotes </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">wait</span><span style=\"color: #24292F\"> {venderA, venderB, venderC};</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">bestQuote</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">quotes</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">}</span></span></code></pre>"},"edit-debug-run-in-vscode":{"frontmatter":{"title":"Edit, debug, and run in VSCode","description":"Tired of disjointed toolchains disrupting your workflow? Take control of your integration development with Ballerina. Realize your ideas in VSCode, use your favorite tools, and store them in Git.","url":"","image":"images/edit-debug-diagraam-v4.png"},"code":""},"github-copilot":{"frontmatter":{"title":"GitHub copilot, your artificially intelligent pair programmer","description":"GitHub Copilot knows Ballerina. Why do all the work? Let Copilot do at least half of it.","url":"","image":"images/github-copilot.png"},"code":""},"incredible-data-transformations":{"frontmatter":{"title":"Incredible data transformations","description":"Ballerina has cracked the challenge of mapping one kind of data value to another kind of data value, simultaneously as code and picture, so that both are simple, powerful, and boundless.","url":"https://github.com/ballerina-guides/integration-samples/blob/main/clientary_invoices_to_quickbooks_online_invoices/main.bal#L75'","image":"images/data-transformation.png"},"code":""},"network-data-program-data":{"frontmatter":{"title":"Network data == program data","description":"Processing data coming or going over the wire is a no-brainer with Ballerina. Seamlessly and selectively map network data into domain types for a range of formats, including JSON, EDI, and XML.","url":"https://github.com/ballerina-guides/integration-samples/blob/main/github-pull-requests-to-stdout/main.bal#L22","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #ffffff\"><code><span class=\"line\"><span style=\"color: #CF222E\">configurable</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> githubPAT </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">?</span><span style=\"color: #24292F\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #CF222E\">type</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">PR</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">record</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> url;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> title;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> state;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> created_at;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> updated_at;</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">main</span><span style=\"color: #24292F\">() </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">error?</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    http</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Client github </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">new</span><span style=\"color: #24292F\"> (</span><span style=\"color: #0A3069\">&quot;https://api.github.com/repos&quot;</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">map&lt;</span><span style=\"color: #0550AE\">string</span><span style=\"color: #CF222E\">&gt;</span><span style=\"color: #24292F\"> headers </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #0A3069\">&quot;Accept&quot;</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">&quot;application/vnd.github.v3+json&quot;</span><span style=\"color: #24292F\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #0A3069\">&quot;Authorization&quot;</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">&quot;token &quot;</span><span style=\"color: #24292F\"> + githubPAT</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #6E7781\">// Network data == program data</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    PR[] prs </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> github</span><span style=\"color: #CF222E\">-&gt;/</span><span style=\"color: #24292F\">octocat</span><span style=\"color: #CF222E\">/</span><span style=\"color: #24292F\">Hello\\</span><span style=\"color: #CF222E\">-</span><span style=\"color: #24292F\">World</span><span style=\"color: #CF222E\">/</span><span style=\"color: #8250DF\">pulls</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">headers</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    io</span><span style=\"color: #CF222E\">:</span><span style=\"color: #8250DF\">println</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">prs</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">}</span></span></code></pre>"},"resilience-engineering-built-in":{"frontmatter":{"title":"Resilience engineering, built-in","description":"Ballerinaâ€™s built-in language and standard library features make programming in the failure-is-normal world of distributed systems as easy for every developer.","url":"https://github.com/ballerina-guides/integration-samples/blob/main/gcalendar-new-event-to-trello-card/main.bal#L18","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #ffffff\"><code><span class=\"line\"><span style=\"color: #24292F\">http</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">RetryConfig retryConfig </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    interval</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">3</span><span style=\"color: #24292F\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    count</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">3</span><span style=\"color: #24292F\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    backOffFactor</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">2.0</span><span style=\"color: #24292F\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    maxWaitInterval</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">20</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">};</span></span>\n<span class=\"line\"><span style=\"color: #CF222E\">final</span><span style=\"color: #24292F\"> trello</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Client trello </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">new</span><span style=\"color: #24292F\"> (</span><span style=\"color: #953800\">apiKeyConfig</span><span style=\"color: #24292F\">, {retryConfig});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #CF222E\">service</span><span style=\"color: #24292F\"> calendar:CalendarService </span><span style=\"color: #CF222E\">on</span><span style=\"color: #24292F\"> calendarListener {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">remote</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">onNewEvent</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">calendar</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Event payload) </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">error?</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #6E7781\">// Mapping from Google Calendar Event to Trello Card</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        trello</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Cards card </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">transform</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">payload</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #6E7781\">// Add the card to the Trello list</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">        </span><span style=\"color: #0550AE\">var</span><span style=\"color: #24292F\"> _ </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">check</span><span style=\"color: #24292F\"> trello</span><span style=\"color: #CF222E\">-&gt;</span><span style=\"color: #8250DF\">addCards</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">card</span><span style=\"color: #24292F\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">remote</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">onEventDelete</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">calendar</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Event payload) </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">error?</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">remote</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">onEventUpdate</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">calendar</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\">Event payload) </span><span style=\"color: #CF222E\">returns</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">error?</span><span style=\"color: #24292F\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292F\">}</span></span></code></pre>"},"trivial-hosting-in-wso2-choreo-ipaas":{"frontmatter":{"title":"(Extra!) Trivial hosting in WSO2 Choreo iPaaS","description":"Manual integrations? Scheduled integrations (cron jobs)? Triggered integrations? Integrations as APIs? No problem! Write the code, attach the repo to WSO2 Choreo, and let it do the rest.","url":"https://wso2.com/choreo/ipaas/","image":"images/choreo-ipaas-image-v2.png"},"code":""}}},"__N_SSG":true}