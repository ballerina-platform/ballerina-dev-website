{"pageProps":{"frontmatter":{"layout":"ballerina-sending-a-message-to-a-service-left-nav-pages-swanlake","title":"Sending a message to a service","permalink":"/learn/sending-a-message-to-a-service/","description":"Integration tutorial for sending a message to a service.","keywords":"ballerina, programming language, client, restful-api, integration","active":"sending-a-message-to-a-service","intro":"This tutorial helps you understand the basics of how Ballerina can be used to do client calls and develop RESTful APIs."},"content":"\n## Overview\n\nIn this tutorial, you will develop a service that allows a user to retrieve a list of doctors based on the doctor's specialization (category). The information about the doctors is retrieved from a separate microservice. \n\nTo implement this use case, you will develop a REST service with a single resource using Visual Studio Code with the Ballerina Swan Lake extension, and then, run the service. The resource will receive the user request, retrieve details from the backend service, and respond to the user request with the relevant doctor details.\n\n### Concepts covered\n\n- REST API\n- HTTP client\n\n## Develop the application\n\n### Step 1: Set up the workspace\n\nInstall [Ballerina Swan Lake](https://ballerina.io/downloads/) and the [Ballerina Swan Lake extension](https://marketplace.visualstudio.com/items?itemName=wso2.ballerina) on VS Code.\n\n### Step 2: Develop the service\n\nFollow the instructions given in this section to develop the service.\n\n1. Create a new Ballerina project using the `bal` command and open it in VS Code.\n\n    ```\n    $ bal new sending-a-message-to-a-service\n    ```\n\n2. Introduce the source code in files with the `.bal` extension (e.g., the `main.bal` file). \n\n    Import the \n    - `ballerina/http` module to develop the REST API and define the client that can be used to send requests to the backend service\n    - `ballerina/log` module to log some information for each client request\n\n    ```ballerina\n    import ballerina/http;\n    import ballerina/log;\n    ```\n\n3. Define two [configurable variables](https://ballerina.io/learn/by-example/#configurability) for the port on which the listener should listen and the URL of the backend service.\n\n    ```ballerina\n    configurable int port = 8290;\n    configurable string healthcareBackend = \"http://localhost:9090/healthcare\";\n    ```\n\n4. Define an [`http:Client` client](https://ballerina.io/learn/by-example/#http-client) to send requests to the backend service.\n\n    ```ballerina\n    final http:Client queryDoctorEP = check initializeHttpClient();\n\n    function initializeHttpClient() returns http:Client|error => new (healthcareBackend);\n    ```\n\n    The argument to the `new` expression is the URL for the backend service.\n\n5. Define a record corresponding to the payload from the backend service.\n\n    ```ballerina\n    type Doctor record {|\n        string name;\n        string hospital;\n        string category;\n        string availability;\n        decimal fee;\n    |};\n    ```\n\n    The payload will be an array of JSON objects in which, the structure of each JSON object matches this record. Note that you can use the \"Paste JSON as record\" VS Code command to generate the record if you have the JSON payload.\n\n6. Define the [HTTP service (REST API)](https://ballerina.io/learn/by-example/#rest-service) that has the resource that accepts user requests, retrieves relevant details from the backend service, and responds to the request. Use `/healthcare` as the service path (or the context) of the service, which is attached to the listener listening on port `port`. Define an HTTP resource that allows the `GET` operation on resource path `/querydoctor` and accepts the `category` (corresponding to the specialization) as a path parameter.\n\n    ```ballerina\n    service /healthcare on new http:Listener(port) {\n        resource function get querydoctor/[string category]() {\n            \n        }\n    }\n    ```\n\n7. Implement the logic to retrieve and respond with relevant details.\n\n    ```ballerina\n    service /healthcare on new http:Listener(port) {\n        resource function get querydoctor/[string category]() \n                returns Doctor[]|http:NotFound|http:InternalServerError {\n            log:printInfo(\"Retrieving information\", specialization = category);\n            \n            Doctor[]|http:ClientError resp = queryDoctorEP->/[category];\n            if resp is Doctor[] {\n                return resp;\n            }\n\n            if resp is http:ClientRequestError {\n                return <http:NotFound> {body: string `category not found: ${category}`};\n            }\n\n            return <http:InternalServerError> {body: resp.message()};\n        }\n    }\n    ```\n\n    - The `log:printInfo` statement [logs](https://ballerina.io/learn/by-example/#log) information about the request.\n\n        ```ballerina\n        log:printInfo(\"Retrieving information\", specialization = category);\n        ```\n\n    - The call to the backend is done using a remote method call expression (using `->`), which distinguishes network calls from normal method calls. [Client data binding](https://ballerina.io/learn/by-example/http-client-data-binding/) is used to directly try and bind the JSON response on success to the expected array of records.\n\n        ```ballerina\n        Doctor[]|http:ClientError resp = queryDoctorEP->/[category];\n        ```\n\n    - Use the `is` check to decide the response based on the response to the client call. If the client call was successful and the respond payload was an array of `Doctor` records (as expected), then, directly return the array from the resource. If the request failed, send an `http:NotFound` response if the client call failed with a `4xx` status code or return an `http:InternalServerError` response for other failures.\n\n        ```ballerina\n        log:printInfo(\"Retrieving information\", specialization = category);\n\n        Doctor[]|http:ClientError resp = queryDoctorEP->/[category];\n        if resp is Doctor[] {\n            return resp;\n        }\n\n        log:printError(\"Retrieving doctor information failed\", resp);\n        if resp is http:ClientRequestError {\n            return <http:NotFound> {body: string `category not found: ${category}`};\n        }\n\n        return <http:InternalServerError> {body: resp.message()};\n        ```\n\nYou have successfully developed the required service.\n\n#### Complete source\n\n```ballerina\nimport ballerina/http;\nimport ballerina/log;\n\ntype Doctor record {|\n    string name;\n    string hospital;\n    string category;\n    string availability;\n    decimal fee;\n|};\n\nconfigurable int port = 8290;\nconfigurable string healthcareBackend = \"http://localhost:9090/healthcare\";\n\nfinal http:Client queryDoctorEP = check initializeHttpClient();\n\nfunction initializeHttpClient() returns http:Client|error => new (healthcareBackend);\n\nservice /healthcare on new http:Listener(port) {\n    resource function get querydoctor/[string category]() \n            returns Doctor[]|http:NotFound|http:InternalServerError {\n        log:printInfo(\"Retrieving information\", specialization = category);\n        \n        Doctor[]|http:ClientError resp = queryDoctorEP->/[category];\n        if resp is Doctor[] {\n            return resp;\n        }\n        \n        log:printError(\"Retrieving doctor information failed\", resp);\n        if resp is http:ClientRequestError {\n            return <http:NotFound> {body: string `category not found: ${category}`};\n        }\n\n        return <http:InternalServerError> {body: resp.message()};\n    }\n}\n```\n\n#### Sequence diagram\n\nThe [sequence diagram view](https://wso2.com/ballerina/vscode/docs/implement-the-code/sequence-diagram-view/) for the implemented resource method is the following.\n\n<img src=\"/learn/images/tutorial_sending_a_message_to_a_service.png\" alt=\"Sequence Diagram\" height=\"800\" style=\"width:auto; max-width:100%\">\n\n### Step 3: Build and run the service\n\nYou can run this service by navigating to the project root and using the `bal run` command.\n\n```\nsending-a-message-to-a-service$ bal run\nCompiling source\n        integration_tutorials/sending_a_message_to_a_service:0.1.0\n\nRunning executable\n```\n\n### Step 4: Try out the use case\n\nLet's test the use case by sending a request to the service.\n\n#### Start the backend service\n\nDownload the JAR file for the [backend service](https://github.com/ballerina-guides/integration-tutorials/blob/main/backends/hospital-service/hospitalservice.jar), and execute the following command to start the service:\n\n```\n$ bal run hospitalservice.jar\n```\n\n#### Send a request\n\nLet's send a request to the service using cURL as follows.\n\n1. Install and set up [cURL](https://curl.se/) as your client.\n\n2. Execute the following command.\n\n    ```\n    $ curl -v http://localhost:8290/healthcare/querydoctor/surgery\n    ```\n\n#### Verify the response\n\nYou will see the response message from the backend with a list of details of the available doctors.\n\n```json\n[\n    {\n        \"name\": \"thomas collins\",\n        \"hospital\": \"grand oak community hospital\",\n        \"category\": \"surgery\",\n        \"availability\": \"9.00 a.m - 11.00 a.m\",\n        \"fee\": 7000.0\n    },\n    {\n        \"name\": \"anne clement\",\n        \"hospital\": \"clemency medical center\",\n        \"category\": \"surgery\",\n        \"availability\": \"8.00 a.m - 10.00 a.m\",\n        \"fee\": 12000.0\n    },\n    {\n        \"name\": \"seth mears\",\n        \"hospital\": \"pine valley community hospital\",\n        \"category\": \"surgery\",\n        \"availability\": \"3.00 p.m - 5.00 p.m\",\n        \"fee\": 8000.0\n    }\n]\n```\n\nNow, check the terminal in which you ran the Ballerina service. You should see a log similar to the following.\n\n```\ntime = 2023-08-15T13:01:34.022+05:30 level = INFO module = integration_tutorials/sending_a_message_to_a_service message = \"Retrieving information\" specialization = \"surgery\"\n```\n\n### Step 5: Write tests for the use case\n\nLet's test the use case by writing a test case that sends a request to the service and validates the payload for a successful request. Testing is enabled by the [Ballerina test framework](https://ballerina.io/learn/test-ballerina-code/test-services-and-clients/).\n\n1. Introduce the tests in a `.bal` file within a directory named `tests` in the package. Import the `ballerina/test` module to use the Ballerina test framework and the `ballerina/http` module to use an `http:Client` client object to send requests to the implemented service and mock the backend service.\n\n    ```ballerina\n    import ballerina/http;\n    import ballerina/test;\n    ```\n\n2. Mock the backend service by mocking the `http:Client` object and the `get` resource method. Then, mock the `initializeHttpClient` function, using the `@test:Mock` annotation, to return the mock HTTP client.\n\n    ```ballerina\n    public client class MockHttpClient {\n        isolated resource function get [string... path](map<string|string[]>? headers = (), \n                                                        http:TargetType targetType = http:Response,\n                                                        *http:QueryParams params) \n                                                    returns http:Response|anydata|http:ClientError {\n            match path[0] {\n                \"surgery\" => {\n                    return getSurgeryResponsePayload();\n                }\n            }\n            return <http:ClientRequestError> error (\"unknown specialization\", \n                                                body = string `unknown specialization: ${path[0]}`, \n                                                headers = {}, \n                                                statusCode = http:STATUS_NOT_FOUND);\n        }\n    }\n\n    @test:Mock {\n        functionName: \"initializeHttpClient\"\n    }\n    function initializeHttpClientMock() returns http:Client|error =>\n        test:mock(http:Client, new MockHttpClient());\n    ```\n\n3. Use the `@test:Config` annotation to indicate that a function is a test function. Implement the test to send a request to the service and test for value equality between the retrieved payload and the expected payload using the `test:assertEquals` function.\n\n    ```ballerina\n    @test:Config\n    function testSuccessfulRequest() returns error? {\n        Doctor[] doctors = check cl->/surgery;\n        test:assertEquals(doctors, getSurgeryResponsePayload());\n    }\n    ```\n\n4. Run the `bal test` command from the project root to run the tests.\n\n    ```\n    sending-a-message-to-a-service$ bal test\n    Compiling source\n            integration_tutorials/sending_a_message_to_a_service:0.1.0\n\n    Running Tests\n\n            sending_a_message_to_a_service\n    time = 2023-08-17T09:01:23.758+05:30 level = INFO module = integration_tutorials/sending_a_message_to_a_service message = \"Retrieving information\" specialization = \"surgery\"\n\n\n                    1 passing\n                    0 failing\n                    0 skipped\n    ```\n\nYou have now developed and tested a simple Ballerina REST service, which receives a request, logs a message, sends a request to a backend service, and responds to the original request with the response from the backend service.\n\n## Complete implementation\n\nCheck out the [complete implementation](https://github.com/ballerina-guides/integration-tutorials/tree/main/sending-a-message-to-a-service) on GitHub.\n\n## References\n\n- [`ballerina/http` API docs](https://lib.ballerina.io/ballerina/http/latest)\n- [`ballerina/log` API docs](https://lib.ballerina.io/ballerina/log/latest)\n- [`ballerina/test` API docs](https://lib.ballerina.io/ballerina/test/latest)\n","slug":"sending-a-message-to-a-service","codes":"[[-539073824,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/http;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/log;</span></span></code></pre>\"],[1933303010,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">configurable</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> port </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">8290</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">configurable</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> healthcareBackend </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;http://localhost:9090/healthcare&quot;</span><span style=\\\"color: #24292E\\\">;</span></span></code></pre>\"],[1590572071,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">final</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Client queryDoctorEP </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">check</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">initializeHttpClient</span><span style=\\\"color: #24292E\\\">();</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">initializeHttpClient</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Client</span><span style=\\\"color: #D73A49\\\">|error</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=&gt;</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #E36209\\\">healthcareBackend</span><span style=\\\"color: #24292E\\\">);</span></span></code></pre>\"],[1328887029,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Doctor</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> hospital;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> category;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> availability;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">decimal</span><span style=\\\"color: #24292E\\\"> fee;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[294272076,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">/healthcare</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> http:Listener(</span><span style=\\\"color: #E36209\\\">port</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">resource</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">get</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">querydoctor</span><span style=\\\"color: #24292E\\\">/[</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">category</span><span style=\\\"color: #24292E\\\">]() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[565093922,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">/healthcare</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> http:Listener(</span><span style=\\\"color: #E36209\\\">port</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">resource</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">get</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">querydoctor</span><span style=\\\"color: #24292E\\\">/[</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">category</span><span style=\\\"color: #24292E\\\">]() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> Doctor[]</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">NotFound</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http:InternalServerError {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        log</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">printInfo</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Retrieving information&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">specialization</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> category);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        Doctor[]</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">ClientError resp </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> queryDoctorEP</span><span style=\\\"color: #D73A49\\\">-&gt;/</span><span style=\\\"color: #24292E\\\">[category];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> resp </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> Doctor[] {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> resp;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> resp </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">ClientRequestError {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">NotFound</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> {body</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> string </span><span style=\\\"color: #032F62\\\">`category not found: ${</span><span style=\\\"color: #24292E\\\">category</span><span style=\\\"color: #032F62\\\">}`</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">InternalServerError</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> {body</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> resp.</span><span style=\\\"color: #6F42C1\\\">message</span><span style=\\\"color: #24292E\\\">()};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[1014309238,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">log</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">printInfo</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Retrieving information&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">specialization</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> category);</span></span></code></pre>\"],[791774642,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Doctor[]</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">ClientError resp </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> queryDoctorEP</span><span style=\\\"color: #D73A49\\\">-&gt;/</span><span style=\\\"color: #24292E\\\">[category];</span></span></code></pre>\"],[-869984733,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">log</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">printInfo</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Retrieving information&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">specialization</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> category);</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Doctor[]</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">ClientError resp </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> queryDoctorEP</span><span style=\\\"color: #D73A49\\\">-&gt;/</span><span style=\\\"color: #24292E\\\">[category];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> resp </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> Doctor[] {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> resp;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">log</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">printError</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Retrieving doctor information failed&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">resp</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> resp </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">ClientRequestError {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">NotFound</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> {body</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> string </span><span style=\\\"color: #032F62\\\">`category not found: ${</span><span style=\\\"color: #24292E\\\">category</span><span style=\\\"color: #032F62\\\">}`</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">InternalServerError</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> {body</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> resp.</span><span style=\\\"color: #6F42C1\\\">message</span><span style=\\\"color: #24292E\\\">()};</span></span></code></pre>\"],[32805270,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/http;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/log;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Doctor</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> hospital;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> category;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> availability;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">decimal</span><span style=\\\"color: #24292E\\\"> fee;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">configurable</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> port </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">8290</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">configurable</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> healthcareBackend </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;http://localhost:9090/healthcare&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">final</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Client queryDoctorEP </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">check</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">initializeHttpClient</span><span style=\\\"color: #24292E\\\">();</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">initializeHttpClient</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Client</span><span style=\\\"color: #D73A49\\\">|error</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=&gt;</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #E36209\\\">healthcareBackend</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">/healthcare</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> http:Listener(</span><span style=\\\"color: #E36209\\\">port</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">resource</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">get</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">querydoctor</span><span style=\\\"color: #24292E\\\">/[</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">category</span><span style=\\\"color: #24292E\\\">]() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> Doctor[]</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">NotFound</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http:InternalServerError {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        log</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">printInfo</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Retrieving information&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">specialization</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> category);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        Doctor[]</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">ClientError resp </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> queryDoctorEP</span><span style=\\\"color: #D73A49\\\">-&gt;/</span><span style=\\\"color: #24292E\\\">[category];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> resp </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> Doctor[] {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> resp;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        log</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">printError</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Retrieving doctor information failed&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">resp</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> resp </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">ClientRequestError {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">NotFound</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> {body</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> string </span><span style=\\\"color: #032F62\\\">`category not found: ${</span><span style=\\\"color: #24292E\\\">category</span><span style=\\\"color: #032F62\\\">}`</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">InternalServerError</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> {body</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> resp.</span><span style=\\\"color: #6F42C1\\\">message</span><span style=\\\"color: #24292E\\\">()};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1431345120,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">[</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;name&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;thomas collins&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;hospital&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;grand oak community hospital&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;category&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;surgery&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;availability&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;9.00 a.m - 11.00 a.m&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;fee&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #005CC5\\\">7000.0</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;name&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;anne clement&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;hospital&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;clemency medical center&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;category&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;surgery&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;availability&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;8.00 a.m - 10.00 a.m&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;fee&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #005CC5\\\">12000.0</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;name&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;seth mears&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;hospital&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;pine valley community hospital&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;category&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;surgery&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;availability&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #032F62\\\">&quot;3.00 p.m - 5.00 p.m&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">&quot;fee&quot;</span><span style=\\\"color: #24292E\\\">: </span><span style=\\\"color: #005CC5\\\">8000.0</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">]</span></span></code></pre>\"],[475684256,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/http;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/test;</span></span></code></pre>\"],[1838933736,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">client class</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">MockHttpClient</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">isolated</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">resource</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">get</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">...</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">path</span><span style=\\\"color: #24292E\\\">](</span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\">? </span><span style=\\\"color: #E36209\\\">headers</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> (), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                                                    http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">TargetType targetType </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Response,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                                                    </span><span style=\\\"color: #D73A49\\\">*</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">QueryParams params) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                                                </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Response</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">anydata</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">http:ClientError {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">match</span><span style=\\\"color: #24292E\\\"> path[</span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">] {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #032F62\\\">&quot;surgery&quot;</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=&gt;</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getSurgeryResponsePayload</span><span style=\\\"color: #24292E\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">ClientRequestError</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">error</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #032F62\\\">&quot;unknown specialization&quot;</span><span style=\\\"color: #24292E\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                                            </span><span style=\\\"color: #E36209\\\">body</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">`unknown specialization: ${</span><span style=\\\"color: #24292E\\\">path</span><span style=\\\"color: #032F62\\\">[</span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #032F62\\\">]</span><span style=\\\"color: #032F62\\\">}`</span><span style=\\\"color: #24292E\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                                            </span><span style=\\\"color: #E36209\\\">headers</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {}, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                                            </span><span style=\\\"color: #E36209\\\">statusCode</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">STATUS_NOT_FOUND);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Mock</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    functionName</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;initializeHttpClient&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">initializeHttpClientMock</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Client</span><span style=\\\"color: #D73A49\\\">|error</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    test</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">mock</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">http</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Client, </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">MockHttpClient</span><span style=\\\"color: #24292E\\\">());</span></span></code></pre>\"],[-1817740955,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Config</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">testSuccessfulRequest</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">error?</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    Doctor[] doctors </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">check</span><span style=\\\"color: #24292E\\\"> cl</span><span style=\\\"color: #D73A49\\\">-&gt;/</span><span style=\\\"color: #24292E\\\">surgery;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    test</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">assertEquals</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">doctors</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">getSurgeryResponsePayload</span><span style=\\\"color: #24292E\\\">());</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"]]"},"__N_SSG":true}