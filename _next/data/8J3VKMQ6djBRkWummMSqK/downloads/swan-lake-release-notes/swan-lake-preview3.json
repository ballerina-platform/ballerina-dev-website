{"pageProps":{"frontmatter":{"layout":"ballerina-left-nav-release-notes","title":"Swan Lake Preview 3","permalink":"/downloads/swan-lake-release-notes/swan-lake-preview3/","active":"swan-lake-preview3","redirect_from":["/downloads/swan-lake-release-notes/swan-lake-preview3"]},"content":"### Overview of Ballerina Swan Lake Preview 3\n\nThis release is the third preview version of Ballerina Swan Lake. This release includes a new set of language features along with improvements and bug fixes to the compiler, runtime, standard libraries, and developer tooling.\n\nYou can use the update tool to update to Ballerina Swan Lake Preview 3 as follows.\n\n**For existing users:**\n\nIf you are already using jBallerina, you can directly update your distribution to the Swan Lake channel using the [Ballerina update tool](/learn/update-tool/). To do this, first, execute the command below to get the update tool updated to its latest version. \n                        \n> `ballerina update`\n\n Next, execute the command below to update to Swan Lake Preview 3.\n\n > `ballerina dist pull slp3`                  \n\nHowever, if you are using a jBallerina version below 1.1.0, install via the [installers](https://ballerina.io/downloads/).\n\n**For new users:**\n\nIf you have not installed jBallerina, then download the [installers](https://ballerina.io/downloads/) to install.\n\n### Highlights\n\n- Support for defining external object method bodies\n- Order by clause for sorting\n- Inner/Nested query expressions \n- Support for executing stored procedures in the SQL connector\n- Azure Functions support\n\n### What's new in Ballerina Swan Lake Preview 3\n\n#### Language\n\nThe language implementation is based on [Ballerina Language Specifications Draft 2020-06-18](https://ballerina.io/spec/lang/draft/v2020-06-18/).\n\n##### External object method bodies\n\nThis release introduces support for defining object methods with external function bodies.\n\n```ballerina\ntype Person object {\n    string fname;\n    string lname;\n\n    function init(string fname, string lname) {\n        self.lname = lname;\n        self.fname = fname;\n    }\n\n    function getFullName() returns string = @java:Method {\n        class: \"abc.Hello\"\n    } external;\n};\n```\n\nThe Java method to which the `getFullName()` method is bound:\n\n```java\npublic static BString getFullName(ObjectValue objectValue) {\n        return objectValue.getStringValue(new BmpStringValue(\"fname\")).concat(new BmpStringValue(\" \")).concat(\n                    objectValue.getStringValue(new BmpStringValue(\"lname\")));\n}\n```\n\n##### `Order by` clause for sorting \n\nThis release introduces the `order by` clause support for sorting in query expression/action. An order-by clause is executed by constructing a list of entries.\n\n```ballerina\nStudent s1 = {id: 1, fname: \"John\", fee: 2000.56, age: 20};\nStudent s2 = {id: 2, fname: \"John\", fee: 2000.56, age: 22};\nStudent s3 = {id: 3, fname: \"Roger\", fee: 4000.56, age: 21};\nStudent s4 = {id: 4, fname: \"Kate\", fee: 2000.56, age: 24};\n\nStudent[] studentList = [s1, s2, s3, s4];\n\nStudent[] sortedList =  from var student in studentList\n                        order by student.age ascending, student.fname\n                        select student;\n```\n\n##### Inner/Nested query expressions\n\nThis release introduces the support to write inner/nested query expression/action.\n\n```ballerina\nPerson[] personList = [\n    {id: 1, fname: \"Alex\", lname: \"George\"},\n    {id: 2, fname: \"Ranjan\", lname: \"Fonseka\"},\n    {id: 3, fname: \"Idris\", lname: \"Elba\"},\n    {id: 4, fname: \"Dermot\", lname: \"Crowley\"}\n];\n\nDepartment[] deptList = [\n    {id: 1, name:\"HR\"},\n    {id: 2, name:\"Operations\"},\n    {id: 3, name:\"Engineering\"}\n];\n\nEmployee[] empList = [\n    {personId: 1, deptId: 2},\n    {personId: 2, deptId: 1},\n    {personId: 3, deptId: 3},\n    {personId: 4, deptId: 3}\n];\n\n\nDeptPerson[] deptPersonList =\n        from var emp in (from var e in empList select e)\n        join Person psn in (from var p in personList select p)\n            on emp.personId equals psn.id\n        join Department dept in (from var d in deptList select d)\n            on emp.deptId equals dept.id\n        select {\n            fname : psn.fname,\n            lname : psn.lname,\n            dept : dept.name\n        };\n```\n\n#### Standard library\n\n##### SQL connectors\n\nStored procedures can now be executed through SQL connectors (JDBC & MySQL). \n\n```ballerina\nint uid = 10;\nsql:OutParameter insertId = new;\n\nvar ret = dbClient->call(`call InsertPerson(${uid}, ${insertId})`);\nif (ret is error) {\n    io:println(\"Error occurred:\", err.message());\n} else {\n    io:println(\"Out Parameter insert id: \", insertId.get(int));\n    stream<record{}, sql:Error>? resultStr = ret.queryResult;\n    if (!(resultStr is ())) {\n        sql:Error? e = resultStr.forEach(function(record{} result) {\n        io:println(\"Full Customer details: \", result);\n      });\n    } else {\n        io:println(\"Stored  procedure does not return anything.\");\n    }\n}\n\n```\n##### Module organization\n\nThe `ballerina/nats` library was moved to Ballerina Central. Previously, this module was packed in the Ballerina distribution. With this change, this library can now be released independently.\n\n#### Developer tools\n\n##### Language server\n\n###### Introducing AI-based `Data Mapping` code action\n\nTwo record types can now be mapped automatically using the `Data Mapping` code action. Once a possible record mapping instance is identified, it suggests a mapping based on an AI algorithm. A mapping function will be generated automatically and added to the workspace to perform the record mapping.\n\nThe following is a sample in which the code action to generate a mapping function will appear when attempting to assign a mapping value to a variable of a type that is not directly assignable. \n\n```ballerina\ntype Grade record {|\n   int maths;\n   int physics;\n   int chemistry;\n|};\n \ntype NameAndGrade record {|\n   string name;\n   string surname;\n   int maths;\n   int physics;\n   int chemistry;\n|};\n \npublic function main() {\n   NameAndGrade student = {\n\tname: \"Kamal\",\n\tsurname: “Perera”,\n\tmaths: 90,\nphysics: 99,\nchemistry: 95\n   };\n   Grade grades = student;\n}\n```\nBy choosing the `Generate mapping function`code action, the following function will be added to the workspace.\n\n```ballerina\nfunction mapNameAndGradeToGrade(NameAndGrade nameAndGrade) returns Grade {\n// Some record fields might be missing in the AI-based mapping.\n   Grade grade = {\nmaths: nameAndGrade.maths, \nphysics: nameAndGrade.physics, \nchemistry: nameAndGrade.chemistry};\n   return grade;\n}\n```\n\nFurthermore, the line with the error would be replaced with a function call as shown below.\n\n```ballerina\nGrade grades = mapNameAndGradeToGrade(student);\n```\n\nFor more information, see [Code actions](https://wso2.com/ballerina/vscode/docs/write-the-code/code-actions/).\n\n##### Test framework\n\n###### Support single test execution\n\nA single test function or a set of functions can now be executed using the `--tests` flag as follows.\n\n```cmd\n$ ballerina test --tests <test_function> --all\n```\n\n###### API change in `assertEquals` and `assertNotEquals` functions\n\nDeep value equality is supported only for `anydata`-typed values according to the language specification. The `assertEquals` function has been changed to accept only  `anydata`-typed values to reflect this behavior.\n\n###### Introduction of the `assertExactEquals` and `assertNotExactEquals` functions\n\nThe `assertExactEquals` function compares two values to assert whether they refer to the same entity (i.e., they are exactly equal). \n\n```ballerina\nimport ballerina/test;\n\ntype Person object {\n    public string name = \"\";\n    public int age = 0;\n    public Person? parent = ();\n    private string email = \"default@abc.com\";\n    string address = \"No 20, Palm grove\";\n};\n\n@test:Config {}\nfunction testAssertObjectEquals() {\n   Person p1 = new;\n   Person p2 = p1;\n   test:assertExactEquals(p1, p2);\n}\n\n@test:Config {}\nfunction testAssertObjectNotEquals() {\n    Person p1 = new;\n    Person p2 = new ();\n    test:assertNotExactEquals(p1, p2);\n}\n\n```\n\n###### Introduction of the `@test:BeforeGroups` and `@test:AfterGroups` functions\n\nThese two new annotations can now be used when writing tests with the Ballerina test framework.\n\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n@test:BeforeGroups { value : [\"group1\"] }\nfunction beforeGroupsFunc() {\n\tio:println(“I’m a before groups function!”)\n}\n\n@test:Config {}\nfunction testFunction() {\n\tio:println(“I’m a test function!”)\n\n}\n\n@test:AfterGroups { value : [\"group1\"] }\nfunction afterGroupsFunc() {\n\tio:println(“I’m a after groups function!”)\n\n}\n```\n\n###### Introduction of the `alwaysRun` field to the `@test:AfterSuite` annotation\n\nYou can now specify `alwaysRun : true|false` in the `@AfterSuite` annotation, which enables running the `@AfterSuite` even if the `@BeforeSuite` function fails during the test execution. The default value is `false`.\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n\n@test:BeforeSuite\nfunction beforeSuiteFunc() {\n\tio:println(\"I’m the before suite function\");\n\tint a = 2/0;\n}\n\n@test:AfterSuite {}\nfunction afterSuiteFunc1() {\n\tio:println(\"I will be run only if before suite function executes successfully.\");\n}\n\n@test:AfterSuite { alwaysRun:true }\nfunction afterSuiteFunc2() {\n\tio:println(\"I will be run even if the before suite function fails.\");\n}\n```\n\n#### Code to Cloud\n\n##### Azure Functions support\n\nBallerina now supports writing serverless functions using the Azure Functions framework. \n\n```ballerina\nimport ballerina/http;\nimport ballerinax/azure.functions as af;\n\n@af:Function\npublic function fromHttpToQueue(af:Context ctx,\n        \t@af:HTTPTrigger {} af:HTTPRequest req,\n        \t@af:QueueOutput { queueName: \"queue1\" } af:StringOutputBinding msg)\n        \treturns @af:HTTPOutput af:HTTPBinding {\n\tmsg.value = req.body;\n\treturn { statusCode: 200, payload: \"Request: \" + req.toString() };\n}\n```\n\nFor more information, see [Azure Functions](https://ballerina.io/learn/azure-functions/).","id":"swan-lake-preview3","codeSnippets":"[[1532346427,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Person</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">object</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> fname;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> lname;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">init</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">fname</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">lname</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">self</span><span style=\\\"color: #24292E\\\">.lname </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> lname;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #005CC5\\\">self</span><span style=\\\"color: #24292E\\\">.fname </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> fname;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getFullName</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> @</span><span style=\\\"color: #005CC5\\\">java</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Method</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">        class</span><span style=\\\"color: #24292E\\\">: &quot;</span><span style=\\\"color: #6F42C1\\\">abc</span><span style=\\\"color: #24292E\\\">.</span><span style=\\\"color: #6F42C1\\\">Hello</span><span style=\\\"color: #24292E\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    } </span><span style=\\\"color: #D73A49\\\">external</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[390965058,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">static</span><span style=\\\"color: #24292E\\\"> BString </span><span style=\\\"color: #6F42C1\\\">getFullName</span><span style=\\\"color: #24292E\\\">(ObjectValue objectValue) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> objectValue.</span><span style=\\\"color: #6F42C1\\\">getStringValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">BmpStringValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;fname&quot;</span><span style=\\\"color: #24292E\\\">)).</span><span style=\\\"color: #6F42C1\\\">concat</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">BmpStringValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot; &quot;</span><span style=\\\"color: #24292E\\\">)).</span><span style=\\\"color: #6F42C1\\\">concat</span><span style=\\\"color: #24292E\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                    objectValue.</span><span style=\\\"color: #6F42C1\\\">getStringValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">BmpStringValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;lname&quot;</span><span style=\\\"color: #24292E\\\">)));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-792619159,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Student s1 </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">, fname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;John&quot;</span><span style=\\\"color: #24292E\\\">, fee</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2000.56</span><span style=\\\"color: #24292E\\\">, age</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">20</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Student s2 </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2</span><span style=\\\"color: #24292E\\\">, fname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;John&quot;</span><span style=\\\"color: #24292E\\\">, fee</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2000.56</span><span style=\\\"color: #24292E\\\">, age</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">22</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Student s3 </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">3</span><span style=\\\"color: #24292E\\\">, fname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Roger&quot;</span><span style=\\\"color: #24292E\\\">, fee</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">4000.56</span><span style=\\\"color: #24292E\\\">, age</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">21</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Student s4 </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">4</span><span style=\\\"color: #24292E\\\">, fname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Kate&quot;</span><span style=\\\"color: #24292E\\\">, fee</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2000.56</span><span style=\\\"color: #24292E\\\">, age</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">24</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Student[] studentList </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [s1, s2, s3, s4];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Student[] sortedList </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\">  </span><span style=\\\"color: #D73A49\\\">from</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">var</span><span style=\\\"color: #24292E\\\"> student </span><span style=\\\"color: #D73A49\\\">in</span><span style=\\\"color: #24292E\\\"> studentList</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                        </span><span style=\\\"color: #D73A49\\\">order</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">by</span><span style=\\\"color: #24292E\\\"> student.age </span><span style=\\\"color: #D73A49\\\">ascending</span><span style=\\\"color: #24292E\\\">, student.fname</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">                        </span><span style=\\\"color: #D73A49\\\">select</span><span style=\\\"color: #24292E\\\"> student;</span></span></code></pre>\"],[-1053264933,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Person[] personList </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">, fname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Alex&quot;</span><span style=\\\"color: #24292E\\\">, lname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;George&quot;</span><span style=\\\"color: #24292E\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2</span><span style=\\\"color: #24292E\\\">, fname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Ranjan&quot;</span><span style=\\\"color: #24292E\\\">, lname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Fonseka&quot;</span><span style=\\\"color: #24292E\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">3</span><span style=\\\"color: #24292E\\\">, fname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Idris&quot;</span><span style=\\\"color: #24292E\\\">, lname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Elba&quot;</span><span style=\\\"color: #24292E\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">4</span><span style=\\\"color: #24292E\\\">, fname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Dermot&quot;</span><span style=\\\"color: #24292E\\\">, lname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Crowley&quot;</span><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Department[] deptList </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">, name</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #032F62\\\">&quot;HR&quot;</span><span style=\\\"color: #24292E\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2</span><span style=\\\"color: #24292E\\\">, name</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #032F62\\\">&quot;Operations&quot;</span><span style=\\\"color: #24292E\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">3</span><span style=\\\"color: #24292E\\\">, name</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #032F62\\\">&quot;Engineering&quot;</span><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Employee[] empList </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {personId</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">, deptId</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2</span><span style=\\\"color: #24292E\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {personId</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2</span><span style=\\\"color: #24292E\\\">, deptId</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {personId</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">3</span><span style=\\\"color: #24292E\\\">, deptId</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">3</span><span style=\\\"color: #24292E\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    {personId</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">4</span><span style=\\\"color: #24292E\\\">, deptId</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">3</span><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">DeptPerson[] deptPersonList </span><span style=\\\"color: #D73A49\\\">=</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">from</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">var</span><span style=\\\"color: #24292E\\\"> emp </span><span style=\\\"color: #6F42C1\\\">in </span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #D73A49\\\">from</span><span style=\\\"color: #24292E\\\"> var e </span><span style=\\\"color: #D73A49\\\">in</span><span style=\\\"color: #24292E\\\"> empList </span><span style=\\\"color: #D73A49\\\">select</span><span style=\\\"color: #24292E\\\"> e)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">join</span><span style=\\\"color: #24292E\\\"> Person psn </span><span style=\\\"color: #D73A49\\\">in</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #D73A49\\\">from</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">var</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">p</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">in</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">personList</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">select</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">p</span><span style=\\\"color: #24292E\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> emp.personId </span><span style=\\\"color: #D73A49\\\">equals</span><span style=\\\"color: #24292E\\\"> psn.id</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">join</span><span style=\\\"color: #24292E\\\"> Department dept </span><span style=\\\"color: #D73A49\\\">in</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #D73A49\\\">from</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">var</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">d</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">in</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">deptList</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">select</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">d</span><span style=\\\"color: #24292E\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> emp.deptId </span><span style=\\\"color: #D73A49\\\">equals</span><span style=\\\"color: #24292E\\\"> dept.id</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">select</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            fname </span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> psn.fname,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            lname </span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> psn.lname,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            dept </span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> dept.name</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        };</span></span></code></pre>\"],[862497008,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> uid </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">10</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">sql</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">OutParameter insertId </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">var</span><span style=\\\"color: #24292E\\\"> ret </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> dbClient</span><span style=\\\"color: #D73A49\\\">-&gt;</span><span style=\\\"color: #6F42C1\\\">call</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">`call InsertPerson(${</span><span style=\\\"color: #24292E\\\">uid</span><span style=\\\"color: #032F62\\\">}, ${</span><span style=\\\"color: #24292E\\\">insertId</span><span style=\\\"color: #032F62\\\">})`</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> (ret </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">error</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    io</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Error occurred:&quot;</span><span style=\\\"color: #24292E\\\">, err.</span><span style=\\\"color: #6F42C1\\\">message</span><span style=\\\"color: #24292E\\\">());</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">} </span><span style=\\\"color: #D73A49\\\">else</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    io</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Out Parameter insert id: &quot;</span><span style=\\\"color: #24292E\\\">, insertId.</span><span style=\\\"color: #6F42C1\\\">get</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;record</span><span style=\\\"color: #24292E\\\">{}, sql</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Error</span><span style=\\\"color: #D73A49\\\">&gt;?</span><span style=\\\"color: #24292E\\\"> resultStr </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> ret.queryResult;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #D73A49\\\">!</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">resultStr</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> ())) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        sql</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Error? e </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> resultStr.</span><span style=\\\"color: #6F42C1\\\">forEach</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\">{} </span><span style=\\\"color: #E36209\\\">result</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        io</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Full Customer details: &quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">result</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">      });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    } </span><span style=\\\"color: #D73A49\\\">else</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        io</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;Stored  procedure does not return anything.&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[565585506,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Grade</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> maths;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> physics;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> chemistry;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">NameAndGrade</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> surname;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> maths;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> physics;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> chemistry;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">main</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   NameAndGrade student </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Kamal&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tsurname</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> “Perera”,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tmaths</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">90</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">physics</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">99</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">chemistry</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">95</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Grade grades </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> student;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[344328753,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">mapNameAndGradeToGrade</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">NameAndGrade</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">nameAndGrade</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> Grade {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Some record fields might be missing in the AI-based mapping.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Grade grade </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">maths</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> nameAndGrade.maths, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">physics</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> nameAndGrade.physics, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">chemistry</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> nameAndGrade.chemistry};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> grade;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[608681336,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Grade grades </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">mapNameAndGradeToGrade</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">student</span><span style=\\\"color: #24292E\\\">);</span></span></code></pre>\"],[1318598933,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">$</span><span style=\\\"color: #24292E\\\"> ballerina test </span><span style=\\\"color: #D73A49\\\">--</span><span style=\\\"color: #24292E\\\">tests </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">test_function</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">--</span><span style=\\\"color: #24292E\\\">all</span></span></code></pre>\"],[-253364741,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Person</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">object</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> age </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> Person</span><span style=\\\"color: #D73A49\\\">?</span><span style=\\\"color: #24292E\\\"> parent </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> ();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">private</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> email </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;default@abc.com&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> address </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;No 20, Palm grove&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Config</span><span style=\\\"color: #24292E\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">testAssertObjectEquals</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Person p1 </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Person p2 </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> p1;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   test</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">assertExactEquals</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">p1</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">p2</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Config</span><span style=\\\"color: #24292E\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">testAssertObjectNotEquals</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    Person p1 </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    Person p2 </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> ();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    test</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">assertNotExactEquals</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">p1</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">p2</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-877688046,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">BeforeGroups</span><span style=\\\"color: #24292E\\\"> { value </span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;group1&quot;</span><span style=\\\"color: #24292E\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">beforeGroupsFunc</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tio</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(“</span><span style=\\\"color: #E36209\\\">I</span><span style=\\\"color: #24292E\\\">’</span><span style=\\\"color: #E36209\\\">m</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">a</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">before</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">groups</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\">!”)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Config</span><span style=\\\"color: #24292E\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">testFunction</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tio</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(“</span><span style=\\\"color: #E36209\\\">I</span><span style=\\\"color: #24292E\\\">’</span><span style=\\\"color: #E36209\\\">m</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">a</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">test</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\">!”)</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">AfterGroups</span><span style=\\\"color: #24292E\\\"> { value </span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;group1&quot;</span><span style=\\\"color: #24292E\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">afterGroupsFunc</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tio</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(“</span><span style=\\\"color: #E36209\\\">I</span><span style=\\\"color: #24292E\\\">’</span><span style=\\\"color: #E36209\\\">m</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">a</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">after</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">groups</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\">!”)</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1287757724,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">BeforeSuite</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">beforeSuiteFunc</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tio</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;I’m the before suite function&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\t</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> a </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2</span><span style=\\\"color: #D73A49\\\">/</span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">AfterSuite</span><span style=\\\"color: #24292E\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">afterSuiteFunc1</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tio</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;I will be run only if before suite function executes successfully.&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">test</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">AfterSuite</span><span style=\\\"color: #24292E\\\"> { alwaysRun</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #005CC5\\\">true</span><span style=\\\"color: #24292E\\\"> }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">afterSuiteFunc2</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tio</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">println</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;I will be run even if the before suite function fails.&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-865009424,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/http;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerinax/azure.functions </span><span style=\\\"color: #D73A49\\\">as</span><span style=\\\"color: #24292E\\\"> af;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">af</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">Function</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">fromHttpToQueue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">af</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Context ctx,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        \\t@</span><span style=\\\"color: #005CC5\\\">af</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">HTTPTrigger</span><span style=\\\"color: #24292E\\\"> {} </span><span style=\\\"color: #E36209\\\">af</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">HTTPRequest req,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        \\t@</span><span style=\\\"color: #005CC5\\\">af</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">QueueOutput</span><span style=\\\"color: #24292E\\\"> { queueName: </span><span style=\\\"color: #032F62\\\">&quot;queue1&quot;</span><span style=\\\"color: #24292E\\\"> } </span><span style=\\\"color: #E36209\\\">af</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">StringOutputBinding msg)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        \\t</span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> @af</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">HTTPOutput af:HTTPBinding {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\tmsg.value </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> req.body;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">\\t</span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> { statusCode</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">200</span><span style=\\\"color: #24292E\\\">, payload</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Request: &quot;</span><span style=\\\"color: #24292E\\\"> + req.</span><span style=\\\"color: #6F42C1\\\">toString</span><span style=\\\"color: #24292E\\\">() };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"]]"},"__N_SSG":true}