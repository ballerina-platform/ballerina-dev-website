{"pageProps":{"samples":{"email":{"frontmatter":{"title":"Automated responding to emails","description":"Ballerina simplifies real-time email handling by offering abstractions and connectors for seamless integration. It supports SMTP, IMAP, and POP3, and even enables integration with ChatGPT for advanced email automation workflows, adding sophistication to your communication processes.","url":"https://ballerina.io/learn/by-example/receive-email-using-service/","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"configurable string username = ?;\nconfigurable string password = ?;\n\nlistener email:ImapListener emailListener = new ({\n    host: &#x22;imap.email.com&#x22;,\n    username,\n    password\n});\n\nservice &#x22;observer&#x22; on emailListener {\n\n    // When an email is successfully received, the &#x60;onMessage&#x60; method is called.\n    remote function onMessage(email:Message email) {\n        log:printInfo(&#x22;Received an email&#x22;, subject = email.subject, content = email?.body);\n    }\n\n    // When an error occurs during the email poll operations, the &#x60;onError&#x60; method is called.\n    remote function onError(email:Error emailError) {\n        log:printError(emailError.message(), stackTrace = emailError.stackTrace());\n    }\n\n    // When the listener is closed, the &#x60;onClose&#x60; method is called.\n    remote function onClose(email:Error? closeError) {\n        if closeError is email:Error {\n            log:printInfo(closeError.message(), stackTrace = closeError.stackTrace());\n        }\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> username </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> password </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">listener</span><span style=\"color:#24292E\"> email</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">ImapListener emailListener </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    host</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"imap.email.com\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    username,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    password</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#032F62\"> \"observer\"</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#24292E\"> emailListener {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">    // When an email is successfully received, the `onMessage` method is called.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onMessage</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">email</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Message email) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        log</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">printInfo</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\"Received an email\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">subject</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> email.subject, </span><span style=\"color:#E36209\">content</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> email?.body);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">    // When an error occurs during the email poll operations, the `onError` method is called.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onError</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">email</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error emailError) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        log</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">printError</span><span style=\"color:#24292E\">(emailError.</span><span style=\"color:#6F42C1\">message</span><span style=\"color:#24292E\">(), </span><span style=\"color:#E36209\">stackTrace</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> emailError.</span><span style=\"color:#6F42C1\">stackTrace</span><span style=\"color:#24292E\">());</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">    // When the listener is closed, the `onClose` method is called.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onClose</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">email</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error? </span><span style=\"color:#E36209\">closeError</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> closeError </span><span style=\"color:#D73A49\">is</span><span style=\"color:#24292E\"> email</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            log</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">printInfo</span><span style=\"color:#24292E\">(closeError.</span><span style=\"color:#6F42C1\">message</span><span style=\"color:#24292E\">(), </span><span style=\"color:#E36209\">stackTrace</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> closeError.</span><span style=\"color:#6F42C1\">stackTrace</span><span style=\"color:#24292E\">());</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"file":{"frontmatter":{"title":"Files, files as events?","description":"Ballerina enhances file transfer with FTP listeners, reacting to events on servers. SFTP and FTPS options ensure security. Seamlessly integrate file transfer with Ballerina's secure functionality.","url":"https://ballerina.io/learn/by-example/ftp-service-send-file/","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"configurable string username = ?;\nconfigurable string password = ?;\n\nlistener ftp:Listener fileListener = check new ({\n    host: &#x22;ftp.example.com&#x22;,\n    auth: {\n        credentials: {\n            username,\n            password\n        }\n    },\n    path: &#x22;/home/in&#x22;,\n    fileNamePattern: &#x22;(.*).txt&#x22;\n});\n\nservice on fileListener {\n\n    remote function onFileChange(ftp:WatchEvent &#x26; readonly event, ftp:Caller caller) \n            returns error? {\n                \n        foreach ftp:FileInfo addedFile in event.addedFiles {\n            stream<io:Block, io:Error?> fileStream = check \n                            io:fileReadBlocksAsStream(&#x22;./local/appendFile.txt&#x22;, 7);\n            check caller->append(addedFile.path, fileStream);\n            check fileStream.close();\n        }\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> username </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> password </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">listener</span><span style=\"color:#24292E\"> ftp</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Listener fileListener </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    host</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"ftp.example.com\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        credentials</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            username,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            password</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">    path</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"/home/in\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">    fileNamePattern</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"(.*).txt\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#24292E\"> fileListener {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onFileChange</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">ftp</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">WatchEvent &#x26; </span><span style=\"color:#D73A49\">readonly</span><span style=\"color:#24292E\"> event, </span><span style=\"color:#E36209\">ftp</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Caller caller) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                </span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        foreach </span><span style=\"color:#24292E\">ftp</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">FileInfo addedFile </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> event.addedFiles {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            stream&#x3C;</span><span style=\"color:#24292E\">io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Block, io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error?</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> fileStream </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> </span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                            io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">fileReadBlocksAsStream</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\"./local/appendFile.txt\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#005CC5\">7</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            check</span><span style=\"color:#24292E\"> caller</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">append</span><span style=\"color:#24292E\">(addedFile.path, </span><span style=\"color:#E36209\">fileStream</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            check</span><span style=\"color:#24292E\"> fileStream.</span><span style=\"color:#6F42C1\">close</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"graphql":{"frontmatter":{"title":"GraphQL subscription","description":"Ballerina simplifies GraphQL subscriptions, allowing easy event streaming to frontend applications, enabling effortless event subscriptions and delivery to popular clients.","url":"https://github.com/ballerina-platform/module-ballerina-graphql/tree/master/examples/news_alerts","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"service /news on new graphql:Listener(9090) {\n\n    remote function publish(NewsUpdate &#x26; readonly update) returns NewsRecord|error {\n        lock {\n            if publisherTable.hasKey(update.publisherId) {\n                return produceNews(update).cloneReadOnly();\n            }\n        }\n        return error(&#x22;Invalid publisher&#x22;);\n    }\n\n    resource function subscribe news(string userId, Agency agency) returns stream<News>|error {\n        stream<News> newsStream;\n        lock {\n            if userTable.hasKey(userId) {\n                NewsStream newsStreamGenerator = check new (userId, agency);\n                newsStream = new (newsStreamGenerator);\n            } else {\n                return error(&#x22;User not registered&#x22;);\n            }\n        }\n        return newsStream;\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#6F42C1\"> /news</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> graphql:Listener(</span><span style=\"color:#005CC5\">9090</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> publish</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">NewsUpdate</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#D73A49\"> readonly</span><span style=\"color:#E36209\"> update</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> NewsRecord</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        lock</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            if</span><span style=\"color:#24292E\"> publisherTable.</span><span style=\"color:#6F42C1\">hasKey</span><span style=\"color:#24292E\">(update.publisherId) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                return</span><span style=\"color:#6F42C1\"> produceNews</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">update</span><span style=\"color:#24292E\">).</span><span style=\"color:#6F42C1\">cloneReadOnly</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> error</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\"Invalid publisher\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> subscribe</span><span style=\"color:#6F42C1\"> news</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> userId</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">Agency</span><span style=\"color:#E36209\"> agency</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> stream&#x3C;</span><span style=\"color:#24292E\">News</span><span style=\"color:#D73A49\">>|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        stream&#x3C;</span><span style=\"color:#24292E\">News</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> newsStream;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        lock</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            if</span><span style=\"color:#24292E\"> userTable.</span><span style=\"color:#6F42C1\">hasKey</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">userId</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                NewsStream newsStreamGenerator </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">userId</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">agency</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                newsStream </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">newsStreamGenerator</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            } </span><span style=\"color:#D73A49\">else</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                return</span><span style=\"color:#D73A49\"> error</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\"User not registered\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> newsStream;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"grpc":{"frontmatter":{"title":"RPC, why not gRPC?","description":"Ballerina simplifies gRPC event streaming by bridging the gap between the service definition and code generation. You can effortlessly leverage gRPC's power for seamless data streaming with Ballerina.","url":"https://github.com/ballerina-platform/module-ballerina-grpc/tree/master/examples/route-guide","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"public type Rectangle record {|\n    Point lo = {};\n    Point hi = {};\n|};\n\npublic type Feature record {|\n    string name = &#x22;&#x22;;\n    Point location = {};\n|};\n\npublic type Point record {|\n    int latitude = 0;\n    int longitude = 0;\n|};\n\n@grpc:ServiceDescriptor {descriptor: ROOT_DESCRIPTOR, descMap: getDescriptorMap()}\nservice &#x22;RouteGuide&#x22; on new grpc:Listener(9000) {\n\n    remote function ListFeatures(Rectangle rectangle) returns stream<Feature, grpc:Error?>|error {\n        \n        int left = int:min(rectangle.lo.longitude, rectangle.hi.longitude);\n        int right = int:max(rectangle.lo.longitude, rectangle.hi.longitude);\n        int top = int:max(rectangle.lo.latitude, rectangle.hi.latitude);\n        int bottom = int:min(rectangle.lo.latitude, rectangle.hi.latitude);\n\n        Feature[] selectedFeatures = from var feature in FEATURES\n            where feature.name != &#x22;&#x22;\n            where feature.location.longitude >= left\n            where feature.location.longitude <= right\n            where feature.location.latitude >= bottom\n            where feature.location.latitude <= top\n            select feature;\n\n        return selectedFeatures.toStream();\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> type</span><span style=\"color:#6F42C1\"> Rectangle</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Point lo </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {};</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Point hi </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> type</span><span style=\"color:#6F42C1\"> Feature</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> name </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Point location </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> type</span><span style=\"color:#6F42C1\"> Point</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> latitude </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> longitude </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">@</span><span style=\"color:#005CC5\">grpc</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">ServiceDescriptor</span><span style=\"color:#24292E\"> {descriptor</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> ROOT_DESCRIPTOR, descMap</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\"> getDescriptorMap</span><span style=\"color:#24292E\">()}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#032F62\"> \"RouteGuide\"</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> grpc:Listener(</span><span style=\"color:#005CC5\">9000</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> ListFeatures</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Rectangle</span><span style=\"color:#E36209\"> rectangle</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> stream&#x3C;</span><span style=\"color:#24292E\">Feature, grpc</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error?</span><span style=\"color:#D73A49\">>|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        </span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        int</span><span style=\"color:#24292E\"> left </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">min</span><span style=\"color:#24292E\">(rectangle.lo.longitude, rectangle.hi.longitude);</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        int</span><span style=\"color:#24292E\"> right </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">max</span><span style=\"color:#24292E\">(rectangle.lo.longitude, rectangle.hi.longitude);</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        int</span><span style=\"color:#24292E\"> top </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">max</span><span style=\"color:#24292E\">(rectangle.lo.latitude, rectangle.hi.latitude);</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        int</span><span style=\"color:#24292E\"> bottom </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">min</span><span style=\"color:#24292E\">(rectangle.lo.latitude, rectangle.hi.latitude);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Feature[] selectedFeatures </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#005CC5\"> var</span><span style=\"color:#24292E\"> feature </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> FEATURES</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            where</span><span style=\"color:#24292E\"> feature.name </span><span style=\"color:#D73A49\">!=</span><span style=\"color:#032F62\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            where</span><span style=\"color:#24292E\"> feature.location.longitude </span><span style=\"color:#D73A49\">>=</span><span style=\"color:#24292E\"> left</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            where</span><span style=\"color:#24292E\"> feature.location.longitude </span><span style=\"color:#D73A49\">&#x3C;=</span><span style=\"color:#24292E\"> right</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            where</span><span style=\"color:#24292E\"> feature.location.latitude </span><span style=\"color:#D73A49\">>=</span><span style=\"color:#24292E\"> bottom</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            where</span><span style=\"color:#24292E\"> feature.location.latitude </span><span style=\"color:#D73A49\">&#x3C;=</span><span style=\"color:#24292E\"> top</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            select</span><span style=\"color:#24292E\"> feature;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> selectedFeatures.</span><span style=\"color:#6F42C1\">toStream</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"passing-around-messages":{"frontmatter":{"title":"Passing around events has never been easier","description":"Producing and consuming events from message brokers and then exposing them to others using WebHook, WebSocket, GraphQL, gRPC, etc., is just a piece of cake using Ballerina. You focus on the business logic and let Ballerina focus on the network logic.","url":"https://ballerina.io/learn/by-example/kafka-service-consume-message/","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"public type Order readonly &#x26; record {\n    int orderId;\n    string productName;\n    decimal price;\n    boolean isValid;\n};\n\nlistener kafka:Listener orderListener = new (kafka:DEFAULT_URL, {\n    groupId: &#x22;order-group-id&#x22;,\n    topics: &#x22;order-topic&#x22;\n});\n\nservice on orderListener {\n\n    remote function onConsumerRecord(Order[] orders) returns error? {\n        // The set of orders received by the service are processed one by one.\n        check from Order &#x27;order in orders\n            where &#x27;order.isValid\n            do {\n                log:printInfo(string &#x60;Received valid order for ${&#x27;order.productName}&#x60;);\n            };\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> type</span><span style=\"color:#6F42C1\"> Order</span><span style=\"color:#D73A49\"> readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> orderId;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> productName;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    decimal</span><span style=\"color:#24292E\"> price;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    boolean</span><span style=\"color:#24292E\"> isValid;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">listener</span><span style=\"color:#24292E\"> kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Listener orderListener </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">DEFAULT_URL, {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    groupId</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"order-group-id\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    topics</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"order-topic\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#24292E\"> orderListener {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onConsumerRecord</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Order</span><span style=\"color:#24292E\">[] </span><span style=\"color:#E36209\">orders</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // The set of orders received by the service are processed one by one.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        check</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#24292E\"> Order 'order </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            where</span><span style=\"color:#24292E\"> 'order.isValid</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            do</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                log</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">printInfo</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#032F62\"> `Received valid order for ${</span><span style=\"color:#24292E\">'order</span><span style=\"color:#032F62\">.</span><span style=\"color:#24292E\">productName</span><span style=\"color:#032F62\">}`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"proto":{"frontmatter":{"title":"","description":"","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"message Rectangle {\n  Point lo = 1;\n  Point hi = 2;\n}\n\nmessage Feature {\n  string name = 1;\n  Point location = 2;\n}\n\nmessage Point {\n  int32 latitude = 1;\n  int32 longitude = 2;\n}\n\nservice RouteGuide {\n  rpc ListFeatures(Rectangle) returns (stream Feature) {}\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#24292E\">message Rectangle {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">  Point lo </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">  Point hi </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 2</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">message Feature {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">  string</span><span style=\"color:#24292E\"> name </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">  Point location </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 2</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">message Point {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">  int32 latitude </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">  int32 longitude </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 2</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#24292E\"> RouteGuide {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">  rpc </span><span style=\"color:#6F42C1\">ListFeatures</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Rectangle</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">stream</span><span style=\"color:#E36209\"> Feature</span><span style=\"color:#24292E\">) {}</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"webhook_with_websub":{"frontmatter":{"title":"WebHooks with WebSub","description":"Ballerina combines HTTP and event-driven development leveraging the power of the HTTP ecosystem with WebSub for constructing event-driven applications effortlessly.","url":"https://ballerina.io/learn/by-example/websub-webhook-sample/","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"@websub:SubscriberServiceConfig {\n    target: [\n        &#x22;https://api.github.com/hub&#x22;, \n        &#x22;https://github.com/<YOUR_ORGANIZATION>/<REPOSITORY>/events/push.json&#x22;\n    ],\n    secret: &#x22;<YOUR_SECRET_KEY>&#x22;,\n    httpConfig: {\n        auth: {\n            token: &#x22;<YOUR_AUTH_TOKEN>&#x22;\n        }\n    }\n}\nservice on new websub:Listener(9090) {\n    remote function onEventNotification(websub:ContentDistributionMessage event) returns error? {\n\n        // Get the expected json payload\n        json retrievedContent = check event.content.ensureType();\n\n        // Handle the new event\n        if retrievedContent.zen is string {\n            int hookId = check retrievedContent.hook_id;\n            io:println(string &#x60;PingEvent received for webhook [${hookId}]&#x60;);\n        } else if retrievedContent.ref is string {\n            string repositoryName = check retrievedContent.repository.name;\n            io:println(string &#x60;PushEvent received for [${repositoryName}]&#x60;);\n        }\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#24292E\">@</span><span style=\"color:#005CC5\">websub</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">SubscriberServiceConfig</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    target</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        \"https://api.github.com/hub\"</span><span style=\"color:#24292E\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        \"https://github.com/&#x3C;YOUR_ORGANIZATION>/&#x3C;REPOSITORY>/events/push.json\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    secret</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"&#x3C;YOUR_SECRET_KEY>\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    httpConfig</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            token</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"&#x3C;YOUR_AUTH_TOKEN>\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> websub:Listener(</span><span style=\"color:#005CC5\">9090</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onEventNotification</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">websub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">ContentDistributionMessage event) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Get the expected json payload</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        json</span><span style=\"color:#24292E\"> retrievedContent </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> event.content.</span><span style=\"color:#6F42C1\">ensureType</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Handle the new event</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> retrievedContent.zen </span><span style=\"color:#D73A49\">is</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            int</span><span style=\"color:#24292E\"> hookId </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> retrievedContent.hook_id;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#032F62\"> `PingEvent received for webhook [${</span><span style=\"color:#24292E\">hookId</span><span style=\"color:#032F62\">}]`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        } </span><span style=\"color:#D73A49\">else</span><span style=\"color:#D73A49\"> if</span><span style=\"color:#24292E\"> retrievedContent.ref </span><span style=\"color:#D73A49\">is</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            string</span><span style=\"color:#24292E\"> repositoryName </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> retrievedContent.repository.name;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#032F62\"> `PushEvent received for [${</span><span style=\"color:#24292E\">repositoryName</span><span style=\"color:#032F62\">}]`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"webhook_with_websub_hub":{"frontmatter":{"title":"WebHooks with WebSub","description":"Ballerina combines HTTP and event-driven development leveraging the power of the HTTP ecosystem with WebSub for constructing event-driven applications effortlessly.","url":"https://github.com/ballerina-platform/module-ballerina-websubhub/tree/main/examples/kafka-hub","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"service /hub on new websubhub:Listener(9000) {\n\n    remote function onRegisterTopic(readonly &#x26; websubhub:TopicRegistration message)\n                returns websubhub:TopicRegistrationSuccess|websubhub:TopicRegistrationError {\n        // Add your logic here\n        return websubhub:TOPIC_REGISTRATION_SUCCESS;\n    }\n\n    remote function onDeregisterTopic(readonly &#x26; websubhub:TopicDeregistration message)\n                returns websubhub:TopicDeregistrationSuccess|websubhub:TopicDeregistrationError {\n        // Add your logic here\n        return websubhub:TOPIC_DEREGISTRATION_SUCCESS;\n    }\n\n    remote function onUpdateMessage(readonly &#x26; websubhub:UpdateMessage message)\n                returns websubhub:Acknowledgement|websubhub:UpdateMessageError {\n        // Add your logic here\n        return websubhub:ACKNOWLEDGEMENT;\n    }\n\n    remote function onSubscriptionValidation(readonly &#x26; websubhub:Subscription message)\n                returns websubhub:SubscriptionDeniedError? {\n        // Add your logic here\n    }\n\n    remote function onSubscriptionIntentVerified(readonly &#x26; websubhub:VerifiedSubscription message)\n                returns error? {\n        // Add your logic here\n    }\n\n    remote function onUnsubscriptionValidation(readonly &#x26; websubhub:Unsubscription message)\n                returns websubhub:UnsubscriptionDeniedError? {\n        // Add your logic here\n    }\n\n    remote function onUnsubscriptionIntentVerified(\n                readonly &#x26; websubhub:VerifiedUnsubscription message) returns error? {\n        // Add your logic here\n    } \n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#6F42C1\"> /hub</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> websubhub:Listener(</span><span style=\"color:#005CC5\">9000</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onRegisterTopic</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#E36209\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">TopicRegistration message)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                returns</span><span style=\"color:#24292E\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">TopicRegistrationSuccess</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">websubhub:TopicRegistrationError {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Add your logic here</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">TOPIC_REGISTRATION_SUCCESS;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onDeregisterTopic</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#E36209\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">TopicDeregistration message)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                returns</span><span style=\"color:#24292E\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">TopicDeregistrationSuccess</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">websubhub:TopicDeregistrationError {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Add your logic here</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">TOPIC_DEREGISTRATION_SUCCESS;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onUpdateMessage</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#E36209\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">UpdateMessage message)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                returns</span><span style=\"color:#24292E\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Acknowledgement</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">websubhub:UpdateMessageError {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Add your logic here</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">ACKNOWLEDGEMENT;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onSubscriptionValidation</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#E36209\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Subscription message)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                returns</span><span style=\"color:#24292E\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">SubscriptionDeniedError? {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Add your logic here</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onSubscriptionIntentVerified</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#E36209\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">VerifiedSubscription message)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Add your logic here</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onUnsubscriptionValidation</span><span style=\"color:#24292E\">(</span><span style=\"color:#D73A49\">readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#E36209\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Unsubscription message)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                returns</span><span style=\"color:#24292E\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">UnsubscriptionDeniedError? {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Add your logic here</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onUnsubscriptionIntentVerified</span><span style=\"color:#24292E\">(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#E36209\"> websubhub</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">VerifiedUnsubscription message) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Add your logic here</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    } </span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"websocket":{"frontmatter":{"title":"WebSocket, TCP socket for the web","description":"WebSocket is an excellent choice for message transmission particularly on the web. With Ballerina, you have not only the capability to utilize a WebSocket as it is but also the flexibility to develop custom subprotocols that align with your organization's specific requirements.","url":"https://github.com/ballerina-platform/module-ballerina-websocket/tree/main/examples/taxi-service-management","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"// This service is for drivers to register and send locations.\nservice /taxi on taxiMgtListener {\n    resource isolated function get [string name]() \n                        returns websocket:Service|websocket:UpgradeError {\n        return new DriverService(name);\n    }\n}\n\nisolated service class DriverService {\n    *websocket:Service;\n\n    final string driverName;\n\n    public isolated function init(string username) {\n        self.driverName = username;\n    }\n\n    remote isolated function onOpen(websocket:Caller caller) returns websocket:Error? {\n        string welcomeMsg = \n                &#x22;Hi &#x22; + self.driverName + &#x22;! Your location will be shared with the riders&#x22;;\n        check caller->writeMessage(welcomeMsg);\n        \n        broadcast(&#x22;Driver &#x22; + self.driverName + &#x22; ready for a ride&#x22;);\n    }\n\n    // &#x27;onMessage&#x27; remote function will receive the location updates from drivers.\n    remote function onMessage(websocket:Caller caller, string location) returns websocket:Error? {\n        worker broadcast returns error? {\n            // Broadcast the live locations to registered riders.\n            string locationUpdateMsg = self.driverName + &#x22; updated the location &#x22; + location;\n            broadcast(locationUpdateMsg);\n        }\n    }\n\n    remote isolated function onClose(websocket:Caller caller, int statusCode, string reason) {\n        io:println(self.driverName + &#x22; got disconnected&#x22;);\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#6A737D\">// This service is for drivers to register and send locations.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#6F42C1\"> /taxi</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#24292E\"> taxiMgtListener {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#24292E\"> [</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> name</span><span style=\"color:#24292E\">]() </span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                        returns</span><span style=\"color:#24292E\"> websocket</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Service</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">websocket:UpgradeError {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#6F42C1\"> DriverService</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">name</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> service class</span><span style=\"color:#6F42C1\"> DriverService</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    *</span><span style=\"color:#24292E\">websocket</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Service;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    final</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> driverName;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    public</span><span style=\"color:#D73A49\"> isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> init</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> username</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        self</span><span style=\"color:#24292E\">.driverName </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> username;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onOpen</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">websocket</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Caller caller) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> websocket</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error? {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\"> welcomeMsg </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> </span></span>\n<span class=\"line\"><span style=\"color:#032F62\">                \"Hi \"</span><span style=\"color:#D73A49\"> +</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.driverName </span><span style=\"color:#D73A49\">+</span><span style=\"color:#032F62\"> \"! Your location will be shared with the riders\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        check</span><span style=\"color:#24292E\"> caller</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">writeMessage</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">welcomeMsg</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        </span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">        broadcast</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\"Driver \"</span><span style=\"color:#D73A49\"> +</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.driverName </span><span style=\"color:#D73A49\">+</span><span style=\"color:#032F62\"> \" ready for a ride\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">    // 'onMessage' remote function will receive the location updates from drivers.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onMessage</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">websocket</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Caller caller, </span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> location</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> websocket</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error? {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        worker</span><span style=\"color:#24292E\"> broadcast </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">            // Broadcast the live locations to registered riders.</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            string</span><span style=\"color:#24292E\"> locationUpdateMsg </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.driverName </span><span style=\"color:#D73A49\">+</span><span style=\"color:#032F62\"> \" updated the location \"</span><span style=\"color:#D73A49\"> +</span><span style=\"color:#24292E\"> location;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">            broadcast</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">locationUpdateMsg</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> isolated</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onClose</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">websocket</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Caller caller, </span><span style=\"color:#005CC5\">int</span><span style=\"color:#E36209\"> statusCode</span><span style=\"color:#24292E\">, </span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> reason</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">self</span><span style=\"color:#24292E\">.driverName </span><span style=\"color:#D73A49\">+</span><span style=\"color:#032F62\"> \" got disconnected\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"}}},"__N_SSG":true}