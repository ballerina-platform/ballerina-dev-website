{"pageProps":{"tagline":"Wait for a sequence of messages and combine them","desc":"Aggregator patiently collects a sequence of messages and combines them once all have been received.","category":"Message Routing","index":29,"helps":"Ballerina provides convenient map and table data structures for temporary message storage. Ballerina provides robust support for distributed storage with the Redis package. Additionally, it offers seamless integration with various SQL and NoSQL databases for persistent data storage. Ballerina's cache package is an efficient in-memory cache solution that includes automatic cleanup mechanisms.","tags":["Aggregator"],"link":"https://www.enterpriseintegrationpatterns.com/patterns/messaging/Aggregator.html","content":[{"headerCode":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#D73A49\"> map&#x3C;</span><span style=\"color:#005CC5\">json</span><span style=\"color:#24292E\">[]</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> partialSurveys </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client formSubmitClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"http://api.surveyme.com.balmock.io\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span></code></pre>","mainCode":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#6F42C1\"> /api/v1</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> http:Listener(</span><span style=\"color:#005CC5\">8080</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> post</span><span style=\"color:#6F42C1\"> survey</span><span style=\"color:#24292E\">/[</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> id</span><span style=\"color:#24292E\">](@</span><span style=\"color:#005CC5\">http</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">Header</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#E36209\"> userId</span><span style=\"color:#24292E\">, @</span><span style=\"color:#005CC5\">http</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">Payload</span><span style=\"color:#005CC5\"> json</span><span style=\"color:#E36209\"> formData</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        json</span><span style=\"color:#24292E\">[]? surveyData </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> partialSurveys[userId];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> surveyData </span><span style=\"color:#D73A49\">==</span><span style=\"color:#24292E\"> () {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            json</span><span style=\"color:#24292E\">[] newSurvey </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> [formData];</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            partialSurveys[userId] </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> newSurvey;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        } </span><span style=\"color:#D73A49\">else</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            surveyData.</span><span style=\"color:#6F42C1\">push</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">formData</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            if</span><span style=\"color:#24292E\"> surveyData.</span><span style=\"color:#6F42C1\">length</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">==</span><span style=\"color:#005CC5\"> 3</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> formSubmitClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">survey</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">[id]</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">submit.</span><span style=\"color:#6F42C1\">post</span><span style=\"color:#24292E\">({userId</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> surveyData}, </span><span style=\"color:#E36209\">targetType</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Response);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> partialSurveys.</span><span style=\"color:#6F42C1\">remove</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">userId</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","raw":"import ballerina/http;\n\nfinal map<json[]> partialSurveys = {};\n\nfinal http:Client formSubmitClient = check new (\"http://api.surveyme.com.balmock.io\");\n\nservice /api/v1 on new http:Listener(8080) {\n\n    resource function post survey/[string id](@http:Header string userId, @http:Payload json formData) returns error? {\n        json[]? surveyData = partialSurveys[userId];\n        if surveyData == () {\n            json[] newSurvey = [formData];\n            partialSurveys[userId] = newSurvey;\n        } else {\n            surveyData.push(formData);\n            if surveyData.length() == 3 {\n                _ = check formSubmitClient->/survey/[id]/submit.post({userId: surveyData}, targetType = http:Response);\n                _ = partialSurveys.remove(userId);\n            }\n        }\n    }\n}\n","name":"aggregator.bal"}],"name":" Aggregator"},"__N_SSG":true}