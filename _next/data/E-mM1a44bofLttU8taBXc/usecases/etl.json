{"pageProps":{"samples":{"clean1":{"frontmatter":{"title":"","description":"","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">SalesOrder</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> itemId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> customerId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> itemName;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> quantity;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> date;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">removeDuplicates</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">SalesOrder</span><span style=\"color: #24292E\">[] </span><span style=\"color: #E36209\">orders</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> SalesOrder[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> {itemId, customerId, itemName, quantity, date} </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        group </span><span style=\"color: #D73A49\">by</span><span style=\"color: #24292E\"> itemId, customerId, itemName</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">select</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            itemId,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            customerId,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            itemName,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            quantity</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [quantity][</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            date</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [date][</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"clean2":{"frontmatter":{"title":"","description":"","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Customer</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> name;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> city;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> phone;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">findDuplicates</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Customer</span><span style=\"color: #24292E\">[] </span><span style=\"color: #E36209\">customers</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> [Customer[], Customer[]] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Customer[] duplicates </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Customer[] uniqueCustomers </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [customers[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">]];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">foreach </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> customerIdx </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">...</span><span style=\"color: #24292E\"> customers.</span><span style=\"color: #6F42C1\">length</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">-</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">foreach </span><span style=\"color: #24292E\">Customer uniqueCustomer </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> uniqueCustomers {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            Customer customer </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> customers[customerIdx];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getEditDistance</span><span style=\"color: #24292E\">(customer.name, uniqueCustomer.name) </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">3</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;&amp;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6F42C1\">getEditDistance</span><span style=\"color: #24292E\">(customer.city, uniqueCustomer.city) </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">2</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;&amp;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6F42C1\">getEditDistance</span><span style=\"color: #24292E\">(customer.phone, uniqueCustomer.phone) </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">4</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                duplicates.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">customer</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                uniqueCustomers.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">customer</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> [uniqueCustomers, duplicates];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"data-enrichment-magic":{"frontmatter":{"title":"Data enrichment magic","description":"Ballerina streamlines data enrichment, simplifying the journey from data extraction from databases or APIs to adding depth and context to your insights.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/enrich-data/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Client geocodingClient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #032F62\">&quot;https://maps.googleapis.com&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/api/v1</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">8080</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">customerWithGeoCode</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Customer</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">customer</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> GeoTaggedCustomer</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        GeocodeResponse response </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> geocodingClient</span><span style=\"color: #D73A49\">-&gt;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">maps</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">api</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">geocode</span><span style=\"color: #D73A49\">/</span><span style=\"color: #6F42C1\">&#39;json</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">address</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> customer.address, </span><span style=\"color: #E36209\">key</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> geocodingAPIKey);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> response.status </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;OK&quot;</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">...</span><span style=\"color: #24292E\">customer,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                latitude</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> response.results[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].geometry.location.lat,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                longitude</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> response.results[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].geometry.location.lng</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Error while getting the location information.&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"drive-data-interactions-with-models":{"frontmatter":{"title":"Drive data interactions with models","description":"Ballerina's `persist` feature seamlessly connects to databases, retrieves data, and kickstarts your ETL process.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/extract-data-from-database/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getOrderData</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">stream&lt;</span><span style=\"color: #24292E\">OrderData, persist</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error?</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> orders </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> dbClient</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #6F42C1\">orderdata</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> orderData </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">do</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">orderData</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getCustomerData</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">stream&lt;</span><span style=\"color: #24292E\">CustomerData, persist</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error?</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> customers </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> dbClient</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #6F42C1\">customers</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> customerData </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> customers</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">do</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">customerData</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getOrderWithCustomer</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">orderId</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    OrderWithCustomer orderwithCustomer </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> dbClient</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">orderdata</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">[orderId];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">orderwithCustomer</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"eleminating-redundency-for-cleaner-data":{"frontmatter":{"title":"Eliminating redundancy for cleaner data","description":"Ballerina simplifies duplicate removal through Ballerina queries and other intuitive constructs.","url":"","image":""},"code":""},"extract-data-from-github":{"frontmatter":{"title":"Unleash data from APIs","description":"Ballerina offers a wide range of built-in connectors, including HTTP and GraphQL clients, making it easy to interact with APIs for efficient data extraction in your ETL pipeline.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/extract-data-from-github/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> githubAccessToken </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> repoOwner </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;ballerina-platform&quot;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> repoName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;ballerina-lang&quot;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> github</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Client githubClient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ({</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        token</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> githubAccessToken</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    github</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">IssueFilters filters </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        labels</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;Type/NewFeature&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;Priority/High&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        states</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #6F42C1\">github</span><span style=\"color: #24292E\">:ISSUE_OPEN]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">stream&lt;</span><span style=\"color: #24292E\">github</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Issue, github</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error?</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> openFeatures</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> githubClient</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">getIssues</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">repoOwner</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">repoName</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">filters</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> feature </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> openFeatures</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">do</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(feature.title);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"load-data-to-data-warehouse":{"frontmatter":{"title":"Loading data to a data warehouse","description":"Ballerina's integration and security capabilities simplify the loading of transformed data securely into on-prem or SaaS data warehouses.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/load-data-to-bigquery/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> bigquery</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Client bigQueryClient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ({auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {token: bigQueryAccessToken}});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    SocialMediaInteraction[] interactions </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">fileReadCsv</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;./resources/interactions.csv&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    bigquery</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">TabledatainsertallrequestRows[] rows </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> interaction </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> interactions</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">select</span><span style=\"color: #24292E\"> {insertId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> uuid:</span><span style=\"color: #6F42C1\">createType1AsString</span><span style=\"color: #24292E\">(), &#39;json</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> interaction};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    bigquery</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">TableDataInsertAllRequest payload </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {rows};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    _ </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> bigQueryClient</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">insertAllTableData</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">projectId</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">datasetId</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">tableId</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">payload</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"load-data-to-google-sheets":{"frontmatter":{"title":"Manual data inspection","description":"Ballerina can connect with Google Sheets or Excel to load data samples, intermediate data, or processed data for manual inspection.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/load-data-to-gsheet/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">loadToGoogleSheet</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">sheetName</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">workSheetName</span><span style=\"color: #24292E\">, </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #E36209\">SalesSummary</span><span style=\"color: #24292E\">[] </span><span style=\"color: #E36209\">salesSummary</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    sheets</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Spreadsheet spreadsheet </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> spreadsheetClient</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">createSpreadsheet</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">sheetName</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> spreadSheetId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> spreadsheet.spreadsheetId;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> spreadsheetClient</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">renameSheet</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">spreadSheetId</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;Sheet1&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">workSheetName</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    _ </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> spreadsheetClient</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">appendValue</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">spreadSheetId</span><span style=\"color: #24292E\">, [</span><span style=\"color: #032F62\">&quot;Product&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;Sales&quot;</span><span style=\"color: #24292E\">], {sheetName</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> workSheetName});</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">foreach </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> {product, sales} </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> salesSummary {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        _ </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> spreadsheetClient</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">appendValue</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">spreadSheetId</span><span style=\"color: #24292E\">, [product, sales], {sheetName</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> workSheetName});</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"load-from-kafka-topics":{"frontmatter":{"title":"Real-time data flow","description":"Ballerina's support for various data streaming sources, such as Kafka, RabbitMQ, and NATS, facilitates the creation of real-time streaming ETL pipelines.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/kafka-db-ingestion/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ConsumerConfiguration consumerConfiguration </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    groupId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;lead-uuid&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    topics</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;lead-analytics&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    pollingInterval</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    autoCommit</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">false</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Client leadsDbClient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">listener</span><span style=\"color: #24292E\"> kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Listener kafkaListener </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">DEFAULT_URL, </span><span style=\"color: #E36209\">consumerConfiguration</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> kafkaListener {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onConsumerRecord</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller, </span><span style=\"color: #E36209\">LeadAnalytics</span><span style=\"color: #24292E\">[] </span><span style=\"color: #E36209\">leadsData</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        LeadAnalyticsDataInsert[] insertData </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> lead </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> leadsData</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">select</span><span style=\"color: #24292E\"> {id</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> uuid:</span><span style=\"color: #6F42C1\">createType1AsString</span><span style=\"color: #24292E\">(), </span><span style=\"color: #D73A49\">...</span><span style=\"color: #24292E\">lead};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        _ </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> leadsDbClient</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">leadanalyticsdata.</span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">insertData</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"make-data-extraction-smarter":{"frontmatter":{"title":"Make data extraction smarter","description":"Ballerina AI integrations can extract information from unstructured data, unlocking vast amounts of information captured in emails, documents, comments, etc. in the extraction process.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/extract-information-from-unstructured-data/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> chat</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Client openAiChat </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ({auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {token: openAIKey}});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/api/reviews</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">8080</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">summary</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">SummaryRequest</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">summaryRequest</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        chat</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">CreateChatCompletionRequest request </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            model</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;gpt-3.5-turbo&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            messages</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6F42C1\">role</span><span style=\"color: #24292E\">: </span><span style=\"color: #032F62\">&quot;user&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6F42C1\">content</span><span style=\"color: #24292E\">: </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> `</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        Extract the following details in JSON from the reviews given.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                </span><span style=\"color: #6F42C1\">good_points</span><span style=\"color: #24292E\">: </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                </span><span style=\"color: #6F42C1\">bad_points</span><span style=\"color: #24292E\">: </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                </span><span style=\"color: #6F42C1\">improvement_points</span><span style=\"color: #24292E\">: </span><span style=\"color: #005CC5\">string</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        The fields should contain points extracted from all reviews</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        Here are the </span><span style=\"color: #6F42C1\">reviews</span><span style=\"color: #24292E\">:</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        ${</span><span style=\"color: #6F42C1\">string</span><span style=\"color: #24292E\">:</span><span style=\"color: #6F42C1\">&#39;join</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;,&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #D73A49\">...</span><span style=\"color: #24292E\">summaryRequest.reviews)}</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    `</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            ]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        chat</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">CreateChatCompletionResponse summary </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> openAiChat</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">chat</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">completions.</span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">request</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> summary.choices.</span><span style=\"color: #6F42C1\">length</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> content </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> summary.choices[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].message?.content.</span><span style=\"color: #6F42C1\">ensureType</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">content</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"precision-cleaning-with-regex":{"frontmatter":{"title":"Precision cleaning with regular expressions","description":"Ballerina's regex support empowers data cleansing and standardization, enhancing data quality and consistency.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/clean-and-standardize-data/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">standardizeValues</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">inputString</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">RegExp yesPattern </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> re </span><span style=\"color: #032F62\">`y|Y|((y|Y)(e|E)(s|S))`</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> yesPattern.</span><span style=\"color: #6F42C1\">isFullMatch</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">inputString</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">RegExp noPattern </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> re </span><span style=\"color: #032F62\">`n|N|((n|N)(o|O))`</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> noPattern.</span><span style=\"color: #6F42C1\">isFullMatch</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">inputString</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">-</span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">isValidEmail</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">inputString</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">boolean</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">RegExp emailPattern </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\">  re </span><span style=\"color: #032F62\">`[A-Za-z0-9</span><span style=\"color: #005CC5\">\\.</span><span style=\"color: #032F62\">_%+-]+@[A-Za-z0-9</span><span style=\"color: #005CC5\">\\.</span><span style=\"color: #032F62\">-]+</span><span style=\"color: #005CC5\">\\.</span><span style=\"color: #032F62\">[A-Za-z]{2,}`</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> emailPattern.</span><span style=\"color: #6F42C1\">isFullMatch</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">inputString</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">removeExtraWhiteSpaces</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">inputString</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">RegExp extraSpaces </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> re </span><span style=\"color: #032F62\">`</span><span style=\"color: #005CC5\">\\s</span><span style=\"color: #032F62\">+`</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> extraSpaces.</span><span style=\"color: #6F42C1\">replaceAll</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">inputString</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot; &quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"refining-data-excellence":{"frontmatter":{"title":"Refining data excellence","description":"Ballerina's seamless integration with AI models enhances error correction, ensuring data integrity and precision during transformation.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/refine-data-using-ai/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> openAIToken </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Client openAIClient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #032F62\">&quot;https://api.openai.com&quot;</span><span style=\"color: #24292E\">, {auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {token: openAIToken}});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">filePath</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> inputString </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">fileReadString</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">filePath</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    OpenAiChatResponse response </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> openAIClient</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">v1</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">chat</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">completions.</span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\">(</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            model</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;gpt-3.5-turbo&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            messages</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6F42C1\">role</span><span style=\"color: #24292E\">: </span><span style=\"color: #032F62\">&quot;user&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6F42C1\">content</span><span style=\"color: #24292E\">: </span><span style=\"color: #032F62\">&quot;Fix grammar and spelling mistakes.&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6F42C1\">role</span><span style=\"color: #24292E\">: </span><span style=\"color: #032F62\">&quot;user&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6F42C1\">content</span><span style=\"color: #24292E\">: inputString</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            ]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">`Corrected: ${</span><span style=\"color: #24292E\">response</span><span style=\"color: #032F62\">.</span><span style=\"color: #24292E\">choices</span><span style=\"color: #032F62\">[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #032F62\">].</span><span style=\"color: #24292E\">message</span><span style=\"color: #032F62\">.</span><span style=\"color: #24292E\">content</span><span style=\"color: #032F62\">}`</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"reshaping-data-with-data-mapper":{"frontmatter":{"title":"Reshaping data with data mapper","description":"Comprehensive data mapping support facilitates the transformation of source data into any schema expected by target systems.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/data-mapper/main.bal","image":"images/usecases/etl-data-mapping.gif"},"code":""}}},"__N_SSG":true}