{"pageProps":{"tagline":"Capture message information in a central location","desc":"Message store captures information about each message in a central location.","category":"System Management","index":57,"helps":"Ballerina can send messages to multiple channels during a single service invocation. Ballerina's concurrency model helps to send messages asynchronously without blocking the main channel. The wildcard binding pattern is used to indicate a 'fire-and-forget' invocation, where the response is not used.","tags":["Message Store","Message Channel","Wire Tap","Message Endpoint","Message"],"link":"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageStore.html","content":[{"headerCode":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> GeoCodeResponse</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    json</span><span style=\"color:#24292E\"> results;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client geoCodingClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"http://api.maps.googleapis.com.balmock.io\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client firebaseClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"http://api.mapsproject.firebase.com.balmock.io\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span></code></pre>","mainCode":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#6F42C1\"> /api</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> http:Listener(</span><span style=\"color:#005CC5\">8080</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> location</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> address</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> GeoCodeResponse</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        GeoCodeResponse</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> storedGeocode </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> firebaseClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">location</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">[address]</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">location\\.</span><span style=\"color:#6F42C1\">json</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> storedGeocode </span><span style=\"color:#D73A49\">!is</span><span style=\"color:#D73A49\"> error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            return</span><span style=\"color:#24292E\"> storedGeocode;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        GeoCodeResponse geocode </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> geoCodingClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">maps</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">api</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">geocode</span><span style=\"color:#D73A49\">/</span><span style=\"color:#6F42C1\">'json</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">place</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> address);</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        var</span><span style=\"color:#24292E\"> _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> start</span><span style=\"color:#6F42C1\"> storeAddress</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">address</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">geocode</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> geocode;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> storeAddress</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> address</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">GeoCodeResponse</span><span style=\"color:#E36209\"> geocode</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> firebaseClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">location</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">[address]</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">location\\.json.</span><span style=\"color:#6F42C1\">put</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">geocode</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">targetType</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#005CC5\"> json</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","raw":"import ballerina/http;\n\ntype GeoCodeResponse record {|\n    json results;\n|};\n\nfinal http:Client geoCodingClient = check new (\"http://api.maps.googleapis.com.balmock.io\");\nfinal http:Client firebaseClient = check new (\"http://api.mapsproject.firebase.com.balmock.io\");\n\nservice /api on new http:Listener(8080) {\n\n    resource function get location(string address) returns GeoCodeResponse|error {\n        GeoCodeResponse|error storedGeocode = firebaseClient->/location/[address]/location\\.json();\n        if storedGeocode !is error {\n            return storedGeocode;\n        }\n        GeoCodeResponse geocode = check geoCodingClient->/maps/api/geocode/'json(place = address);\n        var _ = start storeAddress(address, geocode);\n        return geocode;\n    }\n}\n\nfunction storeAddress(string address, GeoCodeResponse geocode) returns error? {\n    _ = check firebaseClient->/location/[address]/location\\.json.put(geocode, targetType = json);\n}\n","name":"message-store.bal"}],"name":" Message Store"},"__N_SSG":true}