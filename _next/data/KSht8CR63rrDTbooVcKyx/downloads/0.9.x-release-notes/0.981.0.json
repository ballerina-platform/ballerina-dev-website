{"pageProps":{"frontmatter":{},"content":"<div class=\"release_notes\">\n<h1>Overview to Ballerina 0.981.0</h1>\n<p>This release has considered about further stabilizing previous release with bug fixing effort. Apart from that there is a major improvement on Websocket standard library with the introduction of supporting union type for <code>pushText()</code> and multiple type support for <code>onText()</code> functions. Also there are few language syntax changes.</p>\n<h1>Compatibility and Support</h1>\n<p>The <code>native</code> keyword has been changed to <code>extern</code> due to Ballerina moving towards a model of native compilation. With this model, code will be an external library and everything is native. Libraries can be written or not written in Ballerina.</p>\n<p>Old syntax:</p>\n<pre class=\"line-numbers language-ballerina\"><code class=\"language-ballerina\">public native function string::toUpper() returns string;\n</code></pre>\n\n<p>New syntax:</p>\n<pre class=\"line-numbers language-ballerina\"><code class=\"language-ballerina\">public extern function string::toUpper() returns string;\n</code></pre>\n\n<h1>Improvements</h1>\n<h2>Language &amp; Runtime</h2>\n<ul>\n<li>Bitwise complement (~) operator inverts the bits of its operand expression. The static type of the operand must be int, and the static type of the result is an int.</li>\n</ul>\n<pre class=\"line-numbers language-ballerina\"><code class=\"language-ballerina\">int i = 387465;\nint j = ~i;\n</code></pre>\n\n<ul>\n<li>Introduce index based access for tuples. Elements of a tuple type can now be accessed via indexes as follows:</li>\n</ul>\n<pre class=\"line-numbers language-ballerina\"><code class=\"language-ballerina\">(boolean, int, string) x = (true, 3, &quot;abc&quot;);\nboolean tempBool = x[0];\nstring tempString = x[2];\nx[1] = 4;\n</code></pre>\n\n<h2>Standard Library</h2>\n<ul>\n<li>\n<p><strong>WebSocket</strong></p>\n</li>\n<li>\n<p>The <code>pushText</code> function takes a union type instead of a string type. The new signature is as follows: </p>\n</li>\n</ul>\n<pre class=\"line-numbers language-ballerina\"><code class=\"language-ballerina\">public function pushText(string|json|xml|boolean|int|float|byte|byte[] data, boolean final = true) returns error? \n</code></pre>\n\n<ul>\n<li>The <code>onText</code> function can take a string, JSON, XML, record, or byte[] types instead of only string. The <code>onText</code> signature can be any one of the following:</li>\n</ul>\n<pre class=\"line-numbers language-ballerina\"><code class=\"language-ballerina\">onText(endpoint caller, string text, boolean final)\nonText(endpoint caller, json jsonVal)\nonText(endpoint caller, xml xmlVal)\nonText(endpoint caller, Person person)\nonText(endpoint caller, byte[] data)\n</code></pre>\n\n<blockquote>\n<p><strong>Note</strong>: In the above code snippet, Person is a record type.</p>\n</blockquote>\n<p>For all values except for string type, the values are aggregated if a continuation frame is received. Hence the value of final is not relevant in the case of other types except string.</p>\n<h2>IDEs &amp; Language Server</h2>\n<h3>Composer</h3>\n<ul>\n<li>Sealed types source generation support.</li>\n</ul>\n<h3>Language Server</h3>\n<ul>\n<li>Nil lifting completion support.</li>\n</ul>\n<h1>Bug Fixes</h1>\n<p>Please see <a href=\"https://github.com/ballerina-platform/ballerina-lang/issues?q=is%3Aissue+milestone%3A0.981.0+is%3Aclosed+label%3AType%2FBug\">Github milestone</a> for bug fixes.</p>\n<h1>Getting Started</h1>\n<p>You can download the Ballerina distributions, try samples, and read the documentation at https://ballerina.io. You can also visit the [Quick Tour] (https://ballerina.io/learn/quick-tour/) to get started. We encourage you to report issues, improvements, and suggestions at the <a href=\"https://github.com/ballerina-platform/ballerina-lang\">Ballerina Github Repository</a>.</p>\n</div>","id":"0.981.0"},"__N_SSG":true}