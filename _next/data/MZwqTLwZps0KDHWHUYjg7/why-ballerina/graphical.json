{"pageProps":{"frontmatter":{"layout":"ballerina-why-ballerina-left-nav-pages-swanlake","title":"Graphical","description":"See why the support for a visual representation of the development experience lays the foundation for designing the syntax and semantics of the Ballerina programming language.","keywords":"ballerina, programming language, sequence diagram, graphical, diagram editor, why ballerina","intro":"See why the support for a visual representation of the development experience lays the foundation for designing the syntax and semantics of the Ballerina programming language.","permalink":"/why-ballerina/graphical/","active":"graphical"},"content":"\nIn todayâ€™s cloud era, you need technologies that can model distributed systems in a more developer-friendly way. The feature-rich development experience of the [Ballerina Visual Studio code extension](https://marketplace.visualstudio.com/items?itemName=WSO2.ballerina) brings in graphical representations for designing and editing your services, modeling how concurrent execution flows and how multiple actors interact with each other, and mapping the data conversions within your applications.\n\nBallerina provides the flexibility of a general-purpose language with the capabilities to model and visualize solutions based on higher-level abstractions derived from the graphical representations provided by its developer tooling features as described below.\n\n## Service Designers\n\nThe interactive visual interfaces provided by the Ballerina VS Code extension enable the [designing and developing of HTTP and GraphQL services](https://wso2.com/ballerina/vscode/docs/design-the-services/) via graphical representations with a limited understanding of the underlying syntax and configurations.\n\n## Sequence Diagram and Flow Diagram\n\nThe [Ballerina Visulaizer](/learn/vs-code-extension/implement-the-code/ballerina-visualizer-view/) provided by the Ballerina VS Code extension allows you to visualize a program written in Ballerina, as a sequence diagram or a flow diagram. The diagram will display the logic and network interaction of a function or a service resource. You can view and edit these diagrams using the Ballerina VS Code extension.\n\n## Data Mapper\n\nThe Ballerina VS Code extension supports [creating and updating the data mappings](/learn/vs-code-extension/implement-the-code/data-mapper/) to convert data between the corresponding input and output types. The user interface eases performing data integration, migration, and transformation elements of the data mapping process via the graphical representation of the source code.\n","id":"graphical","slug":"graphical","codes":"[]"},"__N_SSG":true}