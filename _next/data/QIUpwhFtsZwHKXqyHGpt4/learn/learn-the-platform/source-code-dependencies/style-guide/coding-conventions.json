{"pageProps":{"frontmatter":{"layout":"ballerina-style-guide-left-nav-pages-swanlake","title":"Coding conventions","description":"The Ballerina Style Guide aims at maintaining a standard coding style among the Ballerina community. The Ballerina code formatting tools are based on this guide.","keywords":"ballerina, programming language, ballerina style guide","permalink":"/learn/style-guide/coding-conventions/","active":"coding-conventions","intro":"This Ballerina Style Guide aims at maintaining a standard coding style among the Ballerina community. Therefore, the Ballerina code formatting tools are based on this guide."},"content":"\n## Indentation and line length\n* Use four spaces (not tabs) for each level of indentation.\n* Keep the maximum length of a line to 120 characters. \n\n> **Note:** You can configure tools and plugins to use spaces when indenting and to change the maximum number of characters in a line.\n\n## Line spacing\n\n* Use only a single space to separate keywords, types, and identifiers. \n   \n**Do's**\n\n```ballerina\npublic function getFullName() returns string {\n    string fullName = \"john doe\";\n    return fullName;\n}\n```\n\n**Don'ts**\n\n```ballerina\npublic   function   getFullName()   returns   string {\n    string   fullName = \"john doe\";\n    return     fullName;\n}\n```\n\nFew exceptions for this rule are:\n- Do not keep spaces around a type when it is enclosed using angle brackets `<string>`. \n      \n**Example,**\n\n```ballerina\nmap<string> names = {};\n```\n\n- Do not keep spaces between the type and the opening bracket in the array definition `string[]`.\n      \n**Example,**\n\n```ballerina\n    string[] names = [];\n```\n\n* If it is a list of values separated by commas, add only a single space after each comma and don't add spaces before the comma.\n  \n**Example,**\n\n```ballerina\n[string, int, boolean] tupleVar = [\"\", 0, false];\n\nint[] arrayOfInteger = [1, 2, 3, 4];\n\nmap<string> stringMap = {one: st1, two: st2, three: st3};\n\nPerson personRecord = {name: \"marcus\", id: 0};\n\nfunction foo(string name, int id) {\n}\n    \nservice / on ep1, ep2 {\n    ...\n}\n```\n\n## Blank lines\n\nSeparate both statements and top-level definitions by zero or one blank lines.\n\n**Example,**\n  \n```ballerina\nimport ballerina/http;\nimport ballerina/io;\n\nconst string CITY = \"Colombo\";\nconst int CITY_NO = 1;\n\nfunction getName() returns string {\n    string firstName = \"john\";\n    string lastName = \"doe\";\n\n    return firstName + lastName;\n}\n\nfunction setName(string name) {\n}\n\nfunction setAge(int age) {\n}\n```\n \n## Blocks\n* Opening curly braces of a block should be placed inline.\n  \n**Do's**\n\n```ballerina\nif true {\n}\n  \nfunction setName(string name) {\n    ...\n}\n```\n\n**Don'ts**\n\n```ballerina\nif true\n{\n    \n}\n\nfunction setName(string name)\n{\n  \n}\n```\n\n* Add a single space before the opening curly braces. \n\n**Example,**\n\n```ballerina\nfunction func1() {\n    if true {\n    }\n}\n```\n\n* If an inline block is empty, do not keep spaces in between the opening and closing braces.\n  \n**Example,**\n\n```ballerina\nfunction func1() {\n}\n``` \n\n* Indent all the statements inside a block to be at the same level.\n* Indent the closing brace of a block to align it with the starting position of the block statement.\n\n**Example,**\n  \n```ballerina\nif false {\n   int x = 2;\n   string a = \"hello\";\n}\n  \nmatch a {\n   ...\n}\n```\n\n## Parentheses and brackets\n* Do not have spaces after opening parenthesis/bracket and before closing parenthesis/bracket.\n  \n**Example,**\n\n```ballerina\n[string, int] tupleVar = [\"\", 0];\n\nfunction setValue(string value) {\n    ...\n}\n\npublic function main() {\n    setValue(\"value\");\n}\n```\n\n* To define empty parentheses/brackets, do not keep spaces between the opening and closing parentheses/brackets. i.e. `()` ,`[]`.\n  \n**Example,**\n\n```ballerina\nint[] a = [];\nint|() result = getResult();\n```\n  \n## Line breaks\n\n* Have only one statement in a line.\n* When splitting lines, which contain operator(s), split them right before an operator.\n  \n**Example,**\n  \n```ballerina\n// Binary operations.\nstring s = \"added \" + People.name\n    + \" in to database.\";\n  \n// Function invocation.\nstring s = person\n    .getName();\n  \n// Binary operations in if condition\nif isNameAvailable\n    && (i == 1) {\n    ...\n}\n```\n\n* When splitting lines, which contains separator(s), split them right after a separator.\n  \n**Example,**\n    \n```ballerina\n// Function parameters.\nfunction getName(int id, int age,\n    string searchValue) returns string {\n    ...\n}\n```\n\n* If there isn't any operator or separator to break the line from, move the whole expression to a new line.\n  \n**Example,**\n\n```ballerina\n// String literal.\nstring s1 =\n    \"My name is not in this description\";\n  \n// Function invocation.\nstring s2 =\n    getPersonNameWithUpperCaseLetters();\n``` \n\n* If a line exceeds the maximum line length, start from the end of the line and come towards the start of the line until you find a point, which matches the above rules to break the line.\n* Indent split lines with relation to the starting position of the statement or definition.\n  \n**Example,**\n\n```ballerina\nif isNameAvailable\n    && (i == 1) {\n    ...\n}\n  \n// Function parameters.\nfunction getName(int id, int age,\n    string searchValue) returns string {\n    ...\n}\n```  \n\n* However, if you cannot add the type-casting expression or statement with the constrained type in a single line \n  due to it exceeding the max line length, \n  - move the casting type with the operators to a new line.\n  \n**Example,**\n      \n```ballerina\nstring name =\n    <string>person.name;\n```\n  \n  - keep the constrained type on the same line by splitting the statement from a point before the constraint type.\n      \n**Example,**\n\n```ballerina\nmap<int|string> registry = {\n    name: \"marcus\"\n};\n```\n\n<style> #tree-expand-all , #tree-collapse-all, .cTocElements {display:none;} .cGitButtonContainer {padding-left: 40px;} </style>\n","id":"coding-conventions","sub":"source-code-dependencies","third":"style-guide","slug":"source-code-dependencies/style-guide/coding-conventions","codes":"[[-1617544407,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getFullName</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> fullName </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;john doe&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> fullName;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[404953577,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #6F42C1\\\">getFullName</span><span style=\\\"color: #24292E\\\">()   </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">   fullName </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;john doe&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\">     fullName;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[498808875,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> names </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {};</span></span></code></pre>\"],[2074738289,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[] names </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [];</span></span></code></pre>\"],[944824309,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">[</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">boolean</span><span style=\\\"color: #24292E\\\">] tupleVar </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #D73A49\\\">false</span><span style=\\\"color: #24292E\\\">];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\">[] arrayOfInteger </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">2</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">3</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">4</span><span style=\\\"color: #24292E\\\">];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> stringMap </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {one</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> st1, two</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> st2, three</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> st3};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">Person personRecord </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {name</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;marcus&quot;</span><span style=\\\"color: #24292E\\\">, id</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">foo</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">name</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">id</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> / </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> ep1, ep2 {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1357844159,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/http;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">const </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">CITY</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Colombo&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">const </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">CITY_NO</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getName</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> firstName </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;john&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> lastName </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;doe&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> firstName </span><span style=\\\"color: #D73A49\\\">+</span><span style=\\\"color: #24292E\\\"> lastName;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">setName</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">name</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">setAge</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">age</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[1038300677,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">true</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">setName</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">name</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-437873131,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">setName</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">name</span><span style=\\\"color: #24292E\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-654670807,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">func1</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">true</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1521589324,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">func1</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[203724385,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">false</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> x </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">2</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> a </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;hello&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">match</span><span style=\\\"color: #24292E\\\"> a {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[824910540,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">[</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\">] tupleVar </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">setValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">value</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">main</span><span style=\\\"color: #24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6F42C1\\\">setValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;value&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[1784247229,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\">[] a </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">() result </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getResult</span><span style=\\\"color: #24292E\\\">();</span></span></code></pre>\"],[766179059,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Binary operations.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> s </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;added &quot;</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">+</span><span style=\\\"color: #24292E\\\"> People.name</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">+</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot; in to database.&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Function invocation.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> s </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> person</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    .</span><span style=\\\"color: #6F42C1\\\">getName</span><span style=\\\"color: #24292E\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Binary operations in if condition</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> isNameAvailable</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">&amp;&amp;</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #E36209\\\">i</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">==</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1572903108,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Function parameters.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getName</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">id</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">age</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">searchValue</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1666026552,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// String literal.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> s1 </span><span style=\\\"color: #D73A49\\\">=</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #032F62\\\">&quot;My name is not in this description&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Function invocation.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> s2 </span><span style=\\\"color: #D73A49\\\">=</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6F42C1\\\">getPersonNameWithUpperCaseLetters</span><span style=\\\"color: #24292E\\\">();</span></span></code></pre>\"],[1459351278,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> isNameAvailable</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">&amp;&amp;</span><span style=\\\"color: #24292E\\\"> (</span><span style=\\\"color: #E36209\\\">i</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">==</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">1</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Function parameters.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getName</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">id</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">age</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">searchValue</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1663751973,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name </span><span style=\\\"color: #D73A49\\\">=</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\">person.name;</span></span></code></pre>\"],[868430437,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #D73A49\\\">|string&gt;</span><span style=\\\"color: #24292E\\\"> registry </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    name</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;marcus&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"]]"},"__N_SSG":true}