{"pageProps":{"samples":{"better-security":{"frontmatter":{"title":"Better security","description":"Ballerina offers robust security features like encryption, authentication, and authorization, essential for businesses handling sensitive data. It also ensures query integrity with depth validation and complexity analysis.","url":"https://github.com/ballerina-guides/integration-samples/blob/graphql-security/graphql-social-media-service/service.bal","image":""},"content":"```\nlistener graphql:Listener graphqlListener = new (9090,\n    secureSocket = {\n        key: {\n            certFile: \"../resource/path/to/public.crt\",\n            keyFile: \"../resource/path/to/private.key\"\n        }\n    }\n);\n\n@graphql:ServiceConfig {\n    auth: [\n        {\n            oauth2IntrospectionConfig: {\n                url: \"https://mytoken.endpoint/oauth2/introspect\",\n                tokenTypeHint: \"access_token\",\n                scopeKey: \"scp\",\n                clientConfig: {\n                    customHeaders: {\"Authorization\": \"Basic YWRtaW46YWRtaW4=\"},\n                    secureSocket: {\n                        cert: \"../resource/path/to/public.crt\"\n                    }\n                }\n            },\n            scopes: [\"admin\"]\n        }\n    ],\n    // Validate the query depth.\n    maxQueryDepth: 5,\n    queryComplexityConfig: {\n        // Limit the complexity of the query being executed.\n        maxComplexity: 50\n    }\n}\nservice /graphql on graphqlListener {\n\n    @graphql:ResourceConfig {\n        // Define complexity for the field.\n        complexity: 10\n    }\n    resource function get users() returns User[] {\n        // ...\n    }\n    remote function createPost(graphql:Context context, NewPost newPost) returns Post|error {\n        // ...\n    }\n}\n\npublic type NewPost readonly & record {|\n    // Validate user inputs.\n    @constraint:String {\n        maxLength: 25,\n        minLength: 5\n    }\n    string title;\n|};\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"listener graphql:Listener graphqlListener = new (9090,\n    secureSocket = {\n        key: {\n            certFile: &#x22;../resource/path/to/public.crt&#x22;,\n            keyFile: &#x22;../resource/path/to/private.key&#x22;\n        }\n    }\n);\n\n@graphql:ServiceConfig {\n    auth: [\n        {\n            oauth2IntrospectionConfig: {\n                url: &#x22;https://mytoken.endpoint/oauth2/introspect&#x22;,\n                tokenTypeHint: &#x22;access_token&#x22;,\n                scopeKey: &#x22;scp&#x22;,\n                clientConfig: {\n                    customHeaders: {&#x22;Authorization&#x22;: &#x22;Basic YWRtaW46YWRtaW4=&#x22;},\n                    secureSocket: {\n                        cert: &#x22;../resource/path/to/public.crt&#x22;\n                    }\n                }\n            },\n            scopes: [&#x22;admin&#x22;]\n        }\n    ],\n    // Validate the query depth.\n    maxQueryDepth: 5,\n    queryComplexityConfig: {\n        // Limit the complexity of the query being executed.\n        maxComplexity: 50\n    }\n}\nservice /graphql on graphqlListener {\n\n    @graphql:ResourceConfig {\n        // Define complexity for the field.\n        complexity: 10\n    }\n    resource function get users() returns User[] {\n        // ...\n    }\n    remote function createPost(graphql:Context context, NewPost newPost) returns Post|error {\n        // ...\n    }\n}\n\npublic type NewPost readonly &#x26; record {|\n    // Validate user inputs.\n    @constraint:String {\n        maxLength: 25,\n        minLength: 5\n    }\n    string title;\n|};\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">listener</span><span style=\"color:#24292E\"> graphql</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Listener graphqlListener </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#005CC5\">9090</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">    secureSocket</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        key:</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            certFile</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"../resource/path/to/public.crt\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            keyFile</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"../resource/path/to/private.key\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">@</span><span style=\"color:#005CC5\">graphql</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">ServiceConfig</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">            oauth2IntrospectionConfig</span><span style=\"color:#24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                url</span><span style=\"color:#24292E\">: </span><span style=\"color:#032F62\">\"https://mytoken.endpoint/oauth2/introspect\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                tokenTypeHint</span><span style=\"color:#24292E\">: </span><span style=\"color:#032F62\">\"access_token\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                scopeKey</span><span style=\"color:#24292E\">: </span><span style=\"color:#032F62\">\"scp\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                clientConfig</span><span style=\"color:#24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                    customHeaders</span><span style=\"color:#24292E\">: {</span><span style=\"color:#032F62\">\"Authorization\"</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Basic YWRtaW46YWRtaW4=\"</span><span style=\"color:#24292E\">},</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                    secureSocket</span><span style=\"color:#24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                        cert</span><span style=\"color:#24292E\">: </span><span style=\"color:#032F62\">\"../resource/path/to/public.crt\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            },</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">            scopes</span><span style=\"color:#24292E\">: [</span><span style=\"color:#032F62\">\"admin\"</span><span style=\"color:#24292E\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    ],</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">    // Validate the query depth.</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    maxQueryDepth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 5</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    queryComplexityConfig</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Limit the complexity of the query being executed.</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        maxComplexity</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 50</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#6F42C1\"> /graphql</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#24292E\"> graphqlListener {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">    @</span><span style=\"color:#005CC5\">graphql</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">ResourceConfig</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // Define complexity for the field.</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        complexity</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 10</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> users</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> User[] {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> createPost</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">graphql</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Context context, </span><span style=\"color:#E36209\">NewPost</span><span style=\"color:#E36209\"> newPost</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Post</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">        // ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> type</span><span style=\"color:#6F42C1\"> NewPost</span><span style=\"color:#D73A49\"> readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">    // Validate user inputs.</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    @</span><span style=\"color:#005CC5\">constraint</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">String</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        maxLength</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 25</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        minLength</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 5</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> title;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"clean-and-simple-code-apollo":{"frontmatter":{"title":"Apollo","description":"","url":"","image":""},"content":"\n```javascript\nimport { ApolloServer } from '@apollo/server';\nimport { startStandaloneServer } from '@apollo/server/standalone';\n\nconst typeDefs = `#graphql\n    type Book {\n        title: String\n        author: String\n    }\n\n    type Query {\n        books: [Book]\n    }\n`;\n\nconst books = [\n    {\n        title: 'Harry Potter',\n        author: 'J. K. Rowling',\n    },\n    {\n        title: 'The Lord of the Rings',\n        author: 'J. R. R. Tolkien',\n    },\n];\n\nconst resolvers = {\n    Query: {\n        books: () => books,\n    },\n};\n\nconst server = new ApolloServer({\n    typeDefs,\n    resolvers,\n});\n\nawait startStandaloneServer(server, {\n    listen: { port: 4000 },\n});\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"import { ApolloServer } from &#x27;@apollo/server&#x27;;\nimport { startStandaloneServer } from &#x27;@apollo/server/standalone&#x27;;\n\nconst typeDefs = &#x60;#graphql\n    type Book {\n        title: String\n        author: String\n    }\n\n    type Query {\n        books: [Book]\n    }\n&#x60;;\n\nconst books = [\n    {\n        title: &#x27;Harry Potter&#x27;,\n        author: &#x27;J. K. Rowling&#x27;,\n    },\n    {\n        title: &#x27;The Lord of the Rings&#x27;,\n        author: &#x27;J. R. R. Tolkien&#x27;,\n    },\n];\n\nconst resolvers = {\n    Query: {\n        books: () => books,\n    },\n};\n\nconst server = new ApolloServer({\n    typeDefs,\n    resolvers,\n});\n\nawait startStandaloneServer(server, {\n    listen: { port: 4000 },\n});\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { ApolloServer } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> '@apollo/server'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { startStandaloneServer } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> '@apollo/server/standalone'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> typeDefs</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#032F62\"> `#graphql</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">    type Book {</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        title: String</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        author: String</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#032F62\">    type Query {</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        books: [Book]</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">    }</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">`</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> books</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        title: </span><span style=\"color:#032F62\">'Harry Potter'</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        author: </span><span style=\"color:#032F62\">'J. K. Rowling'</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        title: </span><span style=\"color:#032F62\">'The Lord of the Rings'</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        author: </span><span style=\"color:#032F62\">'J. R. R. Tolkien'</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> resolvers</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Query: {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">        books</span><span style=\"color:#24292E\">: () </span><span style=\"color:#D73A49\">=></span><span style=\"color:#24292E\"> books,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> server</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#6F42C1\"> ApolloServer</span><span style=\"color:#24292E\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    typeDefs,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    resolvers,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">await</span><span style=\"color:#6F42C1\"> startStandaloneServer</span><span style=\"color:#24292E\">(server, {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    listen: { port: </span><span style=\"color:#005CC5\">4000</span><span style=\"color:#24292E\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"clean-and-simple-code-ballerina":{"frontmatter":{"title":"Ballerina","description":"","url":"","image":""},"content":"\n```ballerina\nimport ballerina/graphql;\n\ntype Book record {|\n    string title;\n    string author;\n|};\n\nBook[] books = [\n    {\n        title: \"Harry Potter\",\n        author: \"J. K. Rowling\"\n    },\n    {\n        title: \"The Lord of the Rings\",\n        author: \"J. R. R. Tolkien\"\n    }\n];\n\nservice on new graphql:Listener(9090) {\n    resource function get books() returns Book[] => books;\n}\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"import ballerina/graphql;\n\ntype Book record {|\n    string title;\n    string author;\n|};\n\nBook[] books = [\n    {\n        title: &#x22;Harry Potter&#x22;,\n        author: &#x22;J. K. Rowling&#x22;\n    },\n    {\n        title: &#x22;The Lord of the Rings&#x22;,\n        author: &#x22;J. R. R. Tolkien&#x22;\n    }\n];\n\nservice on new graphql:Listener(9090) {\n    resource function get books() returns Book[] => books;\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/graphql;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Book</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> title;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> author;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">Book[] books </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        title</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Harry Potter\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        author</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"J. K. Rowling\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        title</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"The Lord of the Rings\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        author</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"J. R. R. Tolkien\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> graphql:Listener(</span><span style=\"color:#005CC5\">9090</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> books</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Book[] </span><span style=\"color:#D73A49\">=></span><span style=\"color:#24292E\"> books;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"clean-and-simple-code":{"frontmatter":{"title":"Clean and simple code","description":"Ballerina provides a simple and clean way to write GraphQL services with fewer lines of code compared to Apollo. Its concise syntax and built-in features allow streamlined development, resulting in more efficient and maintainable GraphQL services. Ballerina's focus on simplicity helps developers achieve their goals with ease and clarity.","url":"","image":""},"content":"","code":""},"cli-tool":{"frontmatter":{"title":"GraphQL CLI tool - An all-in-one tool for GraphQL","description":"Discover the Ballerina GraphQL CLI tool. Easily generate custom GraphQL clients from schemas and access endpoints. Create and share Ballerina GraphQL service schemas to streamline collaboration and development workflows.","url":"https://ballerina.io/learn/graphql-tool/","image":"images/usecases/integration/apollo-graphql/graphql-cli-tool.png"},"content":"\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"community-driven-development":{"frontmatter":{"title":"Community-driven development","description":"Ballerina is a community-driven open-source project with contributions from developers around the world. This means that developers have access to a rich ecosystem of libraries, tools, and resources that can enhance their automation workflows.","url":"","image":"images/usecases/integration/community-driven-development.png"},"content":"","code":""},"connect-with-anything":{"frontmatter":{"title":"Connect with anything","description":"Access thousands of connectors for HTTP APIs (OpenAPI), event APIs (AsyncAPI), GraphQL services, legacy systems, and data stores, allowing seamless data transfer to and from any system, anywhere.","url":"","image":""},"content":"```ballerina\nconfigurable string token = ?;\n\nservice /graphql on new graphql:Listener(9090) {\n    final github:Client githubClient;\n\n    function init() returns error? {\n        self.githubClient = check new ({auth: {token}});\n    }\n\n    resource function get repositories() returns Repository[]|error {\n        stream<Repository, github:Error?> repositories = \n            check self.githubClient->getRepositories();\n        return from github:Repository repository in repositories\n            select repository;\n    }\n\n    remote function createIssue(CreateIssueInput createIssueInput, \n            string owner, string repositoryName) returns github:Issue|error {\n        Issue issue = \n            check self.githubClient->createIssue(createIssueInput, owner, repositoryName);\n        check produceIssue(issue, repositoryName);\n        return issue;\n    }\n\n    resource function subscribe issues(string repositoryName) returns stream<Issue>|error {\n        IssueStream issueStreamGenerator = check new (repositoryName);\n        return new (issueStreamGenerator);\n    }\n}\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"configurable string token = ?;\n\nservice /graphql on new graphql:Listener(9090) {\n    final github:Client githubClient;\n\n    function init() returns error? {\n        self.githubClient = check new ({auth: {token}});\n    }\n\n    resource function get repositories() returns Repository[]|error {\n        stream<Repository, github:Error?> repositories = \n            check self.githubClient->getRepositories();\n        return from github:Repository repository in repositories\n            select repository;\n    }\n\n    remote function createIssue(CreateIssueInput createIssueInput, \n            string owner, string repositoryName) returns github:Issue|error {\n        Issue issue = \n            check self.githubClient->createIssue(createIssueInput, owner, repositoryName);\n        check produceIssue(issue, repositoryName);\n        return issue;\n    }\n\n    resource function subscribe issues(string repositoryName) returns stream<Issue>|error {\n        IssueStream issueStreamGenerator = check new (repositoryName);\n        return new (issueStreamGenerator);\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> token </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#6F42C1\"> /graphql</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> graphql:Listener(</span><span style=\"color:#005CC5\">9090</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    final</span><span style=\"color:#24292E\"> github</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client githubClient;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    function</span><span style=\"color:#6F42C1\"> init</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        self</span><span style=\"color:#24292E\">.githubClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> ({auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {token}});</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> repositories</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Repository[]</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        stream&#x3C;</span><span style=\"color:#24292E\">Repository, github</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error?</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> repositories </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> </span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            check</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.githubClient</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">getRepositories</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#24292E\"> github</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Repository repository </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> repositories</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            select</span><span style=\"color:#24292E\"> repository;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> createIssue</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">CreateIssueInput</span><span style=\"color:#E36209\"> createIssueInput</span><span style=\"color:#24292E\">, </span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            string</span><span style=\"color:#E36209\"> owner</span><span style=\"color:#24292E\">, </span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> repositoryName</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> github</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Issue</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Issue issue </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> </span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            check</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.githubClient</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">createIssue</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">createIssueInput</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">owner</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">repositoryName</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        check</span><span style=\"color:#6F42C1\"> produceIssue</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">issue</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">repositoryName</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> issue;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> subscribe</span><span style=\"color:#6F42C1\"> issues</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> repositoryName</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> stream&#x3C;</span><span style=\"color:#24292E\">Issue</span><span style=\"color:#D73A49\">>|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        IssueStream issueStreamGenerator </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">repositoryName</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">issueStreamGenerator</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"designer-tool":{"frontmatter":{"title":"Built-in designer tool for GraphQL","description":"Explore the built-in GraphQL API designer, a visual tool made available via the Ballerina VS Code plugin. Easily design and prototype GraphQL APIs for a smooth development experience. Use this visual tool to understand and explain your GraphQL services better.","url":"https://wso2.com/ballerina/vscode/docs/design-the-services/graphql-api-designer/","image":"images/usecases/integration/apollo-graphql/graphql-diagram-editor.png"},"content":"","code":""},"diagram-when-you-need":{"frontmatter":{"title":"Diagram when you need it, Code when you don't","description":"Ballerina diagrams provide great creativity and flexibility in the early stages of development, allowing developers to visualize and iterate on their ideas quickly. However, developers can easily switch to writing code when delivering a more polished product by taking advantage of Ballerina's powerful language features.","url":"","image":"images/usecases/integration/diagram-when-you-need-it.png"},"content":"","code":""},"git-based-workflow":{"frontmatter":{"title":"Your typical Git-based workflow: edit, debug, and test in VS Code","description":"Ballerina provides built-in editing, debugging, and testing tools making it easier for developers to test, debug, deploy, and optimize their automation workflows.","url":"","image":"images/usecases/integration/edit-debug-diagram.png"},"content":"","code":""},"similarities-default-values-ballerina":{"frontmatter":{"title":"Default values","description":"Ballerina has in-built default value support, similar to GraphQL.","url":"","image":""},"content":"```\nresource function get greeting(string name = \"Anonymous\") returns string;\n```","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"resource function get greeting(string name = &#x22;Anonymous&#x22;) returns string;\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> greeting</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> name</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#032F62\"> \"Anonymous\"</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\">;</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"similarities-default-values-graphql":{"frontmatter":{"title":"","description":"","url":"","image":""},"content":"```graphql\ngreeting(name: String! = \"Anonymous\"): String!\n```","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"greeting(name: String! = &#x22;Anonymous&#x22;): String!\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#6F42C1\">greeting</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">name</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">String</span><span style=\"color:#D73A49\">!</span><span style=\"color:#24292E\"> = </span><span style=\"color:#032F62\">\"Anonymous\"</span><span style=\"color:#24292E\">): </span><span style=\"color:#6F42C1\">String</span><span style=\"color:#24292E\">!</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"similarities-nullability-ballerina":{"frontmatter":{"title":"Nullability","description":"Ballerina supports nullable types similar to GraphQL.","url":"","image":""},"content":"```ballerina\ntype Person record {|\n   string? name;\n|};\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"type Person record {|\n   string? name;\n|};\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Person</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">   string</span><span style=\"color:#24292E\">? name;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"similarities-nullability-graphql":{"frontmatter":{"title":"","description":"","url":"","image":""},"content":"```graphql\ntype Profile {\n   name: String\n}\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"type Profile {\n   name: String\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#005CC5\"> Profile</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   name</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">String</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"similarities-object-types-ballerina":{"frontmatter":{"title":"Object types","description":"Using Ballerina record types is very much similar to GraphQL object definitions.","url":"","image":""},"content":"```ballerina\ntype Person record {|\n   string name;\n   int age;\n|};\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"type Person record {|\n   string name;\n   int age;\n|};\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Person</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">   string</span><span style=\"color:#24292E\"> name;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">   int</span><span style=\"color:#24292E\"> age;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"similarities-object-types-graphql":{"frontmatter":{"title":"","description":"","url":"","image":""},"content":"```graphql\ntype Profile {\n   name: String!\n   age: Int!\n}\n```","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"type Profile {\n   name: String!\n   age: Int!\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#005CC5\"> Profile</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   name</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">String</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   age</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">Int</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"similarities-union-types-ballerina":{"frontmatter":{"title":"Union types","description":"Ballerina supports union types similar to GraphQL union types.","url":"","image":""},"content":"```ballerina\ntype SearchResult Human|Droid;\n```","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"type SearchResult Human|Droid;\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> SearchResult</span><span style=\"color:#D73A49\"> Human|Droid</span><span style=\"color:#24292E\">;</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"similarities-union-types-graphql":{"frontmatter":{"title":"","description":"","url":"","image":""},"content":"```graphql\nunion SearchResult = Human | Droid\n```","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"union SearchResult = Human | Droid\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">union</span><span style=\"color:#005CC5\"> SearchResult</span><span style=\"color:#24292E\"> = </span><span style=\"color:#005CC5\">Human</span><span style=\"color:#24292E\"> | </span><span style=\"color:#005CC5\">Droid</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"similarities":{"frontmatter":{"title":"Ballerina is GraphQL - GraphQL is Ballerina","description":"Ballerina, a strongly-typed language, is perfectly suited for GraphQL's declarative data fetching. With compile-time error handling, Ballerina ensures reliability and efficiency, making it an excellent choice for building robust and user-friendly GraphQL APIs. The similarity between Ballerina and GraphQL syntax enhances the development experience. Ballerina is an ideal choice for developers looking to build reliable, efficient, and intuitive GraphQL APIs.","url":"","image":""},"content":"","code":""},"simplifying-graphql-api-development-ballerina":{"frontmatter":{"title":"Ballerina code","description":"","url":"","image":""},"content":"\n```ballerina\nimport ballerina/graphql;\n\nservice on new graphql:Listener(9090) {\n    resource function get profile() returns Profile {\n        return {\n            name: \"John Doe\",\n            age: 30,\n            address: {street: \"15 Yemen Road\", city: \"Yemen\", country: \"YM\"}\n        };\n    }\n}\n\ntype Profile record {|\n    string name;\n    int age;\n    Address address;\n|};\n\ntype Address record {|\n    string street;\n    string city;\n    string country;\n|};\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"import ballerina/graphql;\n\nservice on new graphql:Listener(9090) {\n    resource function get profile() returns Profile {\n        return {\n            name: &#x22;John Doe&#x22;,\n            age: 30,\n            address: {street: &#x22;15 Yemen Road&#x22;, city: &#x22;Yemen&#x22;, country: &#x22;YM&#x22;}\n        };\n    }\n}\n\ntype Profile record {|\n    string name;\n    int age;\n    Address address;\n|};\n\ntype Address record {|\n    string street;\n    string city;\n    string country;\n|};\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/graphql;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> graphql:Listener(</span><span style=\"color:#005CC5\">9090</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> profile</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Profile {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            name</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"John Doe\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            age</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 30</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            address</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {street: </span><span style=\"color:#032F62\">\"15 Yemen Road\"</span><span style=\"color:#24292E\">, city</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Yemen\"</span><span style=\"color:#24292E\">, country</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"YM\"</span><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Profile</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> name;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> age;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Address address;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Address</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> street;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> city;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> country;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"simplifying-graphql-api-development-graphql":{"frontmatter":{"title":"Generated schema","description":"","url":"","image":""},"content":"\n```graphql\ntype Query {\n   profile: Profile!\n}\n\ntype Profile {\n   name: String!\n   age: Int!\n   address: Address!\n}\n\ntype Address {\n   street: String!\n   city: String!\n   country: String!\n}\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"type Query {\n   profile: Profile!\n}\n\ntype Profile {\n   name: String!\n   age: Int!\n   address: Address!\n}\n\ntype Address {\n   street: String!\n   city: String!\n   country: String!\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#005CC5\"> Query</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   profile</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">Profile</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#005CC5\"> Profile</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   name</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">String</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   age</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">Int</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   address</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">Address</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#005CC5\"> Address</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   street</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">String</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   city</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">String</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#E36209\">   country</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">String</span><span style=\"color:#D73A49\">!</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"simplifying-graphql-api-development":{"frontmatter":{"title":"Seamlessly generate schema from code","description":"Ballerina GraphQL simplifies the life of developers by generating the GraphQL schema directly from the Ballerina code. With this automatic schema generation, developers can focus on writing code, streamlining development, and ensuring consistency between the schema and the code. It offers convenience, efficiency, and ease of use in building GraphQL services with Ballerina.","url":"","image":""},"content":"","code":""},"subscription-support-apollo":{"frontmatter":{"title":"Apollo","description":"","url":"","image":""},"content":"\n```javascript\nimport { ApolloServer } from '@apollo/server';\nimport { expressMiddleware } from '@apollo/server/express4';\nimport { ApolloServerPluginDrainHttpServer } from '@apollo/server/plugin/drainHttpServer';\nimport { createServer } from 'http';\nimport express from 'express';\nimport { makeExecutableSchema } from '@graphql-tools/schema';\nimport { WebSocketServer } from 'ws';\nimport { useServer } from 'graphql-ws/lib/use/ws';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport resolvers from './resolvers';\nimport typeDefs from './typeDefs';\n\nconst schema = makeExecutableSchema({ typeDefs, resolvers });\nconst app = express();\nconst httpServer = createServer(app);\n\nconst wsServer = new WebSocketServer({\n    server: httpServer,\n    path: '/graphql',\n});\nconst serverCleanup = useServer({ schema }, wsServer);\n\nconst server = new ApolloServer({\n    schema,\n    plugins: [\n        ApolloServerPluginDrainHttpServer({ httpServer }),\n        {\n            async serverWillStart() {\n                return {\n                    async drainServer() {\n                        await serverCleanup.dispose();\n                    },\n                };\n            },\n        },\n    ],\n});\n\nawait server.start();\napp.use('/graphql', cors<cors.CorsRequest>(), bodyParser.json(), expressMiddleware(server));\n\nconst PORT = 4000;\nhttpServer.listen(PORT, () => {\n    console.log(`Server is now running on http://localhost:${PORT}/graphql`);\n});\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"import { ApolloServer } from &#x27;@apollo/server&#x27;;\nimport { expressMiddleware } from &#x27;@apollo/server/express4&#x27;;\nimport { ApolloServerPluginDrainHttpServer } from &#x27;@apollo/server/plugin/drainHttpServer&#x27;;\nimport { createServer } from &#x27;http&#x27;;\nimport express from &#x27;express&#x27;;\nimport { makeExecutableSchema } from &#x27;@graphql-tools/schema&#x27;;\nimport { WebSocketServer } from &#x27;ws&#x27;;\nimport { useServer } from &#x27;graphql-ws/lib/use/ws&#x27;;\nimport bodyParser from &#x27;body-parser&#x27;;\nimport cors from &#x27;cors&#x27;;\nimport resolvers from &#x27;./resolvers&#x27;;\nimport typeDefs from &#x27;./typeDefs&#x27;;\n\nconst schema = makeExecutableSchema({ typeDefs, resolvers });\nconst app = express();\nconst httpServer = createServer(app);\n\nconst wsServer = new WebSocketServer({\n    server: httpServer,\n    path: &#x27;/graphql&#x27;,\n});\nconst serverCleanup = useServer({ schema }, wsServer);\n\nconst server = new ApolloServer({\n    schema,\n    plugins: [\n        ApolloServerPluginDrainHttpServer({ httpServer }),\n        {\n            async serverWillStart() {\n                return {\n                    async drainServer() {\n                        await serverCleanup.dispose();\n                    },\n                };\n            },\n        },\n    ],\n});\n\nawait server.start();\napp.use(&#x27;/graphql&#x27;, cors<cors.CorsRequest>(), bodyParser.json(), expressMiddleware(server));\n\nconst PORT = 4000;\nhttpServer.listen(PORT, () => {\n    console.log(&#x60;Server is now running on http://localhost:${PORT}/graphql&#x60;);\n});\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { ApolloServer } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> '@apollo/server'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { expressMiddleware } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> '@apollo/server/express4'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { ApolloServerPluginDrainHttpServer } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> '@apollo/server/plugin/drainHttpServer'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { createServer } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> 'http'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> express </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> 'express'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { makeExecutableSchema } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> '@graphql-tools/schema'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { WebSocketServer } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> 'ws'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> { useServer } </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> 'graphql-ws/lib/use/ws'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> bodyParser </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> 'body-parser'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> cors </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> 'cors'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> resolvers </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> './resolvers'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> typeDefs </span><span style=\"color:#D73A49\">from</span><span style=\"color:#032F62\"> './typeDefs'</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> schema</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#6F42C1\"> makeExecutableSchema</span><span style=\"color:#24292E\">({ typeDefs, resolvers });</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> app</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#6F42C1\"> express</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> httpServer</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#6F42C1\"> createServer</span><span style=\"color:#24292E\">(app);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> wsServer</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#6F42C1\"> WebSocketServer</span><span style=\"color:#24292E\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    server: httpServer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    path: </span><span style=\"color:#032F62\">'/graphql'</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> serverCleanup</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#6F42C1\"> useServer</span><span style=\"color:#24292E\">({ schema }, wsServer);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> server</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#6F42C1\"> ApolloServer</span><span style=\"color:#24292E\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    schema,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    plugins: [</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">        ApolloServerPluginDrainHttpServer</span><span style=\"color:#24292E\">({ httpServer }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            async</span><span style=\"color:#6F42C1\"> serverWillStart</span><span style=\"color:#24292E\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                return</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                    async</span><span style=\"color:#6F42C1\"> drainServer</span><span style=\"color:#24292E\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                        await</span><span style=\"color:#24292E\"> serverCleanup.</span><span style=\"color:#6F42C1\">dispose</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">await</span><span style=\"color:#24292E\"> server.</span><span style=\"color:#6F42C1\">start</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">app.</span><span style=\"color:#6F42C1\">use</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">'/graphql'</span><span style=\"color:#24292E\">, </span><span style=\"color:#6F42C1\">cors</span><span style=\"color:#24292E\">&#x3C;</span><span style=\"color:#6F42C1\">cors</span><span style=\"color:#24292E\">.</span><span style=\"color:#6F42C1\">CorsRequest</span><span style=\"color:#24292E\">>(), bodyParser.</span><span style=\"color:#6F42C1\">json</span><span style=\"color:#24292E\">(), </span><span style=\"color:#6F42C1\">expressMiddleware</span><span style=\"color:#24292E\">(server));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">const</span><span style=\"color:#005CC5\"> PORT</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#005CC5\"> 4000</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">httpServer.</span><span style=\"color:#6F42C1\">listen</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">PORT</span><span style=\"color:#24292E\">, () </span><span style=\"color:#D73A49\">=></span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    console.</span><span style=\"color:#6F42C1\">log</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">`Server is now running on http://localhost:${</span><span style=\"color:#005CC5\">PORT</span><span style=\"color:#032F62\">}/graphql`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"subscription-support-ballerina":{"frontmatter":{"title":"Ballerina","description":"","url":"","image":""},"content":"\n```ballerina\nimport ballerina/graphql;\nimport ballerina/uuid;\n\nservice on new graphql:Listener(9090) {\n    resource function get greeting() returns string {\n        return \"Welcome\";\n    }\n\n    remote function publishMessage(NewPost newPost) returns string|error {\n        check publishPost(postData);\n        return new (postData);\n    }\n\n    resource function subscribe messages() returns stream<Post, error?>|error {\n        string id = uuid:createType1AsString();\n        PostStreamGenerator postStreamGenerator = check new (id);\n        stream<Post, error?> postStream = new (postStreamGenerator);\n        return postStream;\n    }\n}\n```\n","code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"import ballerina/graphql;\nimport ballerina/uuid;\n\nservice on new graphql:Listener(9090) {\n    resource function get greeting() returns string {\n        return &#x22;Welcome&#x22;;\n    }\n\n    remote function publishMessage(NewPost newPost) returns string|error {\n        check publishPost(postData);\n        return new (postData);\n    }\n\n    resource function subscribe messages() returns stream<Post, error?>|error {\n        string id = uuid:createType1AsString();\n        PostStreamGenerator postStreamGenerator = check new (id);\n        stream<Post, error?> postStream = new (postStreamGenerator);\n        return postStream;\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/graphql;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/uuid;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> graphql:Listener(</span><span style=\"color:#005CC5\">9090</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> greeting</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#032F62\"> \"Welcome\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> publishMessage</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">NewPost</span><span style=\"color:#E36209\"> newPost</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        check</span><span style=\"color:#6F42C1\"> publishPost</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">postData</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">postData</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> subscribe</span><span style=\"color:#6F42C1\"> messages</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> stream&#x3C;</span><span style=\"color:#24292E\">Post, </span><span style=\"color:#D73A49\">error?>|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\"> id </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> uuid</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">createType1AsString</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        PostStreamGenerator postStreamGenerator </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">id</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        stream&#x3C;</span><span style=\"color:#24292E\">Post, </span><span style=\"color:#D73A49\">error?></span><span style=\"color:#24292E\"> postStream </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">postStreamGenerator</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> postStream;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"subscription-support":{"frontmatter":{"title":"Out-of-the-box subscription support - No additional libraries are needed","description":"Ballerina offers seamless support for GraphQL subscriptions out-of-the-box, eliminating the need for additional libraries like with Apollo. With Ballerina, you can effortlessly integrate systems like Apache Kafka into your GraphQL subscriptions, enhancing real-time data streaming capabilities. This simplifies development, reduces dependencies, and provides a comprehensive solution for building robust GraphQL subscription-based applications.","url":"https://github.com/ballerina-guides/integration-samples/tree/main/graphql-social-media-service","image":""},"content":"","code":""},"trivial-hosting-in-wso2-choreo-ipaas":{"frontmatter":{"title":"(Extra!) Trivial hosting in WSO2 Choreo","description":"Manual integrations? Scheduled integrations (cron jobs)? Triggered integrations? Integrations as APIs? No problem! Write the code, attach the repo to WSO2 Choreo, and let it do the rest.","url":"https://wso2.com/choreo/integration/","image":"images/choreo-ipaas-image-v2.png"},"content":"","code":""}}},"__N_SSG":true}