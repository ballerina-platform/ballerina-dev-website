{"pageProps":{"samples":{"ai-pair-programming":{"frontmatter":{"title":"AI pair programming for your code","description":"AI code gen like Github Copilot knows Ballerina. Ballerina knows healthcare. Why do all the work? Let AI do at least half of it for you!","url":"","image":"images/health-ai-pair-programming.png"},"code":""},"apis-are-new-dll":{"frontmatter":{"title":"(Extra!) APIs are the new DLLs on Choreo","description":"Deploy healthcare accelerator code into WSO2 Choreo as APIs and access accelerator functionality not only from Ballerina but also other languages such as Java, .Net and Python as internal APIs, or from other systems as external APIs. Bring your own code to the party on Choreo.","url":"https://wso2.com/choreo/internal-developer-platform","image":"images/health-apis-are-new-dll.png"},"code":""},"ballerina-is-fhir":{"frontmatter":{"title":"FHIR? Ballerina is FHIR","description":"With built-in support for FHIR (Fast Healthcare Interoperability Resources), Ballerina makes it easy to develop and deploy healthcare applications that can exchange and process FHIR resources. Ballerina's native FHIR capabilities enable healthcare developers to build scalable and flexible healthcare solutions that can adapt to changing healthcare needs and standards.","url":"https://github.com/ballerina-guides/healthcare-samples/blob/main/working_with_fhir/working_with_fhir_parsing.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// The following example is a simple serialized Patient resource to parse</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">json</span><span style=\"color: #24292E\"> input </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;resourceType&quot;</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Patient&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;name&quot;</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #032F62\">&quot;family&quot;</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Simpson&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        ]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Parse it - you can pass the input (as a string or a json) and the</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// type of the resource you want to parse.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    fhir</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Patient patient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> fhirParser</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">parse</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">input</span><span style=\"color: #24292E\">).</span><span style=\"color: #6F42C1\">ensureType</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Access the parsed data</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    fhir</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">HumanName[]? names </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> patient.name;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> names </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> () </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> names.</span><span style=\"color: #6F42C1\">length</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Failed to parse the names&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Family Name: &quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">names</span><span style=\"color: #24292E\">[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">]);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"ballerina-is-hl7":{"frontmatter":{"title":"HL7?  Ballerina is HL7","description":"Ballerina offers built-in support for the HL7 messaging standard, which is still the most commonly used standard in the healthcare industry to facilitate the exchange of information between different systems. With Ballerina, parsing HL7 messages is a breeze, simplifying the processing and exchange of healthcare data.","url":"https://github.com/ballerina-guides/healthcare-samples/blob/main/working_with_hl7/working_with_hl7_parsing.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6A737D\">// The following example is a simple serialized HL v2.3 ADT A01 message.</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> msg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;MSH|^~</span><span style=\"color: #005CC5\">\\\\</span><span style=\"color: #032F62\">&amp;|ADT1|GOOD HEALTH HOSPITAL|GHH LAB, INC.|GOOD HEALTH HOSPITAL|&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;198808181126|SECURITY|ADT^A01^ADT_A01|MSG00001|P|2.3||</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">EVN|A01|200708181123||&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">PID|1||PATID1234^5^M11^ADT1^MR^GOOD HEALTH HOSPITAL~123456789^^^USSSA^SS||&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;BATMAN^ADAM^A^III||19610615|M||C|2222 HOME STREET^^GREENSBORO^NC^27401-1020|GL|&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;(555) 555-2004|(555)555-2004||S||PATID12345001^2^M10^ADT1^AN^A|444333333|987654^NC|&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">NK1|1|NUCLEAR^NELDA^W|SPO^SPOUSE||||NK^NEXT OF KIN$</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">PV1|1|I|2000^2012^01||||&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;004777^ATTEND^AARON^A|||SUR||||ADM|A0|&quot;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// This message, ADT^A01 is an HL7 data type consisting of several components, so we</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// will cast it as such. The ADT_A01 class extends from Message, providing specialized</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// accessors for ADT^A01&#39;s segments.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">//  </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Ballerina HL7 provides several versions of the ADT_A01 record type, each in a</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// different package (note the import statement above) corresponding to the HL7</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// version for the message.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    hl7v23</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ADT_A01 adtMsg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> hl7</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">parse</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">msg</span><span style=\"color: #24292E\">).</span><span style=\"color: #6F42C1\">ensureType</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">hl7v23</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ADT_A01);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    hl7v23</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">XPN[] patientName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> adtMsg.pid.pid5;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Family Name: &quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">patientName</span><span style=\"color: #24292E\">[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].xpn1);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"connect-to-emrs":{"frontmatter":{"title":"Connect to EMRs, EHRs, data sources and more","description":"Ballerina has 100s of connectors to well-known Health Systems such as Epic, Cerner, athenahealth, and non-health systems such as Salesforce, and can connect to any backend that has a FHIR, HL7, or Open API interface. Go below the hood and connect directly to a database as well if that is the only way to fetch data.","url":"https://github.com/ballerina-guides/healthcare-samples/blob/main/working_with_fhir_connector/working_with_fhir_connector.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6A737D\">// Create a FHIR client configuration</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">fhirClient</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">FHIRConnectorConfig cernerConfig </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    baseURL</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> base,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    mimeType</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> fhirClient:FHIR_JSON,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    authConfig</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        tokenUrl</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> tokenUrl,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        clientId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> clientId,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        clientSecret</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> clientSecret,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        scopes</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> scopes</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Create a FHIR client</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> fhirClient</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">FHIRConnector fhirConnectorObj </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">cernerConfig</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Get a patient resource by id</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    fhirClient</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">FHIRResponse fhirResponse </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> fhirConnectorObj</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">getById</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Patient&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;12724067&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Cerner EMR response: &quot;</span><span style=\"color: #24292E\">, fhirResponse.&#39;resource);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Search for patients who has the given name &quot;John&quot; and birthdate greater than 2000-01-01</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    fhirClient</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">FHIRResponse searchResponse </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> fhirConnectorObj</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">search</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Patient&quot;</span><span style=\"color: #24292E\">, {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;given&quot;</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;John&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;birthdate&quot;</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;gt2000-01-01&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    });</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Cerner EMR search response: &quot;</span><span style=\"color: #24292E\">, searchResponse.&#39;resource);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"powerful-edi-for-claims":{"frontmatter":{"title":"Powerful EDI for claims","description":"Ballerina has powerful support for Electronic Interchange Formats (EDI). In healthcare, this means out of the box handling of X12, 834s, 837s and more region specific standards via native schema mapping. Go from EDI formats to Ballerina Records and back; Do Data Mapping on that and you’re off to the races!","url":"","image":"images/health-edi-claims.png"},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> enrollmentRequest </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">fileReadString</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;enrollments/E0_1.edi&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    m834</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">EDI_834_Benefit_Enrollment_and_Maintenance enrollment </span><span style=\"color: #D73A49\">=</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">         </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> hmart</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">read</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">enrollmentRequest</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">hmart</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">EDI_834).</span><span style=\"color: #6F42C1\">ensureType</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(enrollment.Monetary_Amount_Information[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].Monetary_Amount);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"powerful-health-data-mapping":{"frontmatter":{"title":"Powerful health data mapping","description":"Ballerina makes data mapping seamless through its pre-built HL7v2.x to FHIR transformation functionalities, making short work of healthcare data mapping tasks. Ballerina has cracked the challenge of mapping one kind of data value to another kind of data value, simultaneously as code and picture, so that both are simple, powerful, and boundless.","url":"https://github.com/ballerina-guides/healthcare-samples/blob/main/hl7v2_to_fhir/main.bal","image":"images/health-data-mapping.png"},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> msg </span><span style=\"color: #D73A49\">=</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;MSH|^~</span><span style=\"color: #005CC5\">\\\\</span><span style=\"color: #032F62\">&amp;|ADT1|GOOD HEALTH HOSPITAL|GHH LAB, INC.|GOOD HEALTH&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;HOSPITAL|198808181126|SECURITY|ADT^A01^ADT_A01|MSG00001|P|2.3||</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">EVN|A01|&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;200708181123||</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">PID|1||PATID1234^5^M11^ADT1^MR^GOOD HEALTH HOSPITAL~123456789^^^USSSA^SS||&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;BATMAN^ADAM^A^III||19610615|M||C|2222 HOME STREET^^GREENSBORO^NC^27401-1020|GL|&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;(555)555-2004|(555)555-2004||S||PATID12345001^2^M10^ADT1^AN^A|444333333|987654^NC|&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">NK1|1|NUCLEAR^NELDA^W|SPO^SPOUSE||||NK^NEXT OF KIN$</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">PV1|1|I|2000^2012^01||||&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #032F62\">&quot;004777^ATTEND^AARON^A|||SUR||||ADM|A0|&quot;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Transform HL7v2 message to FHIR R4.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// You can pass a HL7v2 message and get a FHIR R4 Bundle based on</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// the mappings defined at</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// https://build.fhir.org/ig/HL7/v2-to-fhir/branches/master/datatype_maps.html.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">json</span><span style=\"color: #24292E\"> v2tofhirResult </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> v2tofhirr4</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">v2ToFhir</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">msg</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Transformed FHIR message: &quot;</span><span style=\"color: #24292E\">, v2tofhirResult.</span><span style=\"color: #6F42C1\">toString</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;------------------------------------------------------------------&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    hl7</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Message hl7msg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> v2tofhirr4</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">stringToHl7</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">msg</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (hl7msg </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> hl7v23</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ADT_A01) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// v2tofhirr4 library exposes these low level functions as well,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// if you want to work with HL7v2 segments directly.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Transform HL7v2 PID to FHIR R4 Patient Name.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        r4</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">HumanName[] patientName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> v2tofhirr4</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">pidToPatientName</span><span style=\"color: #24292E\">(hl7msg.pid.pid5,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        hl7msg.pid.pid9);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;HL7v23 PID Patient Name: &quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">patientName</span><span style=\"color: #24292E\">[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].</span><span style=\"color: #6F42C1\">toString</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"why-ballerina-for-healthcare-apps":{"frontmatter":{"title":"Why is Ballerina the way to write healthcare applications?","description":"Java and HAPI have long been the de facto for health app development. However, cloud native healthcare application development goes beyond dealing with objects and frameworks. This domain needs a fresh architecture and technology that treats concepts like FHIR and HL7 as first class citizens in the language, alongside concepts like JSON and APIs.<br/><br/>\nBallerina is a language built from ground up for building healthcare applications, quickly, easily and securely. Alongside its powerful integration capabilities, Ballerina natively understands health data standards like FHIR and HL7. It includes FHIR connectors and validators, FHIR API templates, HL7/C-CDA to FHIR data transformations, Capability Statement template, SMART configuration template, EMR connectors, and supports any Implementation Guide with its automatic code and template generation capabilities.","url":"https://central.ballerina.io/ballerinax?q=health&page=1","image":"images/health-bal-pkgs.png"},"code":""}}},"__N_SSG":true}