{"pageProps":{"samples":{"clean1":{"frontmatter":{"title":"","description":"","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"type SalesOrder record {|\n    string itemId;\n    string customerId;\n    string itemName;\n    int quantity;\n    int date;\n|};\n\nfunction removeDuplicates(SalesOrder[] orders) returns SalesOrder[] {\n    return from var {itemId, customerId, itemName, quantity, date} in orders\n        group by itemId, customerId, itemName\n        select {\n            itemId,\n            customerId,\n            itemName,\n            quantity: [quantity][0],\n            date: [date][0]\n        };\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> SalesOrder</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> itemId;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> customerId;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> itemName;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> quantity;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> date;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> removeDuplicates</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">SalesOrder</span><span style=\"color:#24292E\">[] </span><span style=\"color:#E36209\">orders</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> SalesOrder[] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#005CC5\"> var</span><span style=\"color:#24292E\"> {itemId, customerId, itemName, quantity, date} </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        group</span><span style=\"color:#D73A49\"> by</span><span style=\"color:#24292E\"> itemId, customerId, itemName</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        select</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            itemId,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            customerId,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            itemName,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            quantity</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [quantity][</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            date</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [date][</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"clean2":{"frontmatter":{"title":"","description":"","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"public type Customer record {|\n    string name;\n    string city;\n    string phone;\n|};\n\nfunction findDuplicates(Customer[] customers) returns [Customer[], Customer[]] {\n    Customer[] duplicates = [];\n    Customer[] uniqueCustomers = [customers[0]];\n    foreach int customerIdx in 1 ... customers.length() - 1 {\n        foreach Customer uniqueCustomer in uniqueCustomers {\n            Customer customer = customers[customerIdx];\n            if getEditDistance(customer.name, uniqueCustomer.name) < 3 &#x26;&#x26;\n                getEditDistance(customer.city, uniqueCustomer.city) < 2 &#x26;&#x26;\n                getEditDistance(customer.phone, uniqueCustomer.phone) < 4 {\n                duplicates.push(customer);\n            } else {\n                uniqueCustomers.push(customer);\n            }\n        }\n    }\n    return [uniqueCustomers, duplicates];\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> type</span><span style=\"color:#6F42C1\"> Customer</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> name;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> city;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> phone;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> findDuplicates</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Customer</span><span style=\"color:#24292E\">[] </span><span style=\"color:#E36209\">customers</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> [Customer[], Customer[]] {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Customer[] duplicates </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Customer[] uniqueCustomers </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> [customers[</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">]];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    foreach </span><span style=\"color:#005CC5\">int</span><span style=\"color:#24292E\"> customerIdx </span><span style=\"color:#D73A49\">in</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#D73A49\"> ...</span><span style=\"color:#24292E\"> customers.</span><span style=\"color:#6F42C1\">length</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">-</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        foreach </span><span style=\"color:#24292E\">Customer uniqueCustomer </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> uniqueCustomers {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            Customer customer </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> customers[customerIdx];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            if</span><span style=\"color:#6F42C1\"> getEditDistance</span><span style=\"color:#24292E\">(customer.name, uniqueCustomer.name) </span><span style=\"color:#D73A49\">&#x3C;</span><span style=\"color:#005CC5\"> 3</span><span style=\"color:#D73A49\"> &#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                getEditDistance</span><span style=\"color:#24292E\">(customer.city, uniqueCustomer.city) </span><span style=\"color:#D73A49\">&#x3C;</span><span style=\"color:#005CC5\"> 2</span><span style=\"color:#D73A49\"> &#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                getEditDistance</span><span style=\"color:#24292E\">(customer.phone, uniqueCustomer.phone) </span><span style=\"color:#D73A49\">&#x3C;</span><span style=\"color:#005CC5\"> 4</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                duplicates.</span><span style=\"color:#6F42C1\">push</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">customer</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            } </span><span style=\"color:#D73A49\">else</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                uniqueCustomers.</span><span style=\"color:#6F42C1\">push</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">customer</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#24292E\"> [uniqueCustomers, duplicates];</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"data-enrichment-magic":{"frontmatter":{"title":"Data enrichment magic","description":"Ballerina streamlines data enrichment, simplifying the journey from data extraction from databases or APIs to adding depth and context to your insights.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/enrich-data/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"final http:Client geocodingClient = check new (&#x22;https://maps.googleapis.com&#x22;);\n\nisolated service /api/v1 on new http:Listener(8080) {\n    resource function post customerWithGeoCode(Customer customer) returns GeoTaggedCustomer|error {\n        GeocodeResponse response = check geocodingClient->\n            /maps/api/geocode/&#x27;json(address = customer.address, key = geocodingAPIKey);\n        if response.status == &#x22;OK&#x22; {\n            return {\n                ...customer,\n                latitude: response.results[0].geometry.location.lat,\n                longitude: response.results[0].geometry.location.lng\n            };\n        }\n        return error(&#x22;Error while getting the location information.&#x22;);\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client geocodingClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"https://maps.googleapis.com\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> service</span><span style=\"color:#6F42C1\"> /api/v1</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> http:Listener(</span><span style=\"color:#005CC5\">8080</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> post</span><span style=\"color:#6F42C1\"> customerWithGeoCode</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Customer</span><span style=\"color:#E36209\"> customer</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> GeoTaggedCustomer</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        GeocodeResponse response </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> geocodingClient</span><span style=\"color:#D73A49\">-></span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            /</span><span style=\"color:#24292E\">maps</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">api</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">geocode</span><span style=\"color:#D73A49\">/</span><span style=\"color:#6F42C1\">'json</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">address</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> customer.address, </span><span style=\"color:#E36209\">key</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> geocodingAPIKey);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> response.status </span><span style=\"color:#D73A49\">==</span><span style=\"color:#032F62\"> \"OK\"</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            return</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                ...</span><span style=\"color:#24292E\">customer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                latitude</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> response.results[</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">].geometry.location.lat,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                longitude</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> response.results[</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">].geometry.location.lng</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> error</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\"Error while getting the location information.\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"drive-data-interactions-with-models":{"frontmatter":{"title":"Drive data interactions with models","description":"Ballerina's `persist` feature seamlessly connects to databases, retrieves data, and kickstarts your ETL process.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/extract-data-from-database/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"function getOrderData() returns error? {\n    stream<OrderData, persist:Error?> orders = dbClient->/orderdata();\n    check from var orderData in orders\n        do {\n            io:println(orderData);\n        };\n}\n\nfunction getCustomerData() returns error? {\n    stream<CustomerData, persist:Error?> customers = dbClient->/customers();\n    check from var customerData in customers\n        do {\n            io:println(customerData);\n        };\n}\n\nfunction getOrderWithCustomer(string orderId) returns error? {\n    OrderWithCustomer orderwithCustomer = check dbClient->/orderdata/[orderId];\n    io:println(orderwithCustomer);\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> getOrderData</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    stream&#x3C;</span><span style=\"color:#24292E\">OrderData, persist</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error?</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> orders </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> dbClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#6F42C1\">orderdata</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    check</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#005CC5\"> var</span><span style=\"color:#24292E\"> orderData </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        do</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">orderData</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> getCustomerData</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    stream&#x3C;</span><span style=\"color:#24292E\">CustomerData, persist</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error?</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> customers </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> dbClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#6F42C1\">customers</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    check</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#005CC5\"> var</span><span style=\"color:#24292E\"> customerData </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> customers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        do</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">customerData</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> getOrderWithCustomer</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> orderId</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    OrderWithCustomer orderwithCustomer </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> dbClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">orderdata</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">[orderId];</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">orderwithCustomer</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"eleminating-redundency-for-cleaner-data":{"frontmatter":{"title":"Eliminating redundancy for cleaner data","description":"Ballerina simplifies duplicate removal through Ballerina queries and other intuitive constructs.","url":"","image":""},"code":""},"extract-data-from-github":{"frontmatter":{"title":"Unleash data from APIs","description":"Ballerina offers a wide range of built-in connectors, including HTTP and GraphQL clients, making it easy to interact with APIs for efficient data extraction in your ETL pipeline.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/extract-data-from-github/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"configurable string githubAccessToken = ?;\nconfigurable string repoOwner = &#x22;ballerina-platform&#x22;;\nconfigurable string repoName = &#x22;ballerina-lang&#x22;;\n\nfinal github:Client githubClient = check new ({\n    auth: {\n        token: githubAccessToken\n    }\n});\n\npublic function main() returns error? {\n    github:IssueFilters filters = {\n        labels: [&#x22;Type/NewFeature&#x22;, &#x22;Priority/High&#x22;],\n        states: [github:ISSUE_OPEN]\n    };\n    stream<github:Issue, github:Error?> openFeatures\n            = check githubClient->getIssues(repoOwner, repoName, filters);\n    check from var feature in openFeatures\n        do {\n            io:println(feature.title);\n        };\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> githubAccessToken </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> repoOwner </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"ballerina-platform\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> repoName </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"ballerina-lang\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> github</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client githubClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        token</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> githubAccessToken</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> main</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    github</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">IssueFilters filters </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        labels</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [</span><span style=\"color:#032F62\">\"Type/NewFeature\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"Priority/High\"</span><span style=\"color:#24292E\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        states</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [</span><span style=\"color:#6F42C1\">github</span><span style=\"color:#24292E\">:ISSUE_OPEN]</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    stream&#x3C;</span><span style=\"color:#24292E\">github</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Issue, github</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error?</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> openFeatures</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            =</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> githubClient</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">getIssues</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">repoOwner</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">repoName</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">filters</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    check</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#005CC5\"> var</span><span style=\"color:#24292E\"> feature </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> openFeatures</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        do</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(feature.title);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"load-data-to-data-warehouse":{"frontmatter":{"title":"Loading data to a data warehouse","description":"Ballerina's integration and security capabilities simplify the loading of transformed data securely into on-prem or SaaS data warehouses.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/load-data-to-bigquery/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"final bigquery:Client bigQueryClient = check new ({auth: {token: bigQueryAccessToken}});\n\npublic function main() returns error? {\n    SocialMediaInteraction[] interactions = check io:fileReadCsv(&#x22;./resources/interactions.csv&#x22;);\n    bigquery:TabledatainsertallrequestRows[] rows = from var interaction in interactions\n        select {insertId: uuid:createType1AsString(), &#x27;json: interaction};\n    bigquery:TableDataInsertAllRequest payload = {rows};\n    _ = check bigQueryClient->insertAllTableData(projectId, datasetId, tableId, payload);\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> bigquery</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client bigQueryClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> ({auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {token: bigQueryAccessToken}});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> main</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    SocialMediaInteraction[] interactions </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">fileReadCsv</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\"./resources/interactions.csv\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    bigquery</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">TabledatainsertallrequestRows[] rows </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#005CC5\"> var</span><span style=\"color:#24292E\"> interaction </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> interactions</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        select</span><span style=\"color:#24292E\"> {insertId</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> uuid:</span><span style=\"color:#6F42C1\">createType1AsString</span><span style=\"color:#24292E\">(), 'json</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> interaction};</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    bigquery</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">TableDataInsertAllRequest payload </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {rows};</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> bigQueryClient</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">insertAllTableData</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">projectId</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">datasetId</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">tableId</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">payload</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"load-data-to-google-sheets":{"frontmatter":{"title":"Manual data inspection","description":"Ballerina can connect with Google Sheets or Excel to load data samples, intermediate data, or processed data for manual inspection.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/load-data-to-gsheet/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"function loadToGoogleSheet(string sheetName, string workSheetName, \n    SalesSummary[] salesSummary) returns error? {\n    sheets:Spreadsheet spreadsheet = check spreadsheetClient->createSpreadsheet(sheetName);\n    string spreadSheetId = spreadsheet.spreadsheetId;\n\n    check spreadsheetClient->renameSheet(spreadSheetId, &#x22;Sheet1&#x22;, workSheetName);\n\n    _ = check spreadsheetClient\n            ->appendValue(spreadSheetId, [&#x22;Product&#x22;, &#x22;Sales&#x22;], {sheetName: workSheetName});\n    foreach var {product, sales} in salesSummary {\n        _ = check spreadsheetClient\n            ->appendValue(spreadSheetId, [product, sales], {sheetName: workSheetName});\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> loadToGoogleSheet</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> sheetName</span><span style=\"color:#24292E\">, </span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> workSheetName</span><span style=\"color:#24292E\">, </span></span>\n<span class=\"line\"><span style=\"color:#E36209\">    SalesSummary</span><span style=\"color:#24292E\">[] </span><span style=\"color:#E36209\">salesSummary</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    sheets</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Spreadsheet spreadsheet </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> spreadsheetClient</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">createSpreadsheet</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">sheetName</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> spreadSheetId </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> spreadsheet.spreadsheetId;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    check</span><span style=\"color:#24292E\"> spreadsheetClient</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">renameSheet</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">spreadSheetId</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"Sheet1\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">workSheetName</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">    _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> spreadsheetClient</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            -></span><span style=\"color:#6F42C1\">appendValue</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">spreadSheetId</span><span style=\"color:#24292E\">, [</span><span style=\"color:#032F62\">\"Product\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"Sales\"</span><span style=\"color:#24292E\">], {sheetName</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> workSheetName});</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    foreach </span><span style=\"color:#005CC5\">var</span><span style=\"color:#24292E\"> {product, sales} </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> salesSummary {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> spreadsheetClient</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            -></span><span style=\"color:#6F42C1\">appendValue</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">spreadSheetId</span><span style=\"color:#24292E\">, [product, sales], {sheetName</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> workSheetName});</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"load-from-kafka-topics":{"frontmatter":{"title":"Real-time data flow","description":"Ballerina's support for various data streaming sources, such as Kafka, RabbitMQ, and NATS, facilitates the creation of real-time streaming ETL pipelines.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/kafka-db-ingestion/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"final kafka:ConsumerConfiguration consumerConfiguration = {\n    groupId: &#x22;lead-uuid&#x22;,\n    topics: [&#x22;lead-analytics&#x22;],\n    pollingInterval: 1,\n    autoCommit: false\n};\n\nfinal Client leadsDbClient = check new;\n\nlistener kafka:Listener kafkaListener = new (kafka:DEFAULT_URL, consumerConfiguration);\n\nisolated service on kafkaListener {\n    remote function onConsumerRecord(kafka:Caller caller, LeadAnalytics[] leadsData) returns error? {\n        LeadAnalyticsDataInsert[] insertData = from var lead in leadsData\n            select {id: uuid:createType1AsString(), ...lead};\n        _ = check leadsDbClient->/leadanalyticsdata.post(insertData);\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">ConsumerConfiguration consumerConfiguration </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    groupId</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"lead-uuid\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    topics</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [</span><span style=\"color:#032F62\">\"lead-analytics\"</span><span style=\"color:#24292E\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    pollingInterval</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    autoCommit</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> Client leadsDbClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">listener</span><span style=\"color:#24292E\"> kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Listener kafkaListener </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">DEFAULT_URL, </span><span style=\"color:#E36209\">consumerConfiguration</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> service</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#24292E\"> kafkaListener {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onConsumerRecord</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Caller caller, </span><span style=\"color:#E36209\">LeadAnalytics</span><span style=\"color:#24292E\">[] </span><span style=\"color:#E36209\">leadsData</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        LeadAnalyticsDataInsert[] insertData </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#005CC5\"> var</span><span style=\"color:#24292E\"> lead </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> leadsData</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            select</span><span style=\"color:#24292E\"> {id</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> uuid:</span><span style=\"color:#6F42C1\">createType1AsString</span><span style=\"color:#24292E\">(), </span><span style=\"color:#D73A49\">...</span><span style=\"color:#24292E\">lead};</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> leadsDbClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">leadanalyticsdata.</span><span style=\"color:#6F42C1\">post</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">insertData</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"make-data-extraction-smarter":{"frontmatter":{"title":"Make data extraction smarter","description":"Ballerina AI integrations can extract information from unstructured data, unlocking vast amounts of information captured in emails, documents, comments, etc. in the extraction process.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/extract-information-from-unstructured-data/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"final chat:Client openAiChat = check new ({auth: {token: openAIKey}});\n\nisolated service /api/reviews on new http:Listener(8080) {\n    resource function post summary(SummaryRequest summaryRequest) returns error? {\n        chat:CreateChatCompletionRequest request = {\n            model: &#x22;gpt-3.5-turbo&#x22;,\n            messages: [\n                {\n                    role: &#x22;user&#x22;,\n                    content: string &#x60;\n                        Extract the following details in JSON from the reviews given.\n                            {\n                                good_points: string,\n                                bad_points: string,\n                                improvement_points: string\n                            }\n                        The fields should contain points extracted from all reviews\n                        Here are the reviews:\n                        ${string:&#x27;join(&#x22;,&#x22;, ...summaryRequest.reviews)}\n                    &#x60;\n                }\n            ]\n        };\n        chat:CreateChatCompletionResponse summary = check openAiChat->/chat/completions.post(request);\n        if summary.choices.length() > 0 {\n            string content = check summary.choices[0].message?.content.ensureType();\n            io:println(content);\n        }\n    }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> chat</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client openAiChat </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> ({auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {token: openAIKey}});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">isolated</span><span style=\"color:#D73A49\"> service</span><span style=\"color:#6F42C1\"> /api/reviews</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> http:Listener(</span><span style=\"color:#005CC5\">8080</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> post</span><span style=\"color:#6F42C1\"> summary</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">SummaryRequest</span><span style=\"color:#E36209\"> summaryRequest</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        chat</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">CreateChatCompletionRequest request </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            model</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"gpt-3.5-turbo\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            messages</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                    role</span><span style=\"color:#24292E\">: </span><span style=\"color:#032F62\">\"user\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                    content</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">string</span><span style=\"color:#24292E\"> `</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                        Extract the following details in JSON from the reviews given.</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                            {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                                good_points</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">string</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                                bad_points</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">string</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                                improvement_points</span><span style=\"color:#24292E\">: </span><span style=\"color:#005CC5\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                        The fields should contain points extracted from all reviews</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                        Here are the </span><span style=\"color:#6F42C1\">reviews</span><span style=\"color:#24292E\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                        ${</span><span style=\"color:#6F42C1\">string</span><span style=\"color:#24292E\">:</span><span style=\"color:#6F42C1\">'join</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">\",\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#D73A49\">...</span><span style=\"color:#24292E\">summaryRequest.reviews)}</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    `</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        chat</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">CreateChatCompletionResponse summary </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> openAiChat</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">chat</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">completions.</span><span style=\"color:#6F42C1\">post</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">request</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> summary.choices.</span><span style=\"color:#6F42C1\">length</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">></span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            string</span><span style=\"color:#24292E\"> content </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> summary.choices[</span><span style=\"color:#005CC5\">0</span><span style=\"color:#24292E\">].message?.content.</span><span style=\"color:#6F42C1\">ensureType</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">content</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"precision-cleaning-with-regex":{"frontmatter":{"title":"Precision cleaning with regular expressions","description":"Ballerina's regex support empowers data cleansing and standardization, enhancing data quality and consistency.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/clean-and-standardize-data/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"function standardizeValues(string inputString) returns int {\n    string:RegExp yesPattern = re &#x60;y|Y|((y|Y)(e|E)(s|S))&#x60;;\n    if yesPattern.isFullMatch(inputString) {\n        return 1;\n    }\n    string:RegExp noPattern = re &#x60;n|N|((n|N)(o|O))&#x60;;\n    if noPattern.isFullMatch(inputString) {\n        return -1;\n    }\n    return 0;\n}\n\nfunction isValidEmail(string inputString) returns boolean {\n    string:RegExp emailPattern =  re &#x60;[A-Za-z0-9\\._%+-]+@[A-Za-z0-9\\.-]+\\.[A-Za-z]{2,}&#x60;;\n    return emailPattern.isFullMatch(inputString);\n}\n\nfunction removeExtraWhiteSpaces(string inputString) returns string {\n    string:RegExp extraSpaces = re &#x60;\\s+&#x60;;\n    return extraSpaces.replaceAll(inputString, &#x22; &#x22;);\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> standardizeValues</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> inputString</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">RegExp yesPattern </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> re</span><span style=\"color:#24292E\"> `y</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">Y</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">((y</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">Y)(e</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">E)(s</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">S))`;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    if</span><span style=\"color:#24292E\"> yesPattern.</span><span style=\"color:#6F42C1\">isFullMatch</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">inputString</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">RegExp noPattern </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> re</span><span style=\"color:#24292E\"> `n</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">N</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">((n</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">N)(o</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">O))`;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    if</span><span style=\"color:#24292E\"> noPattern.</span><span style=\"color:#6F42C1\">isFullMatch</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">inputString</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> -</span><span style=\"color:#005CC5\">1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> isValidEmail</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> inputString</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#005CC5\"> boolean</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">RegExp emailPattern </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\">  re</span><span style=\"color:#24292E\"> `</span><span style=\"color:#005CC5\">[A-Za-z0-9\\._%+-]</span><span style=\"color:#D73A49\">+</span><span style=\"color:#24292E\">@</span><span style=\"color:#005CC5\">[A-Za-z0-9\\.-]</span><span style=\"color:#D73A49\">+</span><span style=\"color:#005CC5\">\\.[A-Za-z]</span><span style=\"color:#D73A49\">{2,}</span><span style=\"color:#24292E\">`;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#24292E\"> emailPattern.</span><span style=\"color:#6F42C1\">isFullMatch</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">inputString</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">function</span><span style=\"color:#6F42C1\"> removeExtraWhiteSpaces</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> inputString</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">RegExp extraSpaces </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> re</span><span style=\"color:#24292E\"> `</span><span style=\"color:#D73A49\">\\s+</span><span style=\"color:#24292E\">`;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    return</span><span style=\"color:#24292E\"> extraSpaces.</span><span style=\"color:#6F42C1\">replaceAll</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">inputString</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\" \"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"refining-data-excellence":{"frontmatter":{"title":"Refining data excellence","description":"Ballerina's seamless integration with AI models enhances error correction, ensuring data integrity and precision during transformation.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/refine-data-using-ai/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><button type=\"button\" title=\"Copy\" aria-label=\"Copy\" data=\"configurable string openAIToken = ?;\nfinal http:Client openAIClient = check new (&#x22;https://api.openai.com&#x22;, {auth: {token: openAIToken}});\n\npublic function main(string filePath) returns error? {\n    string inputString = check io:fileReadString(filePath);\n\n    OpenAiChatResponse response = check openAIClient->/v1/chat/completions.post(\n        {\n            model: &#x22;gpt-3.5-turbo&#x22;,\n            messages: [\n                {\n                    role: &#x22;user&#x22;,\n                    content: &#x22;Fix grammar and spelling mistakes.&#x22;\n                },\n                {\n                    role: &#x22;user&#x22;,\n                    content: inputString\n                }\n            ]\n        }\n    );\n\n    io:println(string &#x60;Corrected: ${response.choices[0].message.content}&#x60;);\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copied&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copied&#x27;);window.setTimeout(() => {this.classList.remove(&#x27;rehype-pretty-copied&#x27;);this.setAttribute(&#x27;title&#x27;, &#x27;Copy&#x27;);this.setAttribute(&#x27;aria-label&#x27;, &#x27;Copy&#x27;);}, 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> openAIToken </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client openAIClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"https://api.openai.com\"</span><span style=\"color:#24292E\">, {auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {token: openAIToken}});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> main</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> filePath</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> inputString </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">fileReadString</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">filePath</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">    OpenAiChatResponse response </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> openAIClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">v1</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">chat</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">completions.</span><span style=\"color:#6F42C1\">post</span><span style=\"color:#24292E\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            model</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"gpt-3.5-turbo\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            messages</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                    role</span><span style=\"color:#24292E\">: </span><span style=\"color:#032F62\">\"user\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                    content</span><span style=\"color:#24292E\">: </span><span style=\"color:#032F62\">\"Fix grammar and spelling mistakes.\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                    role</span><span style=\"color:#24292E\">: </span><span style=\"color:#032F62\">\"user\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1\">                    content</span><span style=\"color:#24292E\">: inputString</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">    io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#032F62\"> `Corrected: ${</span><span style=\"color:#24292E\">response</span><span style=\"color:#032F62\">.</span><span style=\"color:#24292E\">choices</span><span style=\"color:#032F62\">[</span><span style=\"color:#005CC5\">0</span><span style=\"color:#032F62\">].</span><span style=\"color:#24292E\">message</span><span style=\"color:#032F62\">.</span><span style=\"color:#24292E\">content</span><span style=\"color:#032F62\">}`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 448 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg' style='float: right;'%3E%3Ctitle%3ECopy%3C/title%3E%3Cpath d='M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z'%3E%3C/path%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg stroke='currentColor' fill='currentColor' stroke-width='0' viewBox='0 0 512 512' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3ECopied%3C/title%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {background-color: transparent;border: none;right: 1px;padding: 0;width: 16px;height: 16px;display: flex;margin-top: -20px;margin-right: 8px;position: absolute;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}.Code_codeSnippet__ayQ3y button.rehype-pretty-copy {margin-top: -10px;}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre>"},"reshaping-data-with-data-mapper":{"frontmatter":{"title":"Reshaping data with data mapper","description":"Comprehensive data mapping support facilitates the transformation of source data into any schema expected by target systems.","url":"https://github.com/ballerina-guides/etl-samples/blob/main/data-mapper/main.bal","image":"images/usecases/etl-data-mapping.gif"},"code":""}}},"__N_SSG":true}