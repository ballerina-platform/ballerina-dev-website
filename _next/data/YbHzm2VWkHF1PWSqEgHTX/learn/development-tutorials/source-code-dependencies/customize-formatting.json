{"pageProps":{"frontmatter":{"title":"Customize formatting","description":"The section on providing custom configurations to the formatter.","keywords":"ballerina, programming language, formatting, custom configurations","permalink":"/learn/customize-formatting/","active":"customize-formatting","intro":"This feature allows developers to customize how a Ballerina project is formatted via a local or remote configuration file. This allows for consistency in code style across projects in an organization and simplifies the process of enforcing formatting standards. This is introduced as an experimental feature in Ballerina 2201.9.0."},"content":"\n## The formatting configuration file\n\nUsers can customize formatting configuration via a configuration file in the `toml` format. Users can provide an arbitrary name for the file.\n\nThe formatting configuration file can be specified in two ways:\n\n* `Ballerina.toml`: Define the path to the configuration file in the `Ballerina.toml` file. The path can be absolute, relative to the package root, or a URL (HTTP/HTTPS). This path has to be specified under the `format` header in the `Ballerina.toml` file as `configPath`.\n\n    ```toml\n    [package]\n    org = \"format-org\"\n    name = \"format_project\"\n    version = \"0.1.0\"\n    distribution = \"2201.9.0\"\n\n    [format]\n    configPath = \"Format.toml\"\n    ```\n\n* `Format.toml`: If no configuration path is specified in the `Ballerina.toml` file, the formatter will look for a file named `Format.toml` in the package's root directory.\n\nIf the `configPath` value is not provided in the `Ballerina.toml` file or the `Format.toml` file does not exist in the project root, default formatting options will be used.\n\nIf the format `configPath` value is an HTTP/HTTPS URL, the configuration file will be cached in the `target` directory. If the remote configuration file is modified, then make sure to delete the cached `Format.toml` file inside the `target/format/` directory.\n\n## Formatting Options\n\n### Indent\n\n#### indentSize\n\n* Specifies the number of spaces for each level of indentation.\n* Value: Integer (e.g. `2`, `4`)\n* Default: `4`\n\n    ```ballerina\n    public function main() {\n        boolean condition = true;\n        if condition {\n            io:println(\"Indented code\");\n        }\n    }\n    ```\n\n#### continuationIndentSize\n\n* Determines the indentation size for continuation lines.\n* Value: Integer (e.g. `4`, `8`)\n* Default: `8`\n\n    ```ballerina\n    function longFunctionName(int param1, int param2, int param3,\n            int param4, int param5) {\n    }\n    ```\n\n### Wrapping\n\n#### maxLineLength\n\n* Specifies the maximum line length before code is wrapped.\n* Value: Integer (e.g. `80`, `120`)\n* Default: No line wrapping if `maxLineLength` is not specified.\n\n#### simpleBlocksInOneLine \n\n* Preserve single-line blocks in user code.\n* Value: Boolean\n* Default: `false`\n\n    ```ballerina\n    if x == 1 { return true; }\n    while i < 5 { i += 1; }\n    ```\n\n#### simpleFunctionsInOneLine\n\n* Preserve single-line methods on one line.\n* Value: Boolean\n* Default: `false`\n\n    ```ballerina\n    function getName() returns string { return self.name; }\n    ```\n\n### Braces\n\n#### classBraceStyle: \n\n* Placement of the opening brace of the class definition.\n* Values: `NewLine`, `EndOfLine`\n* Default: `EndOfLine`\n\n    * `NewLine`\n        ```ballerina\n        class MyClass \n        {\n\n        }\n        ```\n\n    * `EndOfLine`\n\n        ```ballerina\n        class MyClass {\n\n        }\n        ```\n\n#### functionBraceStyle \n\n* Placement of the opening brace of the function definition.\n* Values: `NewLine`, `EndOfLine`\n* Default: `EndOfLine`\n\n    * `NewLine`\n\n        ```ballerina\n        function foo()\n        {\n\n        }\n        ```\n\n    * `EndOfLine`\n\n        ```ballerina\n        function foo(){\n\n        }\n        ```\n\n### Function Definition\n\n#### parametersWrap\n\n* Formatting of the function parameters when the `maxLineLength` is exceeded.\n* Values: `Wrap`, `NoWrap`, `ChopDown`\n* Default: `Wrap` if `maxLineLength` is specified, else `NoWrap`\n\n    * `Wrap`\n\n        ```ballerina\n        function foo(int argumentNumberOne, int argumentTwo, \n            int argumentThree, int argumentFour) {\n        }\n        ```\n\n    * `NoWrap`\n\n        ```ballerina\n        function foo(int argumentOne, int argumentTwo, int argumentThree) {\n        }\n        ```\n\n    * `ChopDown`\n\n        ```ballerina\n        function foo(int argumentNumberOne, \n            int argumentTwo, \n            int argumentThree,\n            int argumentFour) {\n        }\n        ```\n\n#### alignMultilineParameters\n\n* Align multiline parameters with the opening brace.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    function foo(int argumentNumberOne, int argumentTwo,\n                int argumentThree, int argumentFour) {\n    }\n    ```\n\n#### newLineAfterLeftParen \n\n* Newline after the left parenthesis of the function declaration.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    function foo(\n                int argumentNumberOne, int argumentTwo, int argumentThree, \n                int argumentFour) {\n    }\n    ```\n\n#### rightParenOnNewLine\n\n* Right parenthesis of the function declaration on a newline.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    function foo(int argumentNumberOne, int argumentTwo, \n            int argumentThree, int argumentFour\n            ) {\n    }\n    ```\n\n### Function Call\n\n#### argumentsWrap\n\n* Values: `Wrap`, `NoWrap`, `ChopDown`\n* Default: `Wrap` if `maxLineLength` specified, else `NoWrap`\n\n    * `Wrap`\n\n        ```ballerina\n        myMethod(param1, param2, param3, param4,\n                param5, param6);\n        ```\n\n    * `NoWrap`\n\n        ```ballerina\n        myMethod(param1, param2, param3, param4, param5, param6);\n        ```\n\n    * `ChopDown`\n\n        ```ballerina\n        myMethod(param1, \n            param2,\n            param3,\n            param4,\n            param5,\n            param6);\n        ```\n\n#### alignMultilineArguments\n\n* Align multiline arguments with the opening brace.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    myMethod(param1, param2, param3, param4\n            param5, param6);\n    ```\n\n#### newLineAfterLeftParen\n\n* Newline after the left parenthesis of the function declaration.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    myMethod(\n            param1, param2, param3, param4, param5, param6);\n    ```\n\n#### rightParenOnNewLine\n\n* Right parenthesis of the function declaration on a newline.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    myMethod(param1, param2, param3, \n            param4, param5, param6\n    );\n    ```\n\n### If Statement\n\n#### elseOnNewLine\n\n* Specify the start of the `else` and `else if` clause on a newline following the `}` of the previous `if` or `else if` clause.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    boolean condition = true;\n    if condition {\n        // if block\n    } \n    else {\n        // else block\n    }\n    ```\n\n### Spacing\n\n#### afterTypeCast\n\n*  Add a space after the `type-cast-param`.\n* Values: Boolean\n* Default: `true`\n\n    ```ballerina\n    int x = <int> someValue;\n    ```\n\n#### aroundRecordBraces\n\n* Space after the opening brace and before the closing brace of a mapping constructor.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    Student x = { name: “Alex”, age: 15 };\n    ```\n\n#### alignConsecutiveDefinitions\n\n* Align the equals signs in consecutive definitions.\n* Values: Boolean\n* Default: `false`\n\n    ```ballerina\n    const A   = \"a\";\n    const AB  = \"ab\";\n    const ABC = \"ab\";\n    ```\n\n### Import\n\n#### groupImport\n\n* Group imports in the order of, \n    * Imports from the same package.\n    * Imports from the `ballerina/` and `ballerinax/` organizations.\n    * Imports from third-party organizations.\n* Values: Boolean\n* Default: `true`\n\n#### sortImports\n\n* Sort imports based on alphabetical order.\n* Values: Boolean\n* Default: `true`\n\n### Query\n\n#### alignMultiLineQueries\n\n* Align multiline queries with the equals on the first line.\n* Values: Boolean\n* Default: `false`\n\n    * Default behavior\n\n        ```ballerina\n        int[] numsReversed = from int i in nums\n                order by i descending\n                select i;\n        ```\n\n    * When `alignMultiLineQueries = true`\n\n        ```ballerina\n        int[] numsReversed = from int j in nums\n                             order by j descending\n                             select ;\n        ```\n\n## Example Configuration\n\n```toml\n[indent]\nindentSize = 4\ncontinuationIndentSize = 8\n\n[wrapping]\nmaxLineLength = 120\nsimpleBlocksInOneLine = true\nsimpleFunctionsInOneLine = true\n\n[braces]\nclassBraceStyle = \"NewLine\"\nfunctionBraceStyle = \"NewLine\"\n\n[functionDefinition]\nparametersWrap = \"ChopDown\"\nalignMultilineParameters = true\nnewLineAfterLeftParen = false\nrightParenOnNewLine = false\n\n[functionCall]\nargumentsWrap = \"Wrap\"\nalignMultilineArguments = false\nnewLineAfterLeftParen = false\nrightParenOnNewLine = false\n\n[ifStatement]\nelseOnNewLine = false\n\n[spacing]\nafterTypeCast = true\naroundRecordBraces = true\n\n[import]\ngroupImports = true\nsortImports = true\n\n[query]\nalignMultiLineQueries = false\n```\n","id":"customize-formatting","sub":"source-code-dependencies","third":"","slug":"source-code-dependencies/customize-formatting","codes":"[[-1451181361,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">package</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">org = </span><span style=\\\"color:#032F62\\\">\\\"format-org\\\"</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">name = </span><span style=\\\"color:#032F62\\\">\\\"format_project\\\"</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">version = </span><span style=\\\"color:#032F62\\\">\\\"0.1.0\\\"</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">distribution = </span><span style=\\\"color:#032F62\\\">\\\"2201.9.0\\\"</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">format</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">configPath = </span><span style=\\\"color:#032F62\\\">\\\"Format.toml\\\"</span></span></code></pre>\"],[-617258461,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">public</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> main</span><span style=\\\"color:#24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    boolean</span><span style=\\\"color:#24292E\\\"> condition </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#D73A49\\\"> true</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    if</span><span style=\\\"color:#24292E\\\"> condition {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">        io</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#6F42C1\\\">println</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#032F62\\\">\\\"Indented code\\\"</span><span style=\\\"color:#24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[958968617,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> longFunctionName</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> param1</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> param2</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> param3</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">        int</span><span style=\\\"color:#E36209\\\"> param4</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> param5</span><span style=\\\"color:#24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[-1103625187,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">if</span><span style=\\\"color:#24292E\\\"> x </span><span style=\\\"color:#D73A49\\\">==</span><span style=\\\"color:#005CC5\\\"> 1</span><span style=\\\"color:#24292E\\\"> { </span><span style=\\\"color:#D73A49\\\">return</span><span style=\\\"color:#D73A49\\\"> true</span><span style=\\\"color:#24292E\\\">; }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">while</span><span style=\\\"color:#24292E\\\"> i </span><span style=\\\"color:#D73A49\\\">&#x3C;</span><span style=\\\"color:#005CC5\\\"> 5</span><span style=\\\"color:#24292E\\\"> { i </span><span style=\\\"color:#D73A49\\\">+=</span><span style=\\\"color:#005CC5\\\"> 1</span><span style=\\\"color:#24292E\\\">; }</span></span></code></pre>\"],[82337386,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> getName</span><span style=\\\"color:#24292E\\\">() </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#005CC5\\\"> string</span><span style=\\\"color:#24292E\\\"> { </span><span style=\\\"color:#D73A49\\\">return</span><span style=\\\"color:#005CC5\\\"> self</span><span style=\\\"color:#24292E\\\">.name; }</span></span></code></pre>\"],[978050568,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">class</span><span style=\\\"color:#6F42C1\\\"> MyClass</span><span style=\\\"color:#24292E\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">{</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[998368030,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">class</span><span style=\\\"color:#6F42C1\\\"> MyClass</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[-1839520435,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> foo</span><span style=\\\"color:#24292E\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">{</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[913749857,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> foo</span><span style=\\\"color:#24292E\\\">(){</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[1686152802,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> foo</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentNumberOne</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentTwo</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">            int</span><span style=\\\"color:#E36209\\\"> argumentThree</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentFour</span><span style=\\\"color:#24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[376449879,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> foo</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentOne</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentTwo</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentThree</span><span style=\\\"color:#24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[-1197301746,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> foo</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentNumberOne</span><span style=\\\"color:#24292E\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    int</span><span style=\\\"color:#E36209\\\"> argumentTwo</span><span style=\\\"color:#24292E\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    int</span><span style=\\\"color:#E36209\\\"> argumentThree</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    int</span><span style=\\\"color:#E36209\\\"> argumentFour</span><span style=\\\"color:#24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[-1780907708,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> foo</span><span style=\\\"color:#24292E\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">            int</span><span style=\\\"color:#E36209\\\"> argumentNumberOne</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentTwo</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentThree</span><span style=\\\"color:#24292E\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">            int</span><span style=\\\"color:#E36209\\\"> argumentFour</span><span style=\\\"color:#24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[-150668510,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> foo</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentNumberOne</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentTwo</span><span style=\\\"color:#24292E\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">        int</span><span style=\\\"color:#E36209\\\"> argumentThree</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#E36209\\\"> argumentFour</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">        ) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[1449235554,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1\\\">myMethod</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#E36209\\\">param1</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param2</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param3</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param4</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">        param5</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param6</span><span style=\\\"color:#24292E\\\">);</span></span></code></pre>\"],[1157277816,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1\\\">myMethod</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#E36209\\\">param1</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param2</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param3</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param4</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param5</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param6</span><span style=\\\"color:#24292E\\\">);</span></span></code></pre>\"],[1443598858,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1\\\">myMethod</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#E36209\\\">param1</span><span style=\\\"color:#24292E\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">    param2</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">    param3</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">    param4</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">    param5</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">    param6</span><span style=\\\"color:#24292E\\\">);</span></span></code></pre>\"],[80538964,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1\\\">myMethod</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#E36209\\\">param1</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param2</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param3</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param4</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">        param5</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param6</span><span style=\\\"color:#24292E\\\">);</span></span></code></pre>\"],[1616559020,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1\\\">myMethod</span><span style=\\\"color:#24292E\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">        param1</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param2</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param3</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param4</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param5</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param6</span><span style=\\\"color:#24292E\\\">);</span></span></code></pre>\"],[833407884,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1\\\">myMethod</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#E36209\\\">param1</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param2</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param3</span><span style=\\\"color:#24292E\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209\\\">        param4</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param5</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">param6</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">);</span></span></code></pre>\"],[1764908746,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">boolean</span><span style=\\\"color:#24292E\\\"> condition </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#D73A49\\\"> true</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">if</span><span style=\\\"color:#24292E\\\"> condition {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">    // if block</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">} </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">else</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">    // else block</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[116559759,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#24292E\\\"> x </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#D73A49\\\"> &#x3C;</span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#D73A49\\\">></span><span style=\\\"color:#24292E\\\"> someValue;</span></span></code></pre>\"],[-40704942,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">Student x </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#24292E\\\"> { name</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\"> “Alex”, age</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#005CC5\\\"> 15</span><span style=\\\"color:#24292E\\\"> };</span></span></code></pre>\"],[371482044,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">const </span><span style=\\\"color:#005CC5\\\">A</span><span style=\\\"color:#D73A49\\\">   =</span><span style=\\\"color:#032F62\\\"> \\\"a\\\"</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">const </span><span style=\\\"color:#005CC5\\\">AB</span><span style=\\\"color:#D73A49\\\">  =</span><span style=\\\"color:#032F62\\\"> \\\"ab\\\"</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">const </span><span style=\\\"color:#005CC5\\\">ABC</span><span style=\\\"color:#D73A49\\\"> =</span><span style=\\\"color:#032F62\\\"> \\\"ab\\\"</span><span style=\\\"color:#24292E\\\">;</span></span></code></pre>\"],[-303724681,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#24292E\\\">[] numsReversed </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#D73A49\\\"> from</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> i </span><span style=\\\"color:#D73A49\\\">in</span><span style=\\\"color:#24292E\\\"> nums</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">        order</span><span style=\\\"color:#D73A49\\\"> by</span><span style=\\\"color:#24292E\\\"> i </span><span style=\\\"color:#D73A49\\\">descending</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">        select</span><span style=\\\"color:#24292E\\\"> i;</span></span></code></pre>\"],[1940227958,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#24292E\\\">[] numsReversed </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#D73A49\\\"> from</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> j </span><span style=\\\"color:#D73A49\\\">in</span><span style=\\\"color:#24292E\\\"> nums</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">                     order</span><span style=\\\"color:#D73A49\\\"> by</span><span style=\\\"color:#24292E\\\"> j </span><span style=\\\"color:#D73A49\\\">descending</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">                     select</span><span style=\\\"color:#24292E\\\"> ;</span></span></code></pre>\"],[-1252070690,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">indent</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">indentSize = </span><span style=\\\"color:#005CC5\\\">4</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">continuationIndentSize = </span><span style=\\\"color:#005CC5\\\">8</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">wrapping</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">maxLineLength = </span><span style=\\\"color:#005CC5\\\">120</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">simpleBlocksInOneLine = </span><span style=\\\"color:#005CC5\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">simpleFunctionsInOneLine = </span><span style=\\\"color:#005CC5\\\">true</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">braces</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">classBraceStyle = </span><span style=\\\"color:#032F62\\\">\\\"NewLine\\\"</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">functionBraceStyle = </span><span style=\\\"color:#032F62\\\">\\\"NewLine\\\"</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">functionDefinition</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">parametersWrap = </span><span style=\\\"color:#032F62\\\">\\\"ChopDown\\\"</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">alignMultilineParameters = </span><span style=\\\"color:#005CC5\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">newLineAfterLeftParen = </span><span style=\\\"color:#005CC5\\\">false</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">rightParenOnNewLine = </span><span style=\\\"color:#005CC5\\\">false</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">functionCall</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">argumentsWrap = </span><span style=\\\"color:#032F62\\\">\\\"Wrap\\\"</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">alignMultilineArguments = </span><span style=\\\"color:#005CC5\\\">false</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">newLineAfterLeftParen = </span><span style=\\\"color:#005CC5\\\">false</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">rightParenOnNewLine = </span><span style=\\\"color:#005CC5\\\">false</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">ifStatement</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">elseOnNewLine = </span><span style=\\\"color:#005CC5\\\">false</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">spacing</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">afterTypeCast = </span><span style=\\\"color:#005CC5\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">aroundRecordBraces = </span><span style=\\\"color:#005CC5\\\">true</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">import</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">groupImports = </span><span style=\\\"color:#005CC5\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">sortImports = </span><span style=\\\"color:#005CC5\\\">true</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">[</span><span style=\\\"color:#6F42C1\\\">query</span><span style=\\\"color:#24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">alignMultiLineQueries = </span><span style=\\\"color:#005CC5\\\">false</span></span></code></pre>\"]]"},"__N_SSG":true}