{"pageProps":{"samples":{"client-auth":{"frontmatter":{"title":"Securely interact with internal and external services","description":"In today's IT environments where services are scattered across on-premises and cloud, no link is guaranteed to be secure. Therefore, strict security measures need to be enforced on all links. Ballerina-powered backends can securely call services - whether on-premise, in a private cloud, or SaaS - with the necessary security features such as client-side OAuth2, mutual TLS, and JWT-encapsulated user data.","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/log;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> cargoWaveUrl </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> issuer </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> audience </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> jwksUrl </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> clientId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> clientSecret </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/logistics</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">cargo</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Cargo</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">cargo</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http:InternalServerError? {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        cargoTable.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">cargo</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">do</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Client cargoWave </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">cargoWaveUrl</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">auth</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                tokenUrl</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> issuer,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                clientId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> clientId,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                clientSecret</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> clientSecret</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }, </span><span style=\"color: #E36209\">secureSocket</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">key:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    certFile</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;../resource/path/to/public.crt&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    keyFile</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;../resource/path/to/private.key&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #E36209\">cert</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;./resources/public.cer&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            });</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Response cargoWaveResponse </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> cargoWave</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;/shipments&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">cargo</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> cargoWaveResponse </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Response &amp;&amp; cargoWaveResponse.statusCode </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">202</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Successfully submitted the shipment request&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> res;    </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">fail</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> (</span><span style=\"color: #032F62\">&quot;Shipment processing failed.&quot;</span><span style=\"color: #24292E\">);   </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        } </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">fail</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> e {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> errMsg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Failed to submit the shipment request. &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> e.</span><span style=\"color: #6F42C1\">message</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printError</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">errMsg</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">InternalServerError res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: errMsg}</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> res;    </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"deployment":{"frontmatter":{"title":"Develop flexible and scalable backends","description":"App backends are often required to handle high loads, which can fluctuate rapidly. Therefore, the ability to scale systems up or down based on the current load is crucial. Ballerina-based backends can aggregated or segregated features into individual components, which can be deployed and sclaed independently. These components can then be deployed on Kubernetes or similar infrastructure to provision flexible and scalable backends.<br><br>In addition, Ballerina backends can be instantly taken to production by deploying in Choreo, a comprehensive app development platform with pre-built CI/CD pipelines, multi-environment support, and robust monitoring for Ballerina apps.","url":"https://wso2.com/choreo/internal-developer-platform","image":"images/choreo-ipaas-image-v2.png"},"code":""},"graphql":{"frontmatter":{"title":"Efficiently expose complex data with GraphQL","description":"Web and mobile apps act as the interface for vast amounts of consolidated data, often requiring users to perform advanced data retrieval operations. With Ballerina's built-in GraphQL functionality, backend developers can simply expose Ballerina records via GraphQL services, facilitating querying and selectively fetching complex data structures.","url":"https://github.com/ballerina-guides/b2b-samples/blob/main/simple-edi-schema/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/io;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/graphql;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> orderId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> customerId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">? shipId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Address</span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\"> shippingAddress;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> date;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    OrderStatus status;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> quantity;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Address</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> number;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> street;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> city;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> state;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> graphql:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Query orders via the GraphQL URL: http://localhost:9090/sales</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Example query: </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// query {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">//     orders(customerId:&quot;C-124&quot;) { customerId, item, shippingAddress: {city} }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">? </span><span style=\"color: #E36209\">customerId</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Get orders for customer: &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">customerId?</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Any&quot;</span><span style=\"color: #24292E\">));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> customerId </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orderTable;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        Order[] customerOrders </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">foreach </span><span style=\"color: #24292E\">Order &#39;order </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orderTable {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (&#39;order.customerId </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> customerId) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                customerOrders.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(&#39;order);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> customerOrders;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"json-support":{"frontmatter":{"title":"Streamline web data handling in backends","description":"Web and mobile apps often transmit users' input as JSON payloads, requiring backends to handle JSON data extensively. It is also common to exchange large binary payloads between front ends and back ends. <br><br>With Ballerina's native JSON capabilities, JSON data can be mapped to Ballerina records, enabling simple and flexible data manipulation with features like constraint validations, transformations, and enrichments. In addition, Ballerina has built-in support for intutuively and efficiently handle web-based data with multi-part payloads, compressions, caching and content type enforcements.","url":"https://github.com/ballerina-guides/b2b-samples/blob/main/edi-in-business-apps/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">CustomerRegistrationData</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">constraint</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">String</span><span style=\"color: #24292E\"> { pattern</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> re </span><span style=\"color: #032F62\">`[A-Za-z]+`</span><span style=\"color: #24292E\"> }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> firstName;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">constraint</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">String</span><span style=\"color: #24292E\"> { pattern</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> re </span><span style=\"color: #032F62\">`[A-Za-z]+`</span><span style=\"color: #24292E\"> }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> lastName;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">constraint</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">String</span><span style=\"color: #24292E\"> { pattern</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> re </span><span style=\"color: #032F62\">`</span><span style=\"color: #005CC5\">\\d</span><span style=\"color: #032F62\">{3},0</span><span style=\"color: #005CC5\">\\s</span><span style=\"color: #032F62\">*,[a-zA-Z]{12},0</span><span style=\"color: #005CC5\">\\s</span><span style=\"color: #032F62\">*,[a-zA-Z]{12},,0</span><span style=\"color: #005CC5\">\\s</span><span style=\"color: #032F62\">*,[a-zA-Z]{8}`</span><span style=\"color: #24292E\"> }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> address;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">constraint</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">Int</span><span style=\"color: #24292E\"> { minValue</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">, maxValue</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">10</span><span style=\"color: #24292E\"> }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> dependents;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">@</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ServiceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    chunking</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;ALWAYS&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    compression</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        enable</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> http:COMPRESSION_ALWAYS,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        contentTypes</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;application/json&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;text/plain&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    cors</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        allowOrigins</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;*&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/crm</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ResourceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        consumes</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;multipart/form-data&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        produces</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;application/json&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">customers</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Request request) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http:InternalServerError</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http:Created {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        mime</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Entity[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> bodyParts </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> request.</span><span style=\"color: #6F42C1\">getBodyParts</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> bodyParts </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: </span><span style=\"color: #032F62\">&quot;Error while parsing the request body&quot;</span><span style=\"color: #24292E\">}};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        CustomerRegistrationData</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> registrationData </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> bodyParts[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].</span><span style=\"color: #6F42C1\">getJson</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">ensureType</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">byte</span><span style=\"color: #24292E\">[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> agreemntForm </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> bodyParts[</span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">].</span><span style=\"color: #6F42C1\">getByteArray</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">byte</span><span style=\"color: #24292E\">[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> image </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> bodyParts[</span><span style=\"color: #005CC5\">2</span><span style=\"color: #24292E\">].</span><span style=\"color: #6F42C1\">getByteArray</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> registrationData </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> agreemntForm </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> image </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: </span><span style=\"color: #032F62\">&quot;Error while parsing the request body&quot;</span><span style=\"color: #24292E\">}};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">string</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> customerId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">registerCustomer</span><span style=\"color: #24292E\">(</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #E36209\">registrationData</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">agreemntForm</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">image</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> customerId </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">InternalServerError</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: </span><span style=\"color: #032F62\">&quot;Error while registering the customer&quot;</span><span style=\"color: #24292E\">}};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Created</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {status: </span><span style=\"color: #032F62\">&quot;Customer registered successfully.&quot;</span><span style=\"color: #24292E\">, customerId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> customerId}};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ResourceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        produces</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;application/pdf&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">customers</span><span style=\"color: #24292E\">/[</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">customerId</span><span style=\"color: #24292E\">]/agreement() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> @http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Cache {maxAge</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">15</span><span style=\"color: #24292E\">} </span><span style=\"color: #005CC5\">byte</span><span style=\"color: #24292E\">[]</span><span style=\"color: #D73A49\">|http:</span><span style=\"color: #24292E\">NotFound {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">byte</span><span style=\"color: #24292E\">[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> agreementForm </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getAgreementForm</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">customerId</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> agreementForm </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">NotFound</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: </span><span style=\"color: #032F62\">&quot;Agreement form not found for the customer ID: &quot;</span><span style=\"color: #24292E\"> + customerId}};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> agreementForm;   </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"persist":{"frontmatter":{"title":"Let Ballerina write data access code for your apps","description":"Ballerina's persistence features offer a straightforward way to work with data sources, making it easier to build applications' data access layer. By simply defining the required Ballerina records, the persistence package can generate all data access functions. This eliminates repetitive code, providing a simplified interface for inserting, updating, and querying data where data tables are directly mapped to Ballerina records.","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Add a new order to the database</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> &#39;order) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http:BadRequest {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#39;order.cargoId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">assignCargo</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> submitOrderResult </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> odersDatabase</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">orders.</span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\">([&#39;order]);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> submitOrderResult </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                message</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> submitOrderResult.</span><span style=\"color: #6F42C1\">message</span><span style=\"color: #24292E\">()</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Get all orders from the database</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">stream&lt;</span><span style=\"color: #24292E\">Order, </span><span style=\"color: #D73A49\">error?&gt;</span><span style=\"color: #24292E\"> orders </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> odersDatabase</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">orders;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> Order &#39;order </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">select</span><span style=\"color: #24292E\"> &#39;order;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Get the order with the given &#39;orderId&#39;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">/[</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">orderId</span><span style=\"color: #24292E\">]() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        Order</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> &#39;order </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> odersDatabase</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">orders</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">[orderId];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> &#39;order </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> Order {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> &#39;order;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                message</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> &#39;order.</span><span style=\"color: #6F42C1\">message</span><span style=\"color: #24292E\">()</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Get all orders with the given &#39;cargoId&#39; sorted by &#39;quantity&#39;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">cargoOrders</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">cargoId</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> Order &#39;order </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> odersDatabase</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">targetType</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> Order)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">where</span><span style=\"color: #24292E\"> &#39;order.cargoId </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> cargoId</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">order</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">by</span><span style=\"color: #24292E\"> &#39;order.quantity </span><span style=\"color: #D73A49\">descending</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">select</span><span style=\"color: #24292E\"> &#39;order;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"rest-support":{"frontmatter":{"title":"Simplify backend development with native REST features","description":"Most web apps rely on REST APIs, with JSON serving as the predominant data exchange format. Handling REST API elements like path parameters, query parameters, HTTP headers, status codes, and complex JSON structures is crucial for web app backends. Ballerina addresses these needs effectively by incorporating all these REST features as first-class citizens within the language itself.","url":"https://github.com/ballerina-guides/b2b-samples/blob/main/simple-edi-schema/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/log;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Get all orders</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orderTable;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Get order by ID. Example: http://localhost:9090/sales/orders/HM-238</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">/[</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">id</span><span style=\"color: #24292E\">]() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">NotFound {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">foreach </span><span style=\"color: #24292E\">Order item </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orderTable {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> item.orderId </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> id {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">NotFound res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Order not found. Order ID: &quot;</span><span style=\"color: #24292E\"> + id</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Query orders by customer ID and order status</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Example: http://localhost:9090/sales/orders?customer=C-124&amp;status=PENDING</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">customerOrders</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">customer</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">status</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        Order[] customerOrders </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">foreach </span><span style=\"color: #24292E\">Order item </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orderTable {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> item.customerId </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> customer </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> item.status </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> status {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                customerOrders.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">item</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> customerOrders;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Add a new order by posting a JSON payload</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Request ID is passed as a header for logging purposes</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(@</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">Header</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">requestId</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> &#39;order) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printInfo</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Order received: &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">requestId</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        orderTable.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(&#39;order);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Order submitted successfully&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"security":{"frontmatter":{"title":"Enable comprehensive security for web app backends","description":"Web app backends face several security challenges beyond user authentication and authorization. These include securing sensitive data during transit, server identity validation, CORS management, and message type restrictions. <br><br>Ballerina-based backends simplify these functions, enabling security features via annotations on relevant services. Additionally, Ballerina services can easily generate HTTP access logs and trace logs, providing deeper insights into message exchanges.","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">@</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ServiceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    cors</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        allowOrigins</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;http://www.hmart.com&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;http://www.hmart-dev.com&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        allowCredentials</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">false</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        allowHeaders</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;REQUEST_ID&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        exposeHeaders</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;RESPONSE_ID&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        maxAge</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">84900</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">, </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #E36209\">secureSocket</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">key:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                certFile</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;../resources/public.crt&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                keyFile</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;../resources/private.key&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ResourceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        cors</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            allowOrigins</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;http://www.hmart.com&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            allowCredentials</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">true</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> &#39;order) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        orderTable.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(&#39;order);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> { body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> { message: </span><span style=\"color: #032F62\">&quot;Order submitted successfully&quot;</span><span style=\"color: #24292E\"> }};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orderTable;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"server-auth":{"frontmatter":{"title":"Enable advanced user authentications and authorizations with simple annotations","description":"Authenticating users and authorizing access are critical requirements for any front-end application. This is usually facilitated by integrating with identity providers, enabling advanced security features like centralized user management, multi-factor authentication, social logins, and role-based access control. <br><br>Ballerina apps can be seamlessly integrated with any OAuth2-compatible identity provider using a simple set of annotations. All requests for such annotated services will be authenticated and authorized based on tokens issued by corresponding identity providers.","url":"https://github.com/ballerina-guides/b2b-samples/blob/main/ballerina-edifact/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> issuer </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> audience </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> jwksUrl </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">@</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ServiceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    cors</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        allowOrigins</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;*&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6F42C1\">jwtValidatorConfig</span><span style=\"color: #24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6F42C1\">issuer</span><span style=\"color: #24292E\">: issuer,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6F42C1\">audience</span><span style=\"color: #24292E\">: audience,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6F42C1\">signatureConfig</span><span style=\"color: #24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6F42C1\">jwksConfig</span><span style=\"color: #24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #6F42C1\">url</span><span style=\"color: #24292E\">: jwksUrl</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6F42C1\">scopes</span><span style=\"color: #24292E\">: [</span><span style=\"color: #032F62\">&quot;order_insert&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;order_read&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;cargo_insert&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;cargo_read&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    ]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// &quot;order_insert&quot; scope is required to invoke this resource</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ResourceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            scopes</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;order_insert&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> &#39;orders) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        orderTable.</span><span style=\"color: #6F42C1\">push</span><span style=\"color: #24292E\">(&#39;orders);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                message</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Order submitted successfully&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Either &quot;order_insert&quot; or &quot;order_read&quot; scope is required to invoke this resource</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ResourceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            scopes</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;order_read&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;order_insert&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orderTable;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span></code></pre>"},"websockets":{"frontmatter":{"title":"Expose real-time data to front-ends via WebSockets","description":"Modern web and mobile app users expect real-time updates, whether it's tracking a cab's live location or viewing up-to-the-minute inventory levels. Ballerina allows real-time data to be streamed just by implementing a service. This comes with enterprise-ready security features like TLS, mutual TLS, and OAuth2, ensuring authenticated and authorized streaming data transfers.","url":"https://github.com/ballerina-guides/b2b-samples/blob/main/ballerina-x12/main.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/lang.runtime;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/log;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/websocket;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Expose websocker server over port 9091.</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Example ws://localhost:9091/sales.</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/logistics</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> websocket:Listener(</span><span style=\"color: #005CC5\">9091</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">vehicles</span><span style=\"color: #24292E\">/[</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">vehicleId</span><span style=\"color: #24292E\">]() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Service {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">OrderService</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">vehicleId</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">distinct</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">service class</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">OrderService</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">*</span><span style=\"color: #24292E\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Service;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> vehicleId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">init</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">vehicleId</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.vehicleId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> vehicleId;        </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onOpen</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        Location[]</span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\"> locations </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> vehicleLocations[</span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.vehicleId];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> locations </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Invalid vehicle id&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> i </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">while</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">true</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            Location currentLocation </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                latitude</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> locations[i % locations.</span><span style=\"color: #6F42C1\">length</span><span style=\"color: #24292E\">()].latitude,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                longitude</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> locations[i % locations.</span><span style=\"color: #6F42C1\">length</span><span style=\"color: #24292E\">()].longitude</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            i </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> i </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> e </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> caller</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">writeMessage</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">currentLocation</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> e </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printError</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Error while upodating the location details&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            runtime</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">sleep</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onClose</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printInfo</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;WebSocket connection closed&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onError</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller, </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">err</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printInfo</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Error occured&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">err</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"}}},"__N_SSG":true}