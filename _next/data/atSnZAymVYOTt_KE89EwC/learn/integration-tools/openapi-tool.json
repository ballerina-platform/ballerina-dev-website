{"pageProps":{"frontmatter":{"layout":"ballerina-openapi-support-left-nav-pages-swanlake","title":"OpenAPI tool","description":"Check out how the Ballerina OpenAPI tool makes it easy for you to start developing a service documented in an OpenAPI contract.","keywords":"ballerina, programming language, openapi, open api, restful api","permalink":"/learn/openapi-tool/","active":"openapi-tool","intro":"OpenAPI Specification is a specification that creates a RESTFUL contract for APIs by detailing all of its resources and operations in a human and machine-readable format for easy development, discovery, and integration. Ballerina Swan Lake supports the OpenAPI Specification version 3.0.0 onwards."},"content":" \n\nBallerina OpenAPI tool makes it easy for you to start the development of a service documented in an OpenAPI contract in Ballerina by generating a Ballerina service and client skeletons. It enables you to take the code-first API design approach by generating an OpenAPI contract for the given service implementation.\n\n## Usage\n\nThe Ballerina OpenAPI tool support provides the following capabilities.\n\n 1. Generate Ballerina service/client stubs from a given OpenAPI contract file using the CLI tool.\n 2. Export the OpenAPI definition from a given Ballerina service implementation using the CLI tool.\n 3. Validate the service implementation compliance with a provided OpenAPI contract using the OpenAPI annotation.\n  >**Info:** The OpenAPI compiler plugin allows you to validate a service implementation against an OpenAPI contract during the compile time. This plugin ensures that the implementation of a service does not deviate from its OpenAPI contract. \n\n### OpenAPI to Ballerina usage\n\nThe OpenAPI to Ballerina command supports several usages in the Ballerina OpenAPI tool as follows.\n\n```\n$ bal openapi [-i | --input] <openapi-contract-file-path> \n            [-o | --output] <output-location>\n            [--mode] <mode-type>\n            [--tags] <tag-names> \n            [--operations] <operation-names> \n            [-n | --nullable]\n            [--license] <license-file-path> \n            [--with-tests]\n            [--status-code-binding]\n```\n\n### Ballerina to OpenAPI usage\n\nThe Ballerina to OpenAPI command supports several usages in the Ballerina OpenAPI tool as follows.\n\n```\n$ bal openapi [-i | --input] <ballerina-service-file-path> [--json]\n            [-s | --service] <current-service-name>\n            [-o | --output] <output-location>\n```\n\n## Command options\n\nThe below command-line arguments can be used with the command.\n\n### OpenAPI to Ballerina command options\n\nThe command-line arguments below can be used with the command for each particular purpose as described below. \n\n| Command option      | Description                                                                                                                                                                                                                                                                                                                                                                     | Mandatory/Optional |\n|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|\n| `-i \\| --input`   | The `openapi-contract-path` command option specifies the path of the OpenAPI contract file (e.g., `my-api.yaml` or `my-api.json`).                                                                                                                                                                                                                                                                                                                                         | Mandatory          |\n| `-o \\| --output`  | The Ballerina files are generated at the same location from which the `bal openapi` command is executed. You can point to another directory location by using the `(-o\\|--output).` flag.                                                                                                                                                                                                                                                                                                        | Optional          |\n| `--mode`          | Mode type can be either a service or client. The Ballerina service and client are generated according to the mode. Without the `--mode`, it generates both service and client stubs for the given OpenAPI contract.                                                                                                                                                                                                                                                                                                 | Optional          |\n| `--tags`          | To generate the Ballerina client or service stub with a subset of tags defined in the OpenAPI contract, use the `--tags` option and specify the tags you need as specified in the OpenAPI definition.<br><br>**E.g.,** `bal openapi -i <openapi-contract>  [--tags < \"tag1\",\"tag2\">]`                                                                                                                                                                                                              |  Optional        |\n| `--operations`    | To generate the Ballerina client or service stub with a subset of operations defined in the OpenAPI contract, use the `--operations` option and specify the operations you need as specified in the OpenAPI definition.<br><br>**E.g.,** `bal openapi -i <openapi-contract> [--operations <\"op1\", \"op2\">]`                                                                                                                                                                                                              |  Optional        |\n| `--license`       | To generate the Ballerina files with the given copyright or license header, you can use this `--license` flag with your copyright text.<br><br>**E.g.,** `bal openapi -i <openapi-contract> [--license <license-file-path>]`                                                                                                                                                                                                                                                                                                         |  Optional         |\n| `-n \\|--nullable` | If your OpenAPI specification includes JSON schema properties that are not marked as `nullable:true`, they may return as null in some responses. It results in a JSON schema to Ballerina record data binding error. If you suspect this can happen for any property, it is safe to generate all data types in the generated record with Ballerina nil support by turning on this flag.<br><br>**E.g.,** `bal openapi -i <openapi-contract> [-n \\|--nullable]`                          | Optional          |\n| `--with-tests`    | It works with the client generation command and generates a boiler-plate test for all the remote methods of the generated client.                                                                                                                                                                                                                                                                                                                                                                                              | Optional          |\n| `--client-methods`| This option can be used in the client generation to select the client method type, which can be `resource` or `remote`. (The default option is `resource`).                                                                                                                                                                                                                                                                                                                                                                                           |  Optional         |\n| `--status-code-binding`| This option can be used in the client generation to generate the client methods with status code response binding.                                                                                                                                                                                                                                                                                                                                                                                           |  Optional         |\n\n### Ballerina to OpenAPI command options\n\nThe command-line arguments below can be used with the command for each particular purpose as described below.\n\n| Command option      | Description                                                                                                                                                                                                                                                                                                                                                                     | Mandatory/Optional |\n|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|\n| `-i \\|--input`    | The `ballerina-service-file-path` command option specifies the path of the Ballerina service file (e.g., `my-service.bal`).                                                  | Mandatory          |\n| `--json`          | Generate the Ballerina service to OpenAPI output as JSON. The default is YAML.                                                                                                           | Optional          |\n| `-s \\| --service` | This service name is used to identify the service that needs to be documented as an OpenAPI specification.                                                                               | Optional          |\n| `-o\\|--output`    | Location of the generated OpenAPI specification. If this path is not specified, the output is written to the same directory from which the command is run.                          | Optional          |\n\n## Generate Ballerina services from OpenAPI Contracts \n\nIf you are an API developer who prefers the **design-first approach**, you can use an existing or your OpenAPI definition to generate Ballerina services using the `bal openapi` CLI command as follows.\n\n```\n$ bal openapi -i <openapi-contract> --mode service\n```\n\nThe generated service can be used as a code template to start the service implementation.\n\nFor example,\n\n```\n$ bal openapi -i hello.yaml --mode service\n```\n\nThis generates a Ballerina service in a file named `hello_service.bal` and relevant schemas in a file named `types.bal` for the `hello.yaml` OpenAPI contract as depicted below. The above command can be run from anywhere on the execution path. It is not mandatory to run it from within a Ballerina package.\n\n```\nThe service generation process is complete. The following files were created.\n-- hello_service.bal\n-- types.bal\n```\n\n### Generate from tags\n\nTo generate the Ballerina service stub with a subset of tags defined in an OpenAPI contract, use the `--tags` option and specify the tags you need as specified in the OpenAPI definition.\n\n```\n$ bal openapi -i <openapi-contract> [--tags <\"tag1\",\"tag2\">]\n```\n\nFor example, \n\n```\n$ bal openapi -i hello.yaml --tags \"pets\", \"list\"\n```\n\nOnce you execute the command, only the operations related to the given tags get included in the generated service file.\n\n## Export OpenAPI contracts from Ballerina services\n\nIf you prefer to follow the **code-first approach**, you can convert your Ballerina service APIs into human-readable or machine-readable documents such as OpenAPI documents by using the Ballerina to OpenAPI CLI Tool as follows.\n\nExport the Ballerina service to an OpenAPI Specification 3.0.0 definition. For the export to work properly, the input Ballerina service should be defined using the basic service and resource-level HTTP annotations.\n\n```\n$ bal openapi [-i | --input] <ballerina-service-file-path> [(-o | --output) <output-location>]\n```\n\nThe `ballerina-service-file-path` command option specifies the path of the ballerina service file (e.g., `my_api.bal`) and is mandatory.\n\nIf your Ballerina file includes multiple services, this command generates the OpenAPI contract for each service in the Ballerina file.\n\n### Export in JSON format\n\nUse the `--json` flag If you need the Ballerina service to OpenAPI output in JSON. The default is YAML.\n\n```\n$ bal openapi -i <ballerina-resource-file> [--json]\n```\n\n### Export for a specific service\n\nIf you need to document an OpenAPI contract for only one given service (when there are multiple), use the following command, specifying the service name as the `absolute-resource-path`.\n\n```\n$ bal openapi -i <ballerina-resource-file> [-s|--service] <service-name>\n```\n\nFor example,\n\n```\n$ bal openapi -i helloService.bal\n```\n\nThis generates the OpenAPI contracts for the Ballerina services in the `hello_service.bal` Ballerina file.\n\n```\n$ bal openapi -i helloService.bal -s \"/hello\"\n```\n\nThis generates the OpenAPI contracts for the Ballerina service in the `hello_service.bal` Ballerina file\nof which the `absolute-resource-path` is `/hello`. \n### Export with a given title and version\n\nYou can use the `@openapi:ServiceInfo` annotation for specifying the title and version information of the OpenAPI contract as follows.\n\n\n\n```ballerina\n@openapi:ServiceInfo {\n    contract: \"/path/to/openapi.json|yaml\",\n    title: \"Store Management\",\n    'version: \"0.1.0\"\n}    \n```\n>**Info:** These `contract`, `title`, and `'version` are all optional attributes and can be used as described below.\n\n| Command option      | Description                                                                                                                                                                                                                                                                                                                                                                     | Mandatory/Optional |\n|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|\n| `Contract: string?` | A path to the OpenAPI contract as a string and the OpenAPI file can either be `.yaml` or `.json`. When you use the Ballerina to OpenAPI tool, it provides an attached OpenAPI contract as the output for a given service. If this attribute is not provided, then the tool generates an OpenAPI Specification(OAS) contract for the given Ballerina file content.                          | Optional          |\n| `Title: string?`    | You can use this to add the title of the `info` section in the generated OpenAPI contract. If this attribute is not provided, then the tool takes the absolute base path as the title to the OAS contract.                                                                                                                                                                                                                    | Optional          |\n| `Version: string?`  | You can use this to add the version of the `info` section in the generated OpenAPI contract. If this attribute is not provided, then the tool picks the Ballerina package version as the OAS version.                                                                                                                                                                                                                         | Optional          |\n\nFor example,\n\n**Ballerina service file with the OpenAPI annotation**\n```ballerina\n@openapi:ServiceInfo {\n    title: \"Store Management APIs\",\n    'version: \"1.1.0\"\n}\nservice /greet on new http:Listener(9090) {\n...\n}\n```\n**Generated OpenAPI contract with the given details**\n```openapi\nopenapi: 3.0.1\ninfo:\n  title: Store Management APIs\n  version: 1.1.0\n...\n```\n\n## OpenAPI validator compiler plugin\n\nThe OpenAPI Validator Compiler plugin validates a service against a given OpenAPI contract. The Compiler Plugin gets activated if a service has the `@openapi:ServiceInfo` annotation. This plugin compares the service and the OpenAPI contract and validates both against a pre-defined set of validation rules. If any of the rules fail, the plugin provides compilation errors.\n\nThe `@openapi:ServiceInfo` annotation is used to bind the service with an OpenAPI contract. You need to add this annotation to the service file with the required values for enabling the validations.\n\n>**Note:** Providing a `contract` path attribute is mandatory for the OpenAPI validator. The other attributes are optional.\n\nThe following is an example of the annotation usage in the Ballerina file.\n\n```ballerina\nimport ballerina/openapi;\n\n@openapi:ServiceInfo {\n    contract: \"/path/to/openapi.json|yaml\",\n    tags: [\"store\"],\n    operations: [\"op1\", \"op2\"],\n    failOnErrors: true # (default value => true),\n    excludeTags: [\"pets\", \"user\"],\n    excludeOperations: [\"op1\", \"op2\"]\n}\nservice /greet on new http:Listener(9090) {\n  ...\n}\n```\n\n>**Info:** For annotation attributes details, see [Annotation reference](#annotation-reference).\n\n## Generate Ballerina clients from OpenAPI definitions\n\nThe client generated from an OpenAPI definition can be used in your applications to call the service defined in the OpenAPI file. If you want to generate only the Ballerina client, you can set the `mode` as the `client` when running the OpenAPI tool. \n\n>**Note:** Before generating your client using the command-line tool, please check if a pre-generated client for your API already exists in the <a href=\"https://central.ballerina.io/\" target=\"_blank\">Ballerina Central</a>. (If so, you can refer to the client's API documentation for more information on how to use the pre-generated client in your code.)\n\n```\n$ bal openapi -i <openapi-contract> --mode client\n```\n\nFor example, \n\n```\n$ bal openapi -i hello.yaml --mode client\n```\nThis generates a Ballerina client stub (`client.bal`), a util file (`utils.bal`) for the relevant utils methods related to the client stub, and a schemas file (`types.bal`) for the `hello.yaml` OpenAPI contract. The above command can be run from anywhere on the execution path. It is not mandatory to run it from within a Ballerina package.\n\n```\nClient generated successfully. The following files were created. \n-- client.bal\n-- types.bal\n-- utils.bal\n```\n### Generate with boiler-plate tests\n\nUse the `--with-tests` flag in the client mode to generate a Ballerina client with boilerplate test cases for all the remote methods available in it.\n```\n$ bal openapi -i <openapi-contract> [--mode client] [--with-tests]\n```\n\nFor example,\n\n```\n$ bal openapi -i hello.yaml --mode client --with-tests\n```\nIn addition to the above-mentioned generated file, this generates a `test.bal` file in the default client generation.\n\n### Generate with nillable types\n\n>**Info:** This is an optional flag in the OpenAPI to Ballerina command.\n\nIf your OpenAPI specification includes JSON schema properties that are not marked as **nullable:true**, they may be returned as null in some responses which results in a JSON schema to Ballerina record data binding error. If you suspect this can happen for any property, it is safe to generate all data types in the generated record with Ballerina nil support by turning this flag on.\n\n```\n$ bal openapi -i <openapi-contract> [-n |--nullable]\n```\n\n### Generate with a given method type\nUse the `--client-methods <resource|remote>` option to select the client method type, which can be `resource` or `remote`. (The default option is `remote`).\n\n```\n$ bal openapi -i <openapi-contract> --mode client --client-methods <resource|remote>\n```\n\n>**Info:** For more command options, see [OpenAPI to Ballerina CLI options](#openapi-to-ballerina-command-options).\n\n### Automate client generation\n\n#### Update the `Ballerina.toml` file with OpenAPI tool configurations\n\nAdding the following OpenAPI tool configurations to the `Ballerina.toml` file will generate a client during the package build. This eliminates the need to commit the generated code.\n\n> **Info:** It is mandatory to provide `id` and `filePath` attributes for the OpenAPI tool configurations. The other attributes are optional.\n\nThe following is an example of the tool configuration usage in the `Ballerina.toml`.\n\n```ballerina\n[[tool.openapi]]\nid = \"client01\"\nfilePath = \"./openapi.yaml\"\ntargetModule = \"delivery\"\noptions.mode = \"client\"\noptions.statusCodeBinding = true\noptions.tags = [\"tag1\", \"tag2\"]\noptions.operations = [\"op1\", \"op2\"]\noptions.nullable = true # (default value => false)\noptions.license = \"./license.txt\"\n```\n\nThe below tool configuration can be used.\n\n| Command option      | Description                                                                                                                                                                                                                                                                                                                                                                     | Mandatory/Optional |\n|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|\n| `filePath`   | The `filePath` tool option specifies the path of the OpenAPI contract file (e.g., `my-api.yaml` or `my-api.json`).                                                                                                                                                                                                                                                                                                                                         | Mandatory          |\n| `id`          | Id for the generated module.                                                                                                                                                                                                                                                                                  | Mandatory        |\n| `targetModule`  | The Ballerina files are generated at the given directory name in the Ballerina package.                                                                                                                                                                                                                                                                                     | Optional          |\n| `options.mode`          | The supported mode type is `client`. It generates client stubs for the given OpenAPI contract.                                                                                                                                                                                                                                                                                                 | Optional          |\n| `options.tags`          | To generate the Ballerina client stub with a subset of tags defined in the OpenAPI contract                                                                                                                                                                                                             |  Optional        |\n| `options.operations`    | To generate the Ballerina client stub with a subset of operations defined in the OpenAPI contract, use the `options.operations` option and specify the operations you need as specified in the OpenAPI definition.                                                                                                                                                                                                            |  Optional        |\n| `options.license`       | To generate the Ballerina files with the given copyright or license header, you can use this `options.license` option with the path to your copyright text.                                                                                                                                                                                                                                                                                                         |  Optional         |\n| `options.nullable` | If your OpenAPI specification includes JSON schema properties that are not marked as `options.nullable=true`, they may return as null in some responses. It results in a JSON schema to Ballerina record data binding error. If you suspect this can happen for any property, it is safe to generate all data types in the generated record with Ballerina nil support by turning on this flag.           | Optional          |\n| `options.clientMethods`| This option can be used in the client generation to select the client method type, which can be `resource` or `remote`. (The default option is `resource`).                                                                                                                                                                                                                                                                                                                                                                                           |  Optional         |\n| `options.statusCodeBinding`| This option can be used in the client generation to generate the client methods with status code response binding.                                                                                                                                                                                                                                                                                                                                                                                           |  Optional         |\n\n\n#### Update the Ballerina.toml file with OpenAPI tool configurations using OpenAPI CLI command\n\nExecuting the following OpenAPI `add` sub-command, along with the OpenAPI to Ballerina CLI options, will update the `Ballerina.toml` with OpenAPI tool configurations.\n\n```\n$ bal openapi add [-i | --input] <openapi-contract-file-path>\n                  [--id] <client-id>\n                  [--module] <target-module>\n                  [--package] <ballerina-package-path>\n```\n\nFor example,\n\n```\n$ bal openapi add -i <openapi-contract> --id <client_id> --module <target-module> --package <ballerina package path> --tags <\"tag1\",\"tag2\">\n```\n\n| Command option      | Description                                                                                                                                                                                                                                                                                                                                                                     | Mandatory/Optional |\n|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|\n| `-i \\| --input`   | The `-i\\|--input` command option specifies the path of the OpenAPI contract file (e.g., `my-api.yaml` or `my-api.json`).                                                                                                                                                                                                                                                                                                                                         | Mandatory          |\n| `--id`          | Id for the generated module | Mandatory          |\n| `--module`          | Module name for the generated client stub module (default will be generated directory)|  Optional        |\n| `-p \\|--package`    | The Ballerina package location to generate the Ballerina client or service stub.                                                                                                                                                                                                              |  Optional        |\n\n>**Info:** For more command options, see [OpenAPI to Ballerina CLI options](#openapi-to-ballerina-command-options).\n\n## Publish your client\n\nTo see your new client in Ballerina central in the future, follow the steps below to send a GitHub Pull Request to the WSO2 `openapi-connectors` repository to publish it.\n\n1. Fork and clone the <a href=\"https://github.com/ballerina-platform/openapi-connectors\" target=\"_blank\">`openapi-connectors`</a> repository. Connectors generated from the Ballerina OpenAPI tool are managed in this repository.\n\n2. Open the cloned repository and navigate to the `/openapi` directory.\n\n3. Run the `bal new <connector_name> -t lib` command to create a new Ballerina package. \n\n4. Copy the [generated files](#generate-ballerina-clients-from-openapi-definitions) (i.e., `client.bal`, `types.bal`, and `utils.bal`) into the `<connector_name>` directory. \n\n5. Run the `bal build` command to check whether the newly-generated connector is compiling successfully. \n\n6. Run the necessary unit tests to verify the functionality of the generated connector.\n\n7. Add the license header at the top of each `.bal` file. \n\n8. Add the <a href=\"https://github.com/ballerina-platform/ballerina-extended-library/discussions/77\" target=\"_blank\">`Package.md`</a> and <a href=\"https://github.com/ballerina-platform/ballerina-extended-library/discussions/78\" target=\"_blank\">`Module.md`</a> files.\n\n9. Add a connector icon to the root of the connector. The icon needs to be a `.png` of 200x200 px size named as `icon.png`. \n\n10. Update the <a href=\"https://github.com/ballerina-platform/ballerina-extended-library/discussions/72\" target=\"_blank\">`Ballerina.toml` file</a>.\n\n11. Run the `./gradlew build` command. \n\n12. Push the changes and create a Pull Request to the master branch of the `openapi-connectors` repository.\n\n## Annotation reference\n\n### The `@openapi:ServiceInfo` annotation\n\nThe `@openapi:ServiceInfo` annotation supports several usages in the Ballerina OpenAPI tool.\n\n```ballerina\n@openapi:ServiceInfo {\n    contract: \"/path/to/openapi.json|yaml\",\n    tags: [\"store\"],\n    operations: [\"op1\", \"op2\"],\n    failOnErrors: true // (default value => true),\n    excludeTags: [\"pets\", \"user\"],\n    excludeOperations: [\"op1\", \"op2\"],\n    title: \"store\",\n    'version: \"0.1.0\",\n    embed: true // (default value => true)\n}\nservice /greet on new http:Listener(9090) {\n   ...\n}\n```\n\nThe attributes of the annotation are optional and can be used for each particular purpose as described below.  \n\n\n| Command option      | Description                                                                                                                                                                                                                                                                                                                                                                     | Mandatory/Optional |\n|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|\n| `Contract: string?`            | Provides a path to the OpenAPI contract as a string and the OpenAPI file can either be a `.yaml` or `.json`.                                                                                                                                                                                                                              | Mandatory          |\n| `Tags: string[]?`              | Specifies the tag in the list for the compiler to validate resources against operations that are tagged with it. If not specified, the compiler validates resources against all the operations defined in the OpenAPI contract.                                                                                                           | Optional          |\n| `Operations: string[]?`        | Contains a list of operation names that need to be validated against the resources in the service. If not specified, the compiler validates resources against all the operations defined in the OpenAPI contract.  If both tags and operations are defined, it validates against the union set of the resources.                          | Optional          |\n| `ExcludeTags: string[]?`       | Stores the tags that do not need to be validated. The annotation can not have both the `excludeTags` and `Tags` attributes at the same time.                                                                                                                                                                                              | Optional          |\n| `ExcludeOperations: string[]?` | Specifies the operations that do not need to be validated.                                                                                                                                                                                                                                                                                | Optional          |\n| `FailOnErrors: boolean?`       | Turns off the validation when used with `false` in the annotation.                                                                                                                                                                                                                                                                        | Optional          |\n| `Title: string?`               | Adds the title of the `info` section in the generated OpenAPI contract.                                                                                                                                                                                                                                                                  | Optional          |\n| `Version: string?`             | Adds the version of the `info` section in the generated OpenAPI contract.                                                                                                                                                                                                                                                                 | Optional          |\n| `Embed: string?`               | Turns off generating OpenAPI documentation for the service for introspection endpoint support when used with `false` in the annotation.                                                                                                                                                                                                   | Optional          |\n\n","id":"openapi-tool","sub":"","third":"","slug":"openapi-tool","codes":"[[892530809,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">openapi</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">ServiceInfo</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    contract</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;/path/to/openapi.json|yaml&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    title</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Store Management&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    &#39;version</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;0.1.0&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[191822274,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">openapi</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">ServiceInfo</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    title</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Store Management APIs&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    &#39;version</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;1.1.0&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">/greet</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> http:Listener(</span><span style=\\\"color: #005CC5\\\">9090</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[2039966343,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292e\\\">openapi: 3.0.1</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292e\\\">info:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292e\\\">  title: Store Management APIs</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292e\\\">  version: 1.1.0</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292e\\\">...</span></span></code></pre>\"],[-343023244,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/openapi;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">openapi</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">ServiceInfo</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    contract</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;/path/to/openapi.json|yaml&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    tags</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;store&quot;</span><span style=\\\"color: #24292E\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    operations</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;op1&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;op2&quot;</span><span style=\\\"color: #24292E\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    failOnErrors</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">true</span><span style=\\\"color: #24292E\\\"> # (</span><span style=\\\"color: #E36209\\\">default</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">value</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=&gt;</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">true</span><span style=\\\"color: #24292E\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    excludeTags</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;pets&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;user&quot;</span><span style=\\\"color: #24292E\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    excludeOperations</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;op1&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;op2&quot;</span><span style=\\\"color: #24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">/greet</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> http:Listener(</span><span style=\\\"color: #005CC5\\\">9090</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">  </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[237060759,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">[[tool.openapi]]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">id </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;client01&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">filePath </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;./openapi.yaml&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">targetModule </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;delivery&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">options.mode </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;client&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">options.statusCodeBinding </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">options.tags </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;tag1&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;tag2&quot;</span><span style=\\\"color: #24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">options.operations </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;op1&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;op2&quot;</span><span style=\\\"color: #24292E\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">options.nullable </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">true</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6A737D\\\"># (default value =&gt; false)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">options.license </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;./license.txt&quot;</span></span></code></pre>\"],[1774856264,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">@</span><span style=\\\"color: #005CC5\\\">openapi</span><span style=\\\"color: #24292E\\\">:</span><span style=\\\"color: #005CC5\\\">ServiceInfo</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    contract</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;/path/to/openapi.json|yaml&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    tags</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;store&quot;</span><span style=\\\"color: #24292E\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    operations</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;op1&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;op2&quot;</span><span style=\\\"color: #24292E\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    failOnErrors</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">true</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6A737D\\\">// (default value =&gt; true),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    excludeTags</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;pets&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;user&quot;</span><span style=\\\"color: #24292E\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    excludeOperations</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;op1&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;op2&quot;</span><span style=\\\"color: #24292E\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    title</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;store&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    &#39;version</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;0.1.0&quot;</span><span style=\\\"color: #24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    embed</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">true</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6A737D\\\">// (default value =&gt; true)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">/greet</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> http:Listener(</span><span style=\\\"color: #005CC5\\\">9090</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"]]"},"__N_SSG":true}