{"pageProps":{"frontmatter":{"title":"Try GraphQL services","description":"GraphQL is an open-source data querying and manipulation language for APIs. While you develop a GraphQL service, you need to try it and debug it to check how it works.","keywords":"ballerina, vs code extension, graphql, service, try it","intro":"GraphQL is an open-source data querying and manipulation language for APIs. While you develop a GraphQL service, you need to try it and debug it to check how it works."},"content":"\nThe Ballerina VS Code extension provides the GraphQL **Try it** view, which gives the ability to try GraphQL services within VS Code instead of using any third-party software.\n\n## Write the GraphQL service\n\nAdd the code below to the `main.bal` file of your Ballerina project.\n\n```ballerina\nimport ballerina/graphql;\n\n# A service representing a network-accessible GraphQL API.\nservice / on new graphql:Listener(8090) {\n\n    # A resource for generating greetings.\n    # + name - the input string name\n    # + return - string name with greeting message or error\n    resource function get greeting(string name) returns string|error {\n        // Send a response back to the caller.\n        if name is \"\" {\n            return error(\"name should not be empty!\");\n        }\n        return \"Hello, \" + name;\n    }\n}\n    \n```\n\n## Try the GraphQL service\n\nOnce you add the above function, the VS Code extension will display a CodeLens called **Try it** on top of the service.\n\n1. Click the **Run** CodeLens to run the program. \n    \n    >**Info:**   This opens the terminal and starts running the service.\n\n    <img src=\"/learn/images/vs-code-extension/build-and-try/try-graphql-services/graphql-run.png\" class=\"cInlineImage-full\"/>\n\n2. Click the **Try it** CodeLens to open the GraphQL Try it view.\n\n    >**Note:**   The service must be in the running state to use GraphQL Try it view.\n\n    <img src=\"/learn/images/vs-code-extension/build-and-try/try-graphql-services/graphql-tryit.png\" class=\"cInlineImage-full\"/>\n\n3. Once the GraphQL view is opened, click **Explorer** to open the **Explorer** view.\n\n    >**Tip:** You can find all the available APIs from the side menu that opens.\n\n4. Select the APIs that you want to try from the **Explorer** menu.\n\n    >**Info:**   This will automatically generate the payload in the editor. You can edit the payload and add the required parameters (e.g., type your name under the name parameter). Click **Prettify** to format the code.\n\n5. Click **Run** to send the request.\n\n    >**Info:** The response gets displayed in the right-side window.\n    \n    <img src=\"/learn/images/vs-code-extension/build-and-try/try-graphql-services/graphql-tryit.gif\" class=\"cInlineImage-full\"/>\n","id":"try-graphql-services","sub":"","third":"","slug":"try-graphql-services","codes":"[[-519190207,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/graphql;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># A service representing a network-accessible GraphQL API.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> / </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> graphql:Listener(</span><span style=\\\"color: #005CC5\\\">8090</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\"># A resource for generating greetings.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">name</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">the input string name</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">return</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">string name with greeting message or error</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">resource</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">get</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">greeting</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">name</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|error</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #6A737D\\\">// Send a response back to the caller.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">if</span><span style=\\\"color: #24292E\\\"> name </span><span style=\\\"color: #D73A49\\\">is</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;&quot;</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">            </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">error</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;name should not be empty!&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Hello, &quot;</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">+</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"]]"},"__N_SSG":true}