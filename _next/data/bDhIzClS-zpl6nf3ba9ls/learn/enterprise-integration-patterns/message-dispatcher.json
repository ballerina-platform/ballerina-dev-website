{"pageProps":{"tagline":"Coordinate message processing","desc":"Message dispatcher coordinates message processing among multiple performers.","helps":"Ballerina programs can maintain the state internally using variables and perform logic based on the state.","category":"Messaging Endpoints","index":48,"tags":["Message Dispatcher","Competing Consumers","Transactional Client"],"link":"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageDispatcher.html","content":[{"headerCode":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client ocrClient </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"http://api.ocr.com.balmock.io\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> OcrResponse</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\">[] lines;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> noOfLines;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> pdfUrl;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#D73A49\"> readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\">[] ocrProcessors </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> [</span><span style=\"color:#032F62\">\"processor1\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"processor2\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"processor3\"</span><span style=\"color:#24292E\">];</span></span>\n<span class=\"line\"></span></code></pre>","mainCode":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#24292E\"> / </span><span style=\"color:#D73A49\">on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> http:Listener(</span><span style=\"color:#005CC5\">8080</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> processorNo </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    isolated</span><span style=\"color:#D73A49\"> resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> ocr</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> url</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> OcrResponse</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        int</span><span style=\"color:#24292E\"> currentProcessor;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        lock</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            currentProcessor </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.processorNo;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">            self</span><span style=\"color:#24292E\">.processorNo </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> currentProcessor </span><span style=\"color:#D73A49\">==</span><span style=\"color:#005CC5\"> 2</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#D73A49\"> :</span><span style=\"color:#24292E\"> currentProcessor + </span><span style=\"color:#005CC5\">1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        string</span><span style=\"color:#24292E\"> processorId </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> ocrProcessors[currentProcessor];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> ocrClient</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">[processorId]</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">parse</span><span style=\"color:#D73A49\">/</span><span style=\"color:#6F42C1\">imageurl</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">url</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> url);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","raw":"import ballerina/http;\n\nfinal http:Client ocrClient = check new (\"http://api.ocr.com.balmock.io\");\n\ntype OcrResponse record {|\n    string[] lines;\n    int noOfLines;\n    string pdfUrl;\n|};\n\nfinal readonly & string[] ocrProcessors = [\"processor1\", \"processor2\", \"processor3\"];\n\nservice / on new http:Listener(8080) {\n    int processorNo = 0;\n\n    isolated resource function get ocr(string url) returns OcrResponse|error {\n        int currentProcessor;\n        lock {\n            currentProcessor = self.processorNo;\n            self.processorNo = currentProcessor == 2 ? 0 : currentProcessor + 1;\n        }\n        string processorId = ocrProcessors[currentProcessor];\n        return check ocrClient->/[processorId]/parse/imageurl(url = url);\n    }\n}\n","name":"message-dispatcher.bal"}],"name":" Message Dispatcher"},"__N_SSG":true}