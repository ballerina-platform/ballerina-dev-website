{"pageProps":{"frontmatter":{"layout":"ballerina-persist-documentation-left-nav-pages-swanlake","title":"Data model","description":"The sections gives details on the data model.","keywords":"ballerina, programming language, ballerina packages, persist, data model, persist data model, persist entity type, persist simple type","permalink":"/learn/ballerina-persist/persist-model/","active":"persist_model","intro":"The data model defines a mechanism to express the application's data using the Ballerina record type. Any record type that is a subtype of the `EntityType` will be an entity in the model.","redirect_from":["/learn/ballerina-persist/persist-model/"]},"content":"\nWithin a Ballerina project, the data model should be defined in a separate BAL file under the `persist` directory. This file is not considered as a part of the Ballerina project and is used only for the data model definition.\n\n## The `EntityType` definition\n\nAn `EntityType` is defined using the `SimpleType` and `EntityType` fields. \n\n```ballerina\ntype SimpleType ()|boolean|int|float|decimal|string|byte[]|time:Date|time:TimeOfDay|time:Utc|time:Civil;\ntype EntityType record {|\n   SimpleType|EntityType|EntityType[]...;\n|};\n```\n\n### `Simple` type:  \n   From the data source perspective, a field of `SimpleType` contains only one value (i.e., each `SimpleType` field maps to a field of data).\n   > *Note*: This does not support the union type of `SimpleType`( i.e., `int|string` is not supported).\n\n### `Entity` type  \n   An entity can contain fields of the `SimpleType`, `EntityType`, or `EntityType[]`. This design uses fields of type `EntityType` or `EntityType[]` to define associations between two entities.\n\nBelow are some examples of subtypes of the entity type:\n\n```ballerina\n// Valid.\ntype Employee record {|\n   int id; // SimpleType\n   string fname; // SimpleType\n   string lname; // SimpleType\n   Department department; // EntityType\n|};\n\n\n// This is valid.\ntype Department record {|\n   int id;\n   string name;\n   byte[] logo;\n   Employee[] employees; // EntityType\n|};\n\n\n// Invalid\ntype Employee record {|\n   int|string id; \n   string fname;\n   string lname;\n   Department department; // EntityType\n|};\n```\n`Simple` types are mapped to native data source types. Depending on the data store, the mapping may vary. Refer to the [Supported data stores](/learn/supported-data-stores/) to learn more about the mapping.\n\n## Entity attributes definition\n\nBallerina record fields are used to model the attributes of an entity. The type of the field should be a subtype of `SimpleType`.\n\n### Identity field(s)\n\nThe entity must contain at least one identity field. This field's value is used to identify each record uniquely. The identity field(s) is indicated by the `readonly` flag.\n\nSay type T is one of `int`, `string`, `float`, `boolean` or `decimal` types,\n\n```ballerina\ntype EntityType record {|\n    readonly T <fieldName>;\n|} \n```\nThe identity field can be a single field or a combination of multiple fields as follows.\n\n```ballerina\ntype EntityType record {|\n    readonly T <fieldName1>;\n    readonly T <fieldName2>;\n|} \n```\n\n### Nullable field(s)\n\nSay type T is a subtype of `SimpleType`, and T does not contain (),\n\n| Field definition  |                 Semantics                  |       Examples        |   \n|:-----------------:|:------------------------------------------:|:---------------------:|\n|      `T`     | Mapped to a non-nullable column in the DB  |        `int id;`        |  \n|     T? field      |   Mapped to a nullable column in the DB    | string? description;  |  \n|     T field?      |                Not allowed                 |           -           |  \n|     T? field?     |                Not allowed                 |           -           |  \n\n## Relationship definition\n\nBallerina record fields are used to model a connection between two entities. The type of the field should be a subtype of `EntityType|EntityType?|EntityType[]`.\n\nThis design supports the following cardinalities.\n1. One-to-one (`1-1`)\n2. One-to-many (`1-n`)\n\nThe relation field is mandatory in both entities.\n\n### One-to-one (1-1)\n\nA 1-1 relationship is defined by a field of the `EntityType` in one entity and `EntityType?` in the other. For example, consider the `Car` and `User` entities. Assume that a car can have only one owner and a user can own at most one car.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   User owner;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n   Car? car;\n|};\n```\n\nThe above entities explain the following.\n - A `Car` must have a `User` as the owner.\n - A `User` may or may not own a `Car`.\n\nThe Ballerina record type generated from the above entities will be as follows.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   int ownerId;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n|};\n```\n\nIn the first record (`Car`), the `EntityType` field `owner` is taken as the owner in the 1-1 relationship and will include the foreign key of the second record (`User`).\n\nThe default foreign key field name will be `ownerId` in the `Car` table, which refers to the identity field of the `User` table by default.\n\n\n### One-to-many (1-n)\n\nA 1-n relationship is defined by a field of the `EntityType` in one entity and `EntityType[]` in the other. For example, consider the `Car` and `User` entities. Assume that a car can have only one owner and a user can own multiple cars.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   User owner;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n   Car[] cars;\n|};\n```\n\nThe above entities explain the following.\n- A `Car` must have a `User` as the owner.\n- A `User` may own multiple `Car`s or do not own one (represented with an empty array `[]`).\n\nThe Ballerina record type generated from the above entities will be as follows.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   int ownerId;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n|};\n```\n\nThe entity that contains the field of the `EntityType` is taken as the owner in the `1-n` relationship and will include the foreign key.\n\nThe default foreign key field name will be `ownerId` in the `Car` table, which refers to the identity field of the `User` table by default.\n\n### Many-to-many (`n-n`)\n\nAn `n-n` relationship is defined by two `1-n` relationships. The joining entity is used to map the two entities. The joining entity should contain two fields of the`EntityType` that refer to the two entities in the relationship. For example, consider `Car` and `User` entities. Assume that a car can have multiple owners and a user can own multiple cars.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   CarUser[] owners;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n   CarUser[] cars;\n|};\n\ntype CarUser record {|\n   readonly int id; \n   Car car;\n   User user;\n|};\n\n```\n\nThe above entities explain the following.\n\n- A `Car` may have multiple `User`s as owners.\n- A `User` may own multiple `Car`s.\n\nThe Ballerina record type generated from the above entities will be as follows.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n|};\n\ntype CarUser record {|\n   readonly int id; \n   int userId;\n   int carId;\n|};\n```\n\nThe `CarUser` `join` entity contains two fields of the EntityType` that refer to the two entities in the relationship. \n The foreign key field names will be `userId`, and `carId` in the `CarUser` table, which refer to the identity field of the `User` and `Car` tables.\n","id":"persist-model","sub":"ballerina-persist","third":"","slug":"ballerina-persist/persist-model","codes":"[[-474084244,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">SimpleType</span><span style=\\\"color: #24292E\\\"> ()</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">boolean</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">float</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">decimal</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">byte</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">|time:</span><span style=\\\"color: #24292E\\\">Date</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">time:TimeOfDay</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">time:Utc</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">time:Civil;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">EntityType</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   SimpleType</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">EntityType</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">EntityType[]</span><span style=\\\"color: #D73A49\\\">...</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1817020057,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Valid.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Employee</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id; </span><span style=\\\"color: #6A737D\\\">// SimpleType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> fname; </span><span style=\\\"color: #6A737D\\\">// SimpleType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> lname; </span><span style=\\\"color: #6A737D\\\">// SimpleType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Department department; </span><span style=\\\"color: #6A737D\\\">// EntityType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// This is valid.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Department</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">byte</span><span style=\\\"color: #24292E\\\">[] logo;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Employee[] employees; </span><span style=\\\"color: #6A737D\\\">// EntityType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">// Invalid</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Employee</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> id; </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> fname;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> lname;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Department department; </span><span style=\\\"color: #6A737D\\\">// EntityType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1045143246,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">EntityType</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> T </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">fieldName</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-1975341129,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">EntityType</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> T </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">fieldName1</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> T </span><span style=\\\"color: #D73A49\\\">&lt;</span><span style=\\\"color: #24292E\\\">fieldName2</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[2141137538,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Car</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   User owner;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">User</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Car</span><span style=\\\"color: #D73A49\\\">?</span><span style=\\\"color: #24292E\\\"> car;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1781065865,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Car</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> ownerId;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">User</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-962338408,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Car</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   User owner;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">User</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Car[] cars;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1843789114,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Car</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   CarUser[] owners;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">User</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   CarUser[] cars;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">CarUser</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id; </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   Car car;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   User user;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[88041102,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Car</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">User</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">CarUser</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #D73A49\\\">readonly</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> id; </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> userId;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">   </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> carId;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"]]"},"__N_SSG":true}