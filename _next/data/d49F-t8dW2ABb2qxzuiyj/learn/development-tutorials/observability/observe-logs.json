{"pageProps":{"frontmatter":{"title":"Observe logs","description":"See how Ballerina supports observing tracing of Ballerina programs.","keywords":"ballerina, observability, logs, elastic stack","permalink":"/learn/observe-logs/","active":"observe-logs","intro":"In Ballerina, distributed logging and analysis are supported by the Elastic Stack. Ballerina has a log module for logging into the console. To monitor the logs, the Ballerina standard output needs to be redirected to a file."},"content":"\nThis can be done by running the Ballerina service as below.\n\n```\n$ nohup bal run hello_world_service.bal > ballerina.log &\n```\n\nYou can view the logs with the command below.\n\n```\n$ tail -f ~/wso2-ballerina/workspace/ballerina.log\n```\n\n### Set up the external systems for log analytics\n\n#### Set up Elastic Stack\nThe Elastic Stack comprises the following components.\n\n1. Beats - Multiple agents that ship data to Logstash or Elasticsearch. In our context, Filebeat will ship the Ballerina logs to Logstash. Filebeat should be a container running on the same host as the Ballerina service. This is so that the log file (ballerina.log) can be mounted to the Filebeat container.\n2. Logstash - Used to process and structure the log files received from Filebeat and send them to Elasticsearch.\n3. Elasticsearch - Storage and indexing of the logs sent by Logstash.\n4. Kibana - Visualizes the data stored in Elasticsearch.\n\nElasticsearch and Kibana are provided as <a href=\"https://www.elastic.co/cloud\" target=\"_blank\">Cloud services</a>. Alternatively, Docker containers can be used to set up Elasticsearch and Kibana as well.\n\n1. Download the Docker images using the following commands.\n\n    ```\n    # Elasticsearch Image\n    $ docker pull docker.elastic.co/elasticsearch/elasticsearch:6.5.1\n    # Kibana Image\n    $ docker pull docker.elastic.co/kibana/kibana:6.5.1\n    # Filebeat Image\n    $ docker pull docker.elastic.co/beats/filebeat:6.5.1\n    # Logstash Image\n    $ docker pull docker.elastic.co/logstash/logstash:6.5.1\n    ```\n\n2. Start Elasticsearch and Kibana containers by executing the following commands.\n\n    ```\n    $ docker run -p 9200:9200 -p 9300:9300 -it -h elasticsearch --name elasticsearch docker.elastic.co/elasticsearch/elasticsearch:6.5.1\n    $ docker run -p 5601:5601 -h kibana --name kibana --link elasticsearch:elasticsearch docker.elastic.co/kibana/kibana:6.5.1\n    ```\n    \n    If you are using Linux, you may have to increase the `vm.max_map_count` for the Elasticsearch container to start. \n    Execute the following command to do that.\n    \n    ```\n    $ sudo sysctl -w vm.max_map_count=262144\n    ```\n\n3. Create a `logstash.conf` file in the `/tmp/pipeline/` directory and include the following content in the file.\n\n    ```\n    input {\n      beats {\n        port => 5044\n        }\n    }\n    filter {\n      grok  {\n        match => { \"message\" => \"%{TIMESTAMP_ISO8601:date}%{SPACE}%{WORD:logLevel}%{SPACE}\\[%{GREEDYDATA:module}\\]%{SPACE}\\-%{SPACE}%{GREEDYDATA:logMessage}\"}\n      }\n    }\n    output {\n        elasticsearch {\n            hosts => \"elasticsearch:9200\"\n            index => \"ballerina\"\n          document_type => \"ballerina_logs\"\n        }\n    }\n    ```\n    \n    Here, the 3 stages are specified in the pipeline. Input is specified as beats and listens to port 5044. \n    A Grok filter is used to structure the Ballerina logs and the output is specified to push to Elasticsearch on\n    `elasticsearch:9200`.\n\n4. Start the Logstash container by executing the following command.\n\n    ```\n    $ docker run -h logstash --name logstash --link elasticsearch:elasticsearch -it --rm -v /tmp/pipeline:/usr/share/logstash/pipeline/ -p 5044:5044 docker.elastic.co/logstash/logstash:6.5.1\n    ```\n\n5. Configure Filebeat to ship the Ballerina logs. Create a `filebeat.yml` file in the `/tmp/` directory and include the following content in the file.\n\n    ```\n    filebeat.prospectors:\n    - type: log\n      paths:\n        - /usr/share/filebeat/ballerina.log\n    output.logstash:\n      hosts: [\"logstash:5044\"]\n    ```\n    \n6. Start the Filebeat container with the following command.\n\n    ```\n    $ docker run -v /tmp/filebeat.yml:/usr/share/filebeat/filebeat.yml -v /<path-to-ballerina.log>/ballerina.log:/usr/share/filebeat/ballerina.log --link logstash:logstash docker.elastic.co/beats/filebeat:6.5.1\n    ```\n    \n    The `-v` flag is used for bind mounting, where the container will read the file from the host machine. Provide the path to the `ballerina.log` file to be bind-mounted to the filebeat container.\n\n7. Access Kibana to visualize the logs at <http://localhost:5601>. Add an index named `ballerina` and click on `Discover` to visualize the logs.\n","id":"observe-logs","sub":"observability","third":"","slug":"observability/observe-logs","codes":"[]"},"__N_SSG":true}