{"pageProps":{"frontmatter":{"layout":"ballerina-style-guide-left-nav-pages-swanlake","title":"Operators, keywords, and types","description":"The Ballerina Style Guide aims at maintaining a standard coding style among the Ballerina community. The Ballerina code formatting tools are based on this guide.","keywords":"ballerina, programming language, ballerina style guide, operators, keywords, types","active":"operators-keywords-and-types","permalink":"/learn/style-guide/operators-keywords-and-types/","intro":"The sections below include the coding conventions with respect to operators, keywords, and types."},"content":"\n## Keywords and Types\n* Do not keep spaces between the type and the pipe operator when it is in a union type (e.g., `string|int`).\n  \n    **Example,**\n\n    ```ballerina\n    type method \"POST\"|\"GET\"|\"PUT\";\n        \n    int|string variable = 0;\n    \n    function getValue(string key) returns string|error {\n        ...\n    }\n    \n    function getName() returns string|error {\n        string|error valueOrError = getValue(\"name\");\n        ...\n    }\n    ```\n\n* Do not keep spaces between the type and the optional operator `?`.\n    \n    **Example,**\n\n    ```ballerina\n    string? name;\n    ```\n\n* Avoid line breaks inside constrained types.\n  \n    **Do's**\n\n    ```ballerina\n    map<int|string> x; // map reference type\n    ```\n  \n    **Don'ts**\n\n    ```ballerina\n    map<\n        int\n        |\n        string\n    > x;\n    ```\n\n## Operators\n* Keep only a single space before and after the `=` operator.\n  \n    **Example,**\n\n    ```ballerina\n    int a = 0;\n    ```\n\n* Do not keep spaces around the semicolon `;`.\n* Do not keep spaces between the unary operator and the expression.\n\n    **Example,**\n\n    ```ballerina\n    a = -a;\n    ``` \n\n* Keep a single space before and after any `binary` or `ternary` operator.\n\n    **Example,**\n\n    ```ballerina\n    var fullName = firstName + lastName;\n    \n    string? name = isNameAvailable() ? getName() : \"Unknown\";\n    \n    var elvisOperator = name ?: \"Unknown\";\n    ```\n\n* Keep a single space before and after a compound operator such as `-=` and `+=`.\n\n    **Example,**\n\n    ```ballerina\n    name += lastName;\n    ```\n\n<div class=\"cGitButtonContainer\"><p data-button=\"iGitStarText\">\"Star\"</p><p data-button=\"iGitWatchText\">\"Watch\"</p></div>\n\n\n<style> #tree-expand-all , #tree-collapse-all, .cTocElements {display:none;} .cGitButtonContainer {padding-left: 40px;display: none;} </style>","id":"operators-keywords-and-types","sub":"source-code-dependencies","third":"style-guide","slug":"source-code-dependencies/style-guide/operators-keywords-and-types","codes":"[[1021256145,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">method</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;POST&quot;</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #032F62\\\">&quot;GET&quot;</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #032F62\\\">&quot;PUT&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> variable </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">key</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|error</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getName</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|error</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|error</span><span style=\\\"color: #24292E\\\"> valueOrError </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getValue</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;name&quot;</span><span style=\\\"color: #24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"],[-472769858,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">? name;</span></span></code></pre>\"],[-1368317418,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #D73A49\\\">|string&gt;</span><span style=\\\"color: #24292E\\\"> x; </span><span style=\\\"color: #6A737D\\\">// map reference type</span></span></code></pre>\"],[1197387051,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">map&lt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">int</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> x;</span></span></code></pre>\"],[1035735678,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> a </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">0</span><span style=\\\"color: #24292E\\\">;</span></span></code></pre>\"],[1161978373,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">a </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">-</span><span style=\\\"color: #24292E\\\">a;</span></span></code></pre>\"],[1072507927,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">var</span><span style=\\\"color: #24292E\\\"> fullName </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> firstName </span><span style=\\\"color: #D73A49\\\">+</span><span style=\\\"color: #24292E\\\"> lastName;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">? name </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">isNameAvailable</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">?</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">getName</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Unknown&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">var</span><span style=\\\"color: #24292E\\\"> elvisOperator </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> name </span><span style=\\\"color: #D73A49\\\">?:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Unknown&quot;</span><span style=\\\"color: #24292E\\\">;</span></span></code></pre>\"],[370938977,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">name </span><span style=\\\"color: #D73A49\\\">+=</span><span style=\\\"color: #24292E\\\"> lastName;</span></span></code></pre>\"]]"},"__N_SSG":true}