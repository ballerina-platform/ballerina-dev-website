{"pageProps":{"tagline":"Mapping infrastructure messages to domain objects","desc":"The Messaging Mapper maps infrastructure messages to domain objects.","category":"Messaging Endpoints","index":43,"helps":"Ballerina services facilitate the direct mapping of incoming and outgoing domain objects to JSON values. Ballerina's table data structure offers the ability to store domain objects in memory, closely resembling the functionality of SQL-based tables.","tags":["Messaging Mapper","Message Translator"],"link":"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingMapper.html","content":[{"headerCode":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/graphql;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/uuid;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Item</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> code;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> quantity;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">decimal</span><span style=\"color: #24292E\"> unitPrice;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">PurchasingRequest</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> customerId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> agentId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Item[] items;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Invoice</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">*</span><span style=\"color: #24292E\">PurchasingRequest;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> invoiceId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">decimal</span><span style=\"color: #24292E\"> total;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">table&lt;</span><span style=\"color: #24292E\">Invoice</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">key</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">invoiceId</span><span style=\"color: #24292E\">) invoices </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">table</span><span style=\"color: #24292E\"> [];</span></span>\n<span class=\"line\"></span></code></pre>","mainCode":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/api/v1</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> graphql:Listener(</span><span style=\"color: #005CC5\">8080</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">invoice</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">invoiceId</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Invoice</span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> invoices[invoiceId];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">createInvoice</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">PurchasingRequest</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">purchasingRequest</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Invoice {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        Invoice invoice </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">...</span><span style=\"color: #24292E\">purchasingRequest,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            invoiceId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> uuid:</span><span style=\"color: #6F42C1\">createType1AsString</span><span style=\"color: #24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            total</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> from </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> {unitPrice, quantity} </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> purchasingRequest.items</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                   </span><span style=\"color: #D73A49\">let</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> itemTotalPrice </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> unitPrice </span><span style=\"color: #D73A49\">*</span><span style=\"color: #24292E\"> quantity</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                   collect </span><span style=\"color: #6F42C1\">sum</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">itemTotalPrice</span><span style=\"color: #24292E\">)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        invoices.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">invoice</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> invoice;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","raw":"import ballerina/graphql;\nimport ballerina/uuid;\n\npublic type Item record {|\n    string code;\n    int quantity;\n    decimal unitPrice;\n|};\n\npublic type PurchasingRequest record {|\n    string customerId;\n    string agentId;\n    Item[] items;\n|};\n\npublic type Invoice record {|\n    *PurchasingRequest;\n    readonly string invoiceId;\n    decimal total;\n|};\n\nfinal table<Invoice> key(invoiceId) invoices = table [];\n\nservice /api/v1 on new graphql:Listener(8080) {\n\n    resource function get invoice(string invoiceId) returns Invoice? {\n        return invoices[invoiceId];\n    }\n\n    remote function createInvoice(PurchasingRequest purchasingRequest) returns Invoice {\n        Invoice invoice = {\n            ...purchasingRequest,\n            invoiceId: uuid:createType1AsString(),\n            total: from var {unitPrice, quantity} in purchasingRequest.items\n                   let var itemTotalPrice = unitPrice * quantity\n                   collect sum(itemTotalPrice)\n        };\n        invoices.add(invoice);\n        return invoice;\n    }\n}\n","name":"messaging-mapper.bal"}],"name":" Messaging Mapper"},"__N_SSG":true}