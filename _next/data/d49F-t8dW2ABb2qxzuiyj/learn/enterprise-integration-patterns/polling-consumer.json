{"pageProps":{"tagline":"Consume messages when the application is ready","desc":"Polling consumer consumes messages from a channel when the application is ready to process them.","helps":"Ballerina's concurrency model enables writing simple procedural code that is nevertheless executed in a non-blocking manner. In the below example, `sleep` does not block the underlying thread. Other Ballerina concurrency constructs, such as `wait`, behave similarly.","category":"Messaging Endpoints","index":45,"tags":["Polling Consumer","Durable Subscriber","Message"],"link":"https://www.enterpriseintegrationpatterns.com/patterns/messaging/PollingConsumer.html","content":[{"headerCode":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/http;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/lang.runtime;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">enum</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Status</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">CREATED</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">CAPTURED</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">DENIED</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">PENDING</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">PaypalResponse</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> id;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Status status;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Amount amount;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Payee payee;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Amount</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> value;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> currency_code;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Payee</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> email_address;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> merchant_id;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Client paypalClient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #032F62\">&quot;http://api-m.paypal.com.balmock.io&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span></code></pre>","mainCode":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/api/v1</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">8080</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">payment</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">paymentId</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">foreach </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> _ </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\"> ..</span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">10</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            PaypalResponse response </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> paypalClient</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">v2</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">payments</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">authorizations</span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\">[paymentId]();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> response.status </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> CREATED </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> response.status </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> PENDING {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                runtime</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">sleep</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">5</span><span style=\"color: #24292E\">); </span><span style=\"color: #6A737D\">// sleep does not block the underlying thread</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> response.status;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Payment timed out&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","raw":"import ballerina/http;\nimport ballerina/lang.runtime;\n\nenum Status {\n    CREATED,\n    CAPTURED,\n    DENIED,\n    PENDING\n}\n\ntype PaypalResponse record {|\n    string id;\n    Status status;\n    Amount amount;\n    Payee payee;\n|};\n\ntype Amount record {|\n    string value;\n    string currency_code;\n|};\n\ntype Payee record {|\n    string email_address;\n    string merchant_id;\n|};\n\nfinal http:Client paypalClient = check new (\"http://api-m.paypal.com.balmock.io\");\n\nservice /api/v1 on new http:Listener(8080) {\n    resource function get payment(string paymentId) returns string|error {\n        foreach int _ in 0 ..< 10 {\n            PaypalResponse response = check paypalClient->/v2/payments/authorizations/[paymentId]();\n            if response.status == CREATED || response.status == PENDING {\n                runtime:sleep(5); // sleep does not block the underlying thread\n            } else {\n                return response.status;\n            }\n        }\n        return error(\"Payment timed out\");\n    }\n}\n","name":"polling-consumer.bal"}],"name":" Polling Consumer"},"__N_SSG":true}