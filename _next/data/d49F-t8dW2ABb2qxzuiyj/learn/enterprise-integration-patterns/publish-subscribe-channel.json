{"pageProps":{"name":"Publish-Subscribe Channel","category":"Messaging Channels","tagline":"Delivers a copy of a particular event to each receiver","index":7,"desc":"Publish-Subscribe Channel delivers a copy of a particular event to each receiver.","helps":"Ballerina has a rich set of packages to interact with various messaging protocols. These include protocols that support publish-subscribe semantics such as Kafka, MQTT, and WebSocket.","tags":["Publish-Subscribe Channel","Message Channel","Message Endpoint","Message Router"],"link":"https://www.enterpriseintegrationpatterns.com/patterns/messaging/PublishSubscribeChannel.html","files":["publisher.bal","subscriber.bal"],"content":[{"headerCode":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/http;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerinax/kafka;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">MatchEvent</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> matchId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> time;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> event;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> description;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span></code></pre>","mainCode":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/api</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">8080</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">private</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Producer kafkaPublisher;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">init</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.kafkaPublisher </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">DEFAULT_URL);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">cricket</span><span style=\"color: #24292E\">/matches/[</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">matchId</span><span style=\"color: #24292E\">]/event(</span><span style=\"color: #E36209\">MatchEvent</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">event</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.kafkaPublisher</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">send</span><span style=\"color: #24292E\">({</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            topic</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> matchId,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            value</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> event</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        });</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","raw":"import ballerina/http;\nimport ballerinax/kafka;\n\ntype MatchEvent record {|\n    string matchId;\n    string time;\n    string event;\n    string description;\n|};\n\nservice /api on new http:Listener(8080) {\n\n    private final kafka:Producer kafkaPublisher;\n\n    function init() returns error? {\n        self.kafkaPublisher = check new (kafka:DEFAULT_URL);\n    }\n\n    resource function post cricket/matches/[string matchId]/event(MatchEvent event) returns error? {\n        check self.kafkaPublisher->send({\n            topic: matchId,\n            value: event\n        });\n    }\n}\n","name":"publisher.bal"},{"headerCode":"","mainCode":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/uuid;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerina/websocket;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> ballerinax/kafka;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/ws</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> websocket:Listener(</span><span style=\"color: #005CC5\">8081</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">matchId</span><span style=\"color: #24292E\">]() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Service</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">MatchUpdateService</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">matchId</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">service class</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">MatchUpdateService</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">*</span><span style=\"color: #24292E\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Service;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">private</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Consumer kafkaConsumer;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">init</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">matchId</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.kafkaConsumer </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">DEFAULT_URL, {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            groupId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> string </span><span style=\"color: #032F62\">`realtime-web-ui-group-${</span><span style=\"color: #24292E\">uuid</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">createType1AsString</span><span style=\"color: #032F62\">()</span><span style=\"color: #032F62\">}`</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            topics</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [matchId]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        });</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onOpen</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">while</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">true</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">anydata</span><span style=\"color: #24292E\">[] matchDetails </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.kafkaConsumer</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">pollPayload</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> matchDetail </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> matchDetails</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">do</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> caller</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">writeMessage</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">matchDetail</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","raw":"import ballerina/uuid;\nimport ballerina/websocket;\nimport ballerinax/kafka;\n\nservice /ws on new websocket:Listener(8081) {\n\n    resource function get [string matchId]() returns websocket:Service|error {\n        return new MatchUpdateService(matchId);\n    }\n}\n\nisolated service class MatchUpdateService {\n    *websocket:Service;\n    private final kafka:Consumer kafkaConsumer;\n\n    public function init(string matchId) returns error? {\n        self.kafkaConsumer = check new (kafka:DEFAULT_URL, {\n            groupId: string `realtime-web-ui-group-${uuid:createType1AsString()}`,\n            topics: [matchId]\n        });\n    }\n\n    isolated remote function onOpen(websocket:Caller caller) returns error? {\n        while true {\n            anydata[] matchDetails = check self.kafkaConsumer->pollPayload(1);\n            from var matchDetail in matchDetails\n            do {\n                check caller->writeMessage(matchDetail);\n            };\n        }\n    }\n}\n","name":"subscriber.bal"}]},"__N_SSG":true}