{"pageProps":{"frontmatter":{"title":"GraphQL API Designer","description":"The GraphQL API Designer streamlines the visual creation of GraphQL APIs in Ballerina. This powerful tool simplifies understanding and navigating of complex GraphQL services and lets you browse through them effortlessly without examining the code directly.","keywords":"ballerina, vs code extension, graphql, service, api, design","intro":"The GraphQL API Designer streamlines the visual creation of GraphQL APIs in Ballerina. This powerful tool simplifies understanding and navigating of complex GraphQL services and lets you browse through them effortlessly without examining the code directly."},"content":"\n## Open the GraphQL API Designer \n\nUse the source code below to create a GraphQL service using the code editor and click on the **Visualize** codeLens, which is placed above the service. \n\n```ballerina\nimport ballerina/graphql;\n\npublic type Profile record {|\n    string name;\n    int age;\n    Address address;\n|};\n\npublic type Address record {|\n    string number;\n    string street;\n    string city;\n|};\n\nservice /graphql on new graphql:Listener(9090) {\n\n    // A resource method with the `get` accessor inside a `graphql:Service` represents a field in the\n    // root `Query` type.\n    resource function get greeting() returns string {\n        return \"Hello, World\";\n    }\n\n}\n```\n\n<img src=\"/learn/images/vs-code-extension/visual-programming/graphql-designer/visualize.gif\" class=\"cInlineImage-full\"/>\n\n## Explore the GraphQL API Designer \n\nThe GraphQL API Designer provides the following features.\n\n- Add GraphQL queries, mutations, and subscription operations\n- Create and edit constructs such as records and service classes\n- Navigate to the specific source code\n\n## Use the GraphQL API Designer functionalities\n\nYou can perform the above functionalities using the GraphQL API Designer as follows.\n\n### Add a GraphQL query\n\nAdd a query to the GraphQL service with a `Profile` record as the output object.\n\n>**Info:** Hover over each field to view the provided **Edit**, **Delete**, and **Design** GraphQL operations.\n\n<img src=\"/learn/images/vs-code-extension/visual-programming/graphql-designer/query-creation.gif\" class=\"cInlineImage-full\"/> \n\n### Access the query source\n\nNavigate to the source code of the newly created `profile` query and update the resource body. Use **Ctrl + Click** shortcut on the specific field to navigate to the respective source code. \n\n<img src=\"/learn/images/vs-code-extension/visual-programming/graphql-designer/navigate.gif\" class=\"cInlineImage-full\"/>\n\n### Create a record construct\n\nCreate a record within the GraphQL API Designer itself.\n\n>**Info:** You can use this same approach to create service classes as well.\n\n<img src=\"/learn/images/vs-code-extension/visual-programming/graphql-designer/add-new-construct.gif\" class=\"cInlineImage-full\"/>\n","id":"graphql-api-designer","sub":"","third":"","slug":"graphql-api-designer","codes":"[[-165862299,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">import</span><span style=\\\"color: #24292E\\\"> ballerina/graphql;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Profile</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> age;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    Address address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Address</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> number;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> street;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> city;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">service</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">/graphql</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">on</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">new</span><span style=\\\"color: #24292E\\\"> graphql:Listener(</span><span style=\\\"color: #005CC5\\\">9090</span><span style=\\\"color: #24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\">// A resource method with the `get` accessor inside a `graphql:Service` represents a field in the</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\">// root `Query` type.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">resource</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">get</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">greeting</span><span style=\\\"color: #24292E\\\">() </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">        </span><span style=\\\"color: #D73A49\\\">return</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;Hello, World&quot;</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">}</span></span></code></pre>\"]]"},"__N_SSG":true}