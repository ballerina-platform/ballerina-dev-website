{"pageProps":{"frontmatter":{},"content":"# Specification: Ballerina Protobuf Library\n\n_Owners_: @daneshk @MadhukaHarith92  \n_Reviewers_: @daneshk  \n_Created_: 2021/11/17  \n_Updated_: 2022/02/08  \n_Edition_: Swan Lake\n\n## Introduction\nThis is the specification for the Protobuf standard library of [Ballerina language](https://ballerina.io/), which provides APIs to represent a set of pre-defined protobuf types.\n\nThe Protobuf library specification has evolved and may continue to evolve in the future. The released versions of the specification can be found under the relevant Github tag.\n\nIf you have any feedback or suggestions about the library, start a discussion via a [GitHub issue](https://github.com/ballerina-platform/ballerina-standard-library/issues) or in the [Discord server](https://discord.gg/ballerinalang). Based on the outcome of the discussion, the specification and implementation can be updated. Community feedback is always welcome. Any accepted proposal, which affects the specification is stored under `/docs/proposals`. Proposals under discussion can be found with the label `type/proposal` in GitHub.\n\nThe conforming implementation of the specification is released and included in the distribution. Any deviation from the specification is considered a bug.\n\n## Contents\n\n1. [Overview](#1-overview)\n2. [Wrappers](#2-wrappers)\n    * 2.1. [String](#21-string)\n    * 2.2. [Int](#22-int)\n    * 2.3. [Float](#23-float)\n    * 2.4. [boolean](#24-boolean)\n    * 2.5. [bytes](#25-bytes)\n3. [Duration](#3-duration)\n4. [Struct](#4-struct)\n5. [Timestamp](#5-timestamp)\n6. [Empty](#6-empty)\n7. [Any](#7-any)\n\n## 1. Overview\nThis specification elaborates on the pre-defined record types and functions available in the Protobuf library.\n\n## 2. Wrappers \nThis provides APIs to represent `google/protobuf/wrappers.proto`. The protobuf module supports 5 wrapper types; `string`, `int`, `float`, `boolean`, and `bytes`.\n\n### 2.1. String type\nThe `ContextStringStream` is a context representation record of a string stream.\n```ballerina\npublic type ContextStringStream record {|\n    stream<string, error?> content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextString` is a context representation record of a string value.\n```ballerina\npublic type ContextString record {|\n    string content;\n    map<string|string[]> headers;\n|};\n```\n\n### 2.2. Integer type\nThe `ContextIntStream` is a context representation record of an integer stream.\n```ballerina\npublic type ContextIntStream record {|\n    stream<int, error?> content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextInt` is a context representation record of an integer value.\n```ballerina\npublic type ContextInt record {|\n    int content;\n    map<string|string[]> headers;\n|};\n```\n\n### 2.3. Float type\nThe `ContextFloatStream` is a context representation record of a float stream.\n```ballerina\npublic type ContextFloatStream record {|\n    stream<float, error?> content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextFloat` is a context representation record of a float value.\n```ballerina\npublic type ContextFloat record {|\n    float content;\n    map<string|string[]> headers;\n|};\n```\n\n### 2.4. Boolean type\nThe `ContextBooleanStream` is a context representation record of a boolean stream.\n```ballerina\npublic type ContextBooleanStream record {|\n    stream<boolean, error?> content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextBoolean` is a context representation record of a boolean value.\n```ballerina\npublic type ContextBoolean record {|\n    boolean content;\n    map<string|string[]> headers;\n|};\n```\n\n### 2.5. Bytes type\nThe `ContextBytesStream` is a context representation record of a byte array stream.\n```ballerina\npublic type ContextBytesStream record {|\n    stream<byte[], error?> content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextBytes` is a context representation record of a byte array.\n```ballerina\npublic type ContextBytes record {|\n    byte[] content;\n    map<string|string[]> headers;\n|};\n```\n\n## 3. Duration \nThis provides APIs to represent `google/protobuf/duration.proto`.\n\nThe `ContextDurationStream` is a context representation record of a duration stream.\n```ballerina\npublic type ContextDurationStream record {|\n    stream<time:Seconds, error?> content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextDuration` is a context representation record of a duration. The content is a time duration represented using `time:Seconds`. The `time:Seconds` is a subtype of Ballerina `decimal` type.\n```ballerina\npublic type ContextDuration record {|\n    time:Seconds content;\n    map<string|string[]> headers;\n|};\n```\n\n## 4. Struct\nThis provides APIs to represent `google/protobuf/struct.proto`.\n\nThe `ContextStructStream` is a context representation record of a struct stream.\n```ballerina\npublic type ContextStructStream record {|\n    stream<map<anydata>, error?> content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextStruct` is a representation record of a struct.\n```ballerina\npublic type ContextStruct record {|\n    map<anydata> content;\n    map<string|string[]> headers;\n|};\n```\n\n## 5. Timestamp\nThis provides APIs to represent `google/protobuf/timestamp.proto`.\n\nThe `ContextTimestampStream` is a context representation record of a timestamp stream.\n```ballerina\npublic type ContextTimestampStream record {|\n    stream<time:Utc, error?> content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextTimestamp` is a representation record of a timestamp.\n```ballerina\npublic type ContextTimestamp record {|\n    time:Utc content;\n    map<string|string[]> headers;\n|};\n```\n\n## 6. Empty\nThis provides APIs to represent `google/protobuf/empty.proto`.\n\nThe `ContextNil` is a representation record of a gRPC Empty message.\n```ballerina\npublic type ContextNil record {|\n    map<string|string[]> headers;\n|};\n```\n\n`Empty` represents an empty record.\n```ballerina\npublic type Empty record {|\n|};\n```\n\n## 7. Any\n\nThis provides APIs to represent `google/protobuf/any.proto`.\n\nThe `Any` record is the Ballerina representation of the protobuf `Any` type. The `typeUrl` is the unique identifier of the serialized message, and the value contains the serialized message content. The type of the `value` entry defines as `ValueType`, which represent all the Ballerina types that support as subtypes of `Any`.\n\n```ballerina\npublic type Any record {|\n    string typeUrl;\n    ValueType value;\n|};\n```\n\nThere are two APIs to serialize and deserialize the `Any` type values as follows.\n\n```ballerina\n# Generate and return the generic `'any:Any` record that used to represent protobuf `Any` type.\n#\n# + message - The record or the scalar value to be packed as Any type\n# + return - Any value representation of the given message  \npublic isolated function pack(ValueType message) returns Any;\n\n# Unpack and return the specified Ballerina value\n#\n# + anyValue - Any value to be unpacked\n# + targetTypeOfAny - Type descriptor of the return value\n# + return - Return a value of the given type  \npublic isolated function unpack(Any anyValue, ValueTypeDesc targetTypeOfAny = <>) returns targetTypeOfAny|'any:Error;\n```\n\nThe `ContextAny` is a context representation record of `Any` Ballerina record.\n```ballerina\npublic type ContextAny record {|\n    Any content;\n    map<string|string[]> headers;\n|};\n```\n\nThe `ContextAnyStream` is the stream representation that contains a stream of `Any` records as the content.\n```ballerina\npublic type ContextAnyStream record {|\n    stream<Any, error?> content;\n    map<string|string[]> headers;\n|};\n```\n\n","codeSnippets":"[[-1350510482,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextStringStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #D73A49\\\">error?&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[960388451,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextString</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[555209448,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextIntStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;</span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #D73A49\\\">error?&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[21995929,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextInt</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[558769736,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextFloatStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;</span><span style=\\\"color: #005CC5\\\">float</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #D73A49\\\">error?&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1033200705,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextFloat</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">float</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[556821576,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextBooleanStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;</span><span style=\\\"color: #005CC5\\\">boolean</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #D73A49\\\">error?&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-132043609,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextBoolean</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">boolean</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1606689823,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextBytesStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;</span><span style=\\\"color: #005CC5\\\">byte</span><span style=\\\"color: #24292E\\\">[], </span><span style=\\\"color: #D73A49\\\">error</span><span style=\\\"color: #24292E\\\">?</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[283240580,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextBytes</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">byte</span><span style=\\\"color: #24292E\\\">[] content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[263917266,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextDurationStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;</span><span style=\\\"color: #24292E\\\">time</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Seconds, </span><span style=\\\"color: #D73A49\\\">error?&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1840718939,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextDuration</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    time</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Seconds content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-183394775,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextStructStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;map&lt;</span><span style=\\\"color: #005CC5\\\">anydata</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #D73A49\\\">error?&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[726415568,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextStruct</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">anydata</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1314135495,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextTimestampStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;</span><span style=\\\"color: #24292E\\\">time</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Utc, </span><span style=\\\"color: #D73A49\\\">error?&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[1733830818,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextTimestamp</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    time</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Utc content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1909493732,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextNil</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-878376866,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Empty</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-1705673279,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Any</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> typeUrl;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    ValueType value;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-2101778880,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># Generate and return the generic `&#39;any:Any` record that used to represent protobuf `Any` type.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">message</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">The record or the scalar value to be packed as Any type</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">return</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">Any value representation of the given message  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">isolated</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">pack</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">ValueType</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">message</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> Any;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># Unpack and return the specified Ballerina value</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">anyValue</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">Any value to be unpacked</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">targetTypeOfAny</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">Type descriptor of the return value</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># </span><span style=\\\"color: #D73A49\\\">+ </span><span style=\\\"color: #24292E\\\">return</span><span style=\\\"color: #D73A49\\\"> - </span><span style=\\\"color: #6A737D\\\">Return a value of the given type  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">isolated</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">function</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">unpack</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">Any</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">anyValue</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #E36209\\\">ValueTypeDesc</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #E36209\\\">targetTypeOfAny</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">&lt;&gt;</span><span style=\\\"color: #24292E\\\">) </span><span style=\\\"color: #D73A49\\\">returns</span><span style=\\\"color: #24292E\\\"> targetTypeOfAny</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">&#39;</span><span style=\\\"color: #D73A49\\\">any:</span><span style=\\\"color: #24292E\\\">Error;</span></span></code></pre>\"],[1707255871,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextAny</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    Any content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[1313186984,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">ContextAnyStream</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">stream&lt;</span><span style=\\\"color: #24292E\\\">Any, </span><span style=\\\"color: #D73A49\\\">error?&gt;</span><span style=\\\"color: #24292E\\\"> content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> headers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"]]"},"__N_SSG":true}