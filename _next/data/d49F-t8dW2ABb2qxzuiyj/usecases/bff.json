{"pageProps":{"samples":{"client-auth":{"frontmatter":{"title":"Securely interact with internal/external services","description":"Ballerina back-ends can securely call services with the necessary security features such as client-side OAuth2, mutual TLS, and JWT-encapsulated user data.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/securely_consume_services_from_backends","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/logistics</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">cargos</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Cargo</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">cargo</span><span style=\"color: #24292E\">) </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http:InternalServerError {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        cargoTable.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">cargo</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Client serviceClient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getServiceClient</span><span style=\"color: #24292E\">(cargo.cargoType);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Response</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> res </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> serviceClient</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;/shipments&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">cargo</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> res </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Response &amp;&amp; res.statusCode </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">202</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Successfully submitted the shipment&quot;</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">InternalServerError</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: </span><span style=\"color: #032F62\">&quot;Error occurred while submitting the shipment&quot;</span><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">cargos</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Cargo[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> cargoTable.</span><span style=\"color: #6F42C1\">toArray</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"constraint-validation":{"frontmatter":{"title":"Validate payload constraints in web back-ends","description":"Ballerina's inherent JSON capabilities enable the direct mapping of JSON data into Ballerina records, incorporating functionalities such as constraint validations.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/validate_payloads_constraints_in_web_backends","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> id;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">constraint</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">String</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        pattern</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            value</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> re </span><span style=\"color: #032F62\">`C-[0-9]{3}`</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            message</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Customer id should be in the format C-XXX&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> customerId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">? shipId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> date;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    OrderStatus status;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">constraint</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">Int</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        minValue</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {value: </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">, message</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Quantity should be greater than one&quot;</span><span style=\"color: #24292E\">},</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        maxValue</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {value: </span><span style=\"color: #005CC5\">10</span><span style=\"color: #24292E\">, message</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;Quantity should not exceed 10&quot;</span><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> quantity;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">orderRequest</span><span style=\"color: #24292E\">)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> orders.</span><span style=\"color: #6F42C1\">hasKey</span><span style=\"color: #24292E\">(orderRequest.id) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> string </span><span style=\"color: #032F62\">`Order id already exists.`</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        orders.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">orderRequest</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orderRequest;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"deployment":{"frontmatter":{"title":"Develop flexible & scalable back-ends","description":"Ballerina-based back-ends offer the flexibility to manage varying loads. Components can be deployed and scaled independently, providing flexibility and scalability, particularly on platforms like Kubernetes.<br><br>In addition, Ballerina back-ends can be instantly taken to production by deploying in Choreo, a comprehensive app development platform with pre-built CI/CD pipelines, multi-environment support, and robust monitoring for Ballerina apps.","url":"https://wso2.com/choreo/internal-developer-platform","image":"images/choreo-ipaas-image-v2.png"},"code":""},"graphql":{"frontmatter":{"title":"Efficiently expose complex data with GraphQL","description":"With Ballerina's built-in GraphQL functionality, developers can simply expose Ballerina records via GraphQL services, facilitating querying and selectively fetching complex data structures.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/expose_complex_data_with_graphql","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> id;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> customerId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">? shipId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Address</span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\"> shippingAddress;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> date;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    OrderStatus status;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> quantity;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Address</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> number;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> street;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> city;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> state;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> graphql:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">? </span><span style=\"color: #E36209\">customerId</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> customerId </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orders.</span><span style=\"color: #6F42C1\">toArray</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> Order entry </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">where</span><span style=\"color: #24292E\"> entry.customerId </span><span style=\"color: #D73A49\">==</span><span style=\"color: #24292E\"> customerId</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">select</span><span style=\"color: #24292E\"> entry;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"json-support":{"frontmatter":{"title":"Streamline back-end data handling","description":"Ballerina has built-in support for multi-part payloads, constraint validations, transformations, and, enrichments for working with complex payloads.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/handle-mulipart-form-data","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/crm</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">customers</span><span style=\"color: #24292E\">/[</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">customerId</span><span style=\"color: #24292E\">]/agreement() </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">byte</span><span style=\"color: #24292E\">[]</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">InternalServerError {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">byte</span><span style=\"color: #24292E\">[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> agreementForm </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getAgreementForm</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">customerId</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> agreementForm </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">INTERNAL_SERVER_ERROR;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> agreementForm;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">customers</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Request request) </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Created</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http:InternalServerError {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">do</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            mime</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Entity[] bodyParts </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> request.</span><span style=\"color: #6F42C1\">getBodyParts</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> formData </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> bodyParts[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].</span><span style=\"color: #6F42C1\">getText</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            CustomerData data </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> formData.</span><span style=\"color: #6F42C1\">fromJsonStringWithType</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">byte</span><span style=\"color: #24292E\">[] image </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> bodyParts[</span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">].</span><span style=\"color: #6F42C1\">getByteArray</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">byte</span><span style=\"color: #24292E\">[] agreemntForm </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> bodyParts[</span><span style=\"color: #005CC5\">2</span><span style=\"color: #24292E\">].</span><span style=\"color: #6F42C1\">getByteArray</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">registerCustomer</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">data</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">agreemntForm</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">image</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">CREATED;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        } </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">fail</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">INTERNAL_SERVER_ERROR;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"persist":{"frontmatter":{"title":"Automate data access with Ballerina","description":"Ballerina's persistence features offer a straightforward way to create a data access layer for any complex application by providing a simplified interface for CRUD operations.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/persistently-store-data-using-Ballerina","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #24292E\">Client dbClient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[]</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> Order entry </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orderDatabase</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\">)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">select</span><span style=\"color: #24292E\"> entry;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">orderEntry</span><span style=\"color: #24292E\">)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http:InternalServerError</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http:BadRequest {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        orderEntry.cargoId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getCargoId</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">[]</span><span style=\"color: #D73A49\">|persist:</span><span style=\"color: #24292E\">Error result </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> orderDatabase</span><span style=\"color: #D73A49\">-&gt;/</span><span style=\"color: #24292E\">orders.</span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\">([orderEntry]);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> result </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">OK;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        } </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> result </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> persist</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ConstraintViolationError {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: string </span><span style=\"color: #032F62\">`Invalid cargo id: ${</span><span style=\"color: #24292E\">orderEntry</span><span style=\"color: #032F62\">.</span><span style=\"color: #24292E\">cargoId</span><span style=\"color: #032F62\">}`</span><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">INTERNAL_SERVER_ERROR;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"rest-support":{"frontmatter":{"title":"Simplify back-end development with native REST features","description":"Ballerina provides REST features like path/query parameters, HTTP headers, status codes, and complex JSON structures as first-class citizens within the language itself.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/restful-order-service","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order[] {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orders.</span><span style=\"color: #6F42C1\">toArray</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">/[</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">id</span><span style=\"color: #24292E\">]() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">NotFound {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orders[id] </span><span style=\"color: #D73A49\">?:</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">NotFound</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> string </span><span style=\"color: #032F62\">`Order not found. Order ID: ${</span><span style=\"color: #24292E\">id</span><span style=\"color: #032F62\">}`</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">orderRequest</span><span style=\"color: #24292E\">)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> Order</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> orders.</span><span style=\"color: #6F42C1\">hasKey</span><span style=\"color: #24292E\">(orderRequest.id) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">BadRequest</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> string </span><span style=\"color: #032F62\">`Order id already exists.`</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        orders.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">orderRequest</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> orderRequest;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"security":{"frontmatter":{"title":"Comprehensive security for web back-ends","description":"Ballerina-based back-ends can simplify securing sensitive data during transit, validating server identity, managing CORS, and enforcing message type restrictions via annotations.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/comprehensive-security-for-web-backends","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #24292E\">@</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ServiceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    cors</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        allowOrigins</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;http://localhost:3000&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;http://www.hmart.com&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        allowHeaders</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;REQUEST_ID&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        exposeHeaders</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;RESPONSE_ID&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        maxAge</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">84900</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #E36209\">secureSocket</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">key:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            certFile</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;../path/to/cert&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            keyFile</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;../path/to/private-key&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ResourceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        cors</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            allowOrigins</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;http://localhost:3000&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;http://www.hmart.com&quot;</span><span style=\"color: #24292E\">],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            allowCredentials</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">true</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">orderEntry</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        orderTable.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">orderEntry</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: </span><span style=\"color: #032F62\">&quot;Order submitted successfully&quot;</span><span style=\"color: #24292E\">}};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"server-auth":{"frontmatter":{"title":"Simplify user authentications and authorizations","description":"Ballerina apps can be seamlessly integrated with any OAuth2-compatible identity provider using a simple set of annotations.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/connect_with_asgardeo_for_building_secure_services","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #24292E\">@</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ServiceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6F42C1\">jwtValidatorConfig</span><span style=\"color: #24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6F42C1\">issuer</span><span style=\"color: #24292E\">: issuer,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6F42C1\">audience</span><span style=\"color: #24292E\">: audience,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6F42C1\">signatureConfig</span><span style=\"color: #24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6F42C1\">jwksConfig</span><span style=\"color: #24292E\">: {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #6F42C1\">url</span><span style=\"color: #24292E\">: jwksUrl</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6F42C1\">scopes</span><span style=\"color: #24292E\">: [</span><span style=\"color: #032F62\">&quot;order_insert&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;order_read&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;cargo_insert&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;cargo_read&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    ]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/sales</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> http:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #005CC5\">http</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ResourceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            scopes</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span><span style=\"color: #032F62\">&quot;order_insert&quot;</span><span style=\"color: #24292E\">]</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">post</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">orders</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">orders</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        orderTable.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">orders</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">http</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Ok</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">{body</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {message: </span><span style=\"color: #032F62\">&quot;Order submitted successfully&quot;</span><span style=\"color: #24292E\">}};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"websockets":{"frontmatter":{"title":"Expose real-time data to front-ends via webSockets","description":"Ballerina allows real-time data to be streamed just by implementing a service. This comes with enterprise-ready security features like TLS, mutual TLS, and OAuth2.","url":"https://github.com/ballerina-guides/bff-samples/tree/main/exposing-realtime-data-using-websockets","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/logistics</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> websocket:Listener(</span><span style=\"color: #005CC5\">9091</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">vehicles</span><span style=\"color: #24292E\">/[</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">vehicleId</span><span style=\"color: #24292E\">]() </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Service {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">LocationService</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">vehicleId</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">distinct</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">service class</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">LocationService</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">*</span><span style=\"color: #24292E\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Service;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onOpen</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Create a new strand and allocate it to send the locations</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        _ </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">start</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.</span><span style=\"color: #6F42C1\">routeLocationFromServerToClient</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">caller</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.vehicleId);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">routeLocationFromServerToClient</span><span style=\"color: #24292E\">(</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller, </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">vehicleId</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">while</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">true</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            Location currentLocation </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                latitude</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> random:</span><span style=\"color: #6F42C1\">createIntInRange</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">668700</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">1246700</span><span style=\"color: #24292E\">) * </span><span style=\"color: #005CC5\">1.0</span><span style=\"color: #24292E\"> </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                        </span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">10000.0</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                longitude</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> random:</span><span style=\"color: #6F42C1\">createIntInRange</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">258400</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">493800</span><span style=\"color: #24292E\">) * </span><span style=\"color: #005CC5\">1.0</span><span style=\"color: #24292E\"> </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                        </span><span style=\"color: #D73A49\">/</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">10000.0</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> caller</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">writeMessage</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">currentLocation</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            runtime</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">sleep</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">3</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"}}},"__N_SSG":true}