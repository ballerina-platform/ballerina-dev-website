{"pageProps":{"samples":{"email":{"frontmatter":{"title":"Automated responding to emails","description":"Ballerina simplifies real-time email handling by offering abstractions and connectors for seamless integration. It supports SMTP, IMAP, and POP3, and even enables integration with ChatGPT for advanced email automation workflows, adding sophistication to your communication processes.","url":"https://ballerina.io/learn/by-example/receive-email-using-service/","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> username </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> password </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">listener</span><span style=\"color: #24292E\"> email</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ImapListener emailListener </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ({</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    host</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;imap.email.com&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    username,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    password</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;observer&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> emailListener {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// When an email is successfully received, the `onMessage` method is called.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onMessage</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">email</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Message email) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printInfo</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Received an email&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">subject</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> email.subject, </span><span style=\"color: #E36209\">content</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> email?.body);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// When an error occurs during the email poll operations, the `onError` method is called.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onError</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">email</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error emailError) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printError</span><span style=\"color: #24292E\">(emailError.</span><span style=\"color: #6F42C1\">message</span><span style=\"color: #24292E\">(), </span><span style=\"color: #E36209\">stackTrace</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> emailError.</span><span style=\"color: #6F42C1\">stackTrace</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// When the listener is closed, the `onClose` method is called.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onClose</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">email</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error? </span><span style=\"color: #E36209\">closeError</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> closeError </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> email</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printInfo</span><span style=\"color: #24292E\">(closeError.</span><span style=\"color: #6F42C1\">message</span><span style=\"color: #24292E\">(), </span><span style=\"color: #E36209\">stackTrace</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> closeError.</span><span style=\"color: #6F42C1\">stackTrace</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"file":{"frontmatter":{"title":"Files, files as events?","description":"Ballerina enhances file transfer with FTP listeners, reacting to events on servers. SFTP and FTPS options ensure security. Seamlessly integrate file transfer with Ballerina's secure functionality.","url":"https://ballerina.io/learn/by-example/ftp-service-send-file/","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> username </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">configurable</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> password </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">listener</span><span style=\"color: #24292E\"> ftp</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Listener fileListener </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ({</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    host</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;ftp.example.com&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        credentials</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            username,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            password</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    },</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #E36209\">path</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;/home/in&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #E36209\">fileNamePattern</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;(.*).txt&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> fileListener {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onFileChange</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">ftp</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">WatchEvent &amp; </span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> event, </span><span style=\"color: #E36209\">ftp</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller) </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">foreach </span><span style=\"color: #24292E\">ftp</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">FileInfo addedFile </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> event.addedFiles {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">stream&lt;</span><span style=\"color: #24292E\">io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Block, io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error?</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> fileStream </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">fileReadBlocksAsStream</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;./local/appendFile.txt&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">7</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> caller</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">append</span><span style=\"color: #24292E\">(addedFile.path, </span><span style=\"color: #E36209\">fileStream</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> fileStream.</span><span style=\"color: #6F42C1\">close</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"graphql":{"frontmatter":{"title":"GraphQL subscription","description":"Ballerina simplifies GraphQL subscriptions, allowing easy event streaming to frontend applications, enabling effortless event subscriptions and delivery to popular clients.","url":"https://github.com/ballerina-platform/module-ballerina-graphql/tree/master/examples/news_alerts","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/news</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> graphql:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">publish</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">NewsUpdate</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">update</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> NewsRecord</span><span style=\"color: #D73A49\">|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">lock</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> publisherTable.</span><span style=\"color: #6F42C1\">hasKey</span><span style=\"color: #24292E\">(update.publisherId) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">produceNews</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">update</span><span style=\"color: #24292E\">).</span><span style=\"color: #6F42C1\">cloneReadOnly</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Invalid publisher&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">subscribe</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">news</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">userId</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">Agency</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">agency</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">stream&lt;</span><span style=\"color: #24292E\">News</span><span style=\"color: #D73A49\">&gt;|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">stream&lt;</span><span style=\"color: #24292E\">News</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> newsStream;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">lock</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> userTable.</span><span style=\"color: #6F42C1\">hasKey</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">userId</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                NewsStream newsStreamGenerator </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">userId</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">agency</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                newsStream </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">newsStreamGenerator</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;User not registered&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> newsStream;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"grpc":{"frontmatter":{"title":"RPC, why not gRPC?","description":"Ballerina simplifies gRPC event streaming by bridging the gap between the service definition and code generation. You can effortlessly leverage gRPC's power for seamless data streaming with Ballerina.","url":"https://github.com/ballerina-platform/module-ballerina-grpc/tree/master/examples/route-guide","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Rectangle</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Point lo </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {};</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Point hi </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {};</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Feature</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> name </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;&quot;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    Point location </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {};</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Point</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span><span style=\"color: #D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> latitude </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> longitude </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">@</span><span style=\"color: #005CC5\">grpc</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">ServiceDescriptor</span><span style=\"color: #24292E\"> {descriptor</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> ROOT_DESCRIPTOR, descMap</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getDescriptorMap</span><span style=\"color: #24292E\">()}</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;RouteGuide&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> grpc:Listener(</span><span style=\"color: #005CC5\">9000</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ListFeatures</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Rectangle</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">rectangle</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">stream&lt;</span><span style=\"color: #24292E\">Feature, grpc</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error?</span><span style=\"color: #D73A49\">&gt;|error</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> left </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">int</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">min</span><span style=\"color: #24292E\">(rectangle.lo.longitude, rectangle.hi.longitude);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> right </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">int</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">max</span><span style=\"color: #24292E\">(rectangle.lo.longitude, rectangle.hi.longitude);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> top </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">int</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">max</span><span style=\"color: #24292E\">(rectangle.lo.latitude, rectangle.hi.latitude);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> bottom </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">int</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">min</span><span style=\"color: #24292E\">(rectangle.lo.latitude, rectangle.hi.latitude);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        Feature[] selectedFeatures </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">var</span><span style=\"color: #24292E\"> feature </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> FEATURES</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">where</span><span style=\"color: #24292E\"> feature.name </span><span style=\"color: #D73A49\">!=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">where</span><span style=\"color: #24292E\"> feature.location.longitude </span><span style=\"color: #D73A49\">&gt;=</span><span style=\"color: #24292E\"> left</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">where</span><span style=\"color: #24292E\"> feature.location.longitude </span><span style=\"color: #D73A49\">&lt;=</span><span style=\"color: #24292E\"> right</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">where</span><span style=\"color: #24292E\"> feature.location.latitude </span><span style=\"color: #D73A49\">&gt;=</span><span style=\"color: #24292E\"> bottom</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">where</span><span style=\"color: #24292E\"> feature.location.latitude </span><span style=\"color: #D73A49\">&lt;=</span><span style=\"color: #24292E\"> top</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">select</span><span style=\"color: #24292E\"> feature;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> selectedFeatures.</span><span style=\"color: #6F42C1\">toStream</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"passing-around-messages":{"frontmatter":{"title":"Passing around events has never been easier","description":"Producing and consuming events from message brokers and then exposing them to others using WebHook, WebSocket, GraphQL, gRPC, etc., is just a piece of cake using Ballerina. You focus on the business logic and let Ballerina focus on the network logic.","url":"https://ballerina.io/learn/by-example/kafka-service-consume-message/","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">type</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">Order</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">record</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> orderId;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> productName;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">decimal</span><span style=\"color: #24292E\"> price;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">boolean</span><span style=\"color: #24292E\"> isValid;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">listener</span><span style=\"color: #24292E\"> kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Listener orderListener </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">kafka</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">DEFAULT_URL, {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    groupId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;order-group-id&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    topics</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;order-topic&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> orderListener {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onConsumerRecord</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Order</span><span style=\"color: #24292E\">[] </span><span style=\"color: #E36209\">orders</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// The set of orders received by the service are processed one by one.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> Order &#39;order </span><span style=\"color: #D73A49\">in</span><span style=\"color: #24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">where</span><span style=\"color: #24292E\"> &#39;order.isValid</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">do</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                log</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">printInfo</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">`Received valid order for ${</span><span style=\"color: #24292E\">&#39;order</span><span style=\"color: #032F62\">.</span><span style=\"color: #24292E\">productName</span><span style=\"color: #032F62\">}`</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"proto":{"frontmatter":{"title":"","description":"","url":"","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #24292E\">message Rectangle {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  Point lo </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  Point hi </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">2</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">message Feature {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> name </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  Point location </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">2</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">message Point {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  int32 latitude </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">1</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  int32 longitude </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">2</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> RouteGuide {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">  rpc </span><span style=\"color: #6F42C1\">ListFeatures</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">Rectangle</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">stream</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Feature</span><span style=\"color: #24292E\">) {}</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"webhook_with_websub":{"frontmatter":{"title":"WebHooks with WebSub","description":"Ballerina combines HTTP and event-driven development leveraging the power of the HTTP ecosystem with WebSub for constructing event-driven applications effortlessly.","url":"https://ballerina.io/learn/by-example/websub-webhook-sample/","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #24292E\">@</span><span style=\"color: #005CC5\">websub</span><span style=\"color: #24292E\">:</span><span style=\"color: #005CC5\">SubscriberServiceConfig</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    target</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;https://api.github.com/hub&quot;</span><span style=\"color: #24292E\">, </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;https://github.com/&lt;YOUR_ORGANIZATION&gt;/&lt;REPOSITORY&gt;/events/push.json&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    ],</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    secret</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;&lt;YOUR_SECRET_KEY&gt;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    httpConfig</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        auth</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            token</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;&lt;YOUR_AUTH_TOKEN&gt;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> websub:Listener(</span><span style=\"color: #005CC5\">9090</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onEventNotification</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ContentDistributionMessage event) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Get the expected json payload</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">json</span><span style=\"color: #24292E\"> retrievedContent </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> event.content.</span><span style=\"color: #6F42C1\">ensureType</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Handle the new event</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> retrievedContent.zen </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> hookId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> retrievedContent.hook_id;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">`PingEvent received for webhook [${</span><span style=\"color: #24292E\">hookId</span><span style=\"color: #032F62\">}]`</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        } </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> retrievedContent.ref </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> repositoryName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> retrievedContent.repository.name;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">`PushEvent received for [${</span><span style=\"color: #24292E\">repositoryName</span><span style=\"color: #032F62\">}]`</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"webhook_with_websub_hub":{"frontmatter":{"title":"WebHooks with WebSub","description":"Ballerina combines HTTP and event-driven development leveraging the power of the HTTP ecosystem with WebSub for constructing event-driven applications effortlessly.","url":"https://github.com/ballerina-platform/module-ballerina-websubhub/tree/main/examples/kafka-hub","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/hub</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> websubhub:Listener(</span><span style=\"color: #005CC5\">9000</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onRegisterTopic</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">TopicRegistration message)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">TopicRegistrationSuccess</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">websubhub:TopicRegistrationError {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">TOPIC_REGISTRATION_SUCCESS;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onDeregisterTopic</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">TopicDeregistration message)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">TopicDeregistrationSuccess</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">websubhub:TopicDeregistrationError {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">TOPIC_DEREGISTRATION_SUCCESS;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onUpdateMessage</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">UpdateMessage message)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Acknowledgement</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">websubhub:UpdateMessageError {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ACKNOWLEDGEMENT;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onSubscriptionValidation</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Subscription message)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">SubscriptionDeniedError? {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onSubscriptionIntentVerified</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">VerifiedSubscription message)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onUnsubscriptionValidation</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Unsubscription message)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">UnsubscriptionDeniedError? {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onUnsubscriptionIntentVerified</span><span style=\"color: #24292E\">(</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">readonly</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">websubhub</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">VerifiedUnsubscription message) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// Add your logic here</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    } </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"websocket":{"frontmatter":{"title":"WebSocket, TCP socket for the web","description":"WebSocket is an excellent choice for message transmission particularly on the web. With Ballerina, you have not only the capability to utilize a WebSocket as it is but also the flexibility to develop custom subprotocols that align with your organization's specific requirements.","url":"https://github.com/ballerina-platform/module-ballerina-websocket/tree/main/examples/taxi-service-management","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6A737D\">// This service is for drivers to register and send locations.</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">service</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">/taxi</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">on</span><span style=\"color: #24292E\"> taxiMgtListener {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">resource</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\"> [</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">name</span><span style=\"color: #24292E\">]() </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Service</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">websocket:UpgradeError {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">DriverService</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">name</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">service class</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">DriverService</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">*</span><span style=\"color: #24292E\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Service;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> driverName;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">init</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">username</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.driverName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> username;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onOpen</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error? {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> welcomeMsg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #032F62\">&quot;Hi &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.driverName </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;! Your location will be shared with the riders&quot;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> caller</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">writeMessage</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">welcomeMsg</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6F42C1\">broadcast</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Driver &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.driverName </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot; ready for a ride&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// &#39;onMessage&#39; remote function will receive the location updates from drivers.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onMessage</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller, </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">location</span><span style=\"color: #24292E\">) </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Error? {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">worker</span><span style=\"color: #24292E\"> broadcast </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6A737D\">// Broadcast the live locations to registered riders.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> locationUpdateMsg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.driverName </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot; updated the location &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> location;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6F42C1\">broadcast</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">locationUpdateMsg</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">remote</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">isolated</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">onClose</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">websocket</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Caller caller, </span><span style=\"color: #005CC5\">int</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">statusCode</span><span style=\"color: #24292E\">, </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">reason</span><span style=\"color: #24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #005CC5\">self</span><span style=\"color: #24292E\">.driverName </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot; got disconnected&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"}}},"__N_SSG":true}