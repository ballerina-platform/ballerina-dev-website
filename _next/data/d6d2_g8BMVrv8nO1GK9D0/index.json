{"pageProps":{"samples":{"consuming-services":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerinax/googleapis.sheets;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> githubPAT </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> repository </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"ballerina-platform/ballerina-lang\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> sheetsAccessToken </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> spreadSheetId </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> sheetName </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"pull-requests\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> PR</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> url;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> title;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> state;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> created_at;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> updated_at;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> main</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client github </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"https://api.github.com/repos\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    map&#x3C;</span><span style=\"color:#005CC5\">string</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> headers </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        \"Accept\"</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"application/vnd.github.v3+json\"</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">        \"Authorization\"</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"token \"</span><span style=\"color:#24292E\"> + githubPAT</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    PR[] prs </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> github</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">[repository]</span><span style=\"color:#D73A49\">/</span><span style=\"color:#6F42C1\">pulls</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">headers</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">    sheets</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client gsheets </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> ({auth</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> {token: sheetsAccessToken}});</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> gsheets</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">appendValue</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">spreadSheetId</span><span style=\"color:#24292E\">, [</span><span style=\"color:#032F62\">\"Issue\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"Title\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"State\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"Created At\"</span><span style=\"color:#24292E\">, </span><span style=\"color:#032F62\">\"Updated At\"</span><span style=\"color:#24292E\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                {sheetName</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> sheetName});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    foreach </span><span style=\"color:#005CC5\">var</span><span style=\"color:#24292E\"> {url, title, state, created_at, updated_at} </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> prs {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> gsheets</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">appendValue</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">spreadSheetId</span><span style=\"color:#24292E\">, [url, title, state, created_at, updated_at],</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    {sheetName</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> sheetName});</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","graphql-api":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/graphql;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerinax/mysql;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerinax/mysql.driver </span><span style=\"color:#D73A49\">as</span><span style=\"color:#24292E\"> _;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> user </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> password </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> host </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#24292E\"> port </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> database </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> apiEndpoint </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> type</span><span style=\"color:#6F42C1\"> Album</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> id;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> title;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> artist;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    float</span><span style=\"color:#24292E\"> price;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Currency currency </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> USD;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> enum</span><span style=\"color:#6F42C1\"> Currency</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    USD</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    LKR</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    EUR</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    GBP</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#24292E\"> / </span><span style=\"color:#D73A49\">on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> graphql:Listener(</span><span style=\"color:#005CC5\">9000</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    private</span><span style=\"color:#D73A49\"> final</span><span style=\"color:#24292E\"> mysql</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client db;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    private</span><span style=\"color:#D73A49\"> final</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client forex;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    private</span><span style=\"color:#D73A49\"> final</span><span style=\"color:#24292E\"> Currency baseCurrency </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> USD;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    function</span><span style=\"color:#6F42C1\"> init</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        self</span><span style=\"color:#24292E\">.db </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">host</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">user</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">password</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">database</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">port</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        self</span><span style=\"color:#24292E\">.forex </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">apiEndpoint</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> album</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> id</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">Currency</span><span style=\"color:#E36209\"> currency</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#E36209\"> USD</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Album album </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.db</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">queryRow</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">`SELECT * FROM Albums WHERE id=${</span><span style=\"color:#24292E\">id</span><span style=\"color:#032F62\">}`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> currency </span><span style=\"color:#D73A49\">!=</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.baseCurrency {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#005CC5\">float</span><span style=\"color:#24292E\"> rate;} exchange </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.forex</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#6F42C1\">currencyConversion</span><span style=\"color:#24292E\">('from </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.baseCurrency, </span><span style=\"color:#E36209\">to</span><span style=\"color:#D73A49\"> =</span><span style=\"color:#24292E\"> currency);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            album.price </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> album.price </span><span style=\"color:#D73A49\">*</span><span style=\"color:#24292E\"> exchange.rate;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            album.currency </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> currency;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> album;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","grpc-api-proto":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">syntax </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"proto3\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> \"google/protobuf/wrappers.proto\";</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> \"google/protobuf/empty.proto\";</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#24292E\"> Albums {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    rpc </span><span style=\"color:#6F42C1\">getAlbum</span><span style=\"color:#24292E\">(google.protobuf.StringValue)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            returns</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">Album</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    rpc </span><span style=\"color:#6F42C1\">addAlbum</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Album</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">Album</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    rpc </span><span style=\"color:#6F42C1\">listAlbums</span><span style=\"color:#24292E\">(google.protobuf.Empty)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            returns</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">stream</span><span style=\"color:#E36209\"> Album</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">message Album {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> id </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> title </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 2</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> artist </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 3</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    float</span><span style=\"color:#24292E\"> price </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 4</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span></code></pre>","grpc-api":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/grpc;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#24292E\"> port </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 9090</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">Album[] albums </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    {id</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"1\"</span><span style=\"color:#24292E\">, title</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Blue Train\"</span><span style=\"color:#24292E\">, artist</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"John Coltrane\"</span><span style=\"color:#24292E\">, price</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 56.99</span><span style=\"color:#24292E\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    {id</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"2\"</span><span style=\"color:#24292E\">, title</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Jeru\"</span><span style=\"color:#24292E\">, artist</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Gerry Mulligan\"</span><span style=\"color:#24292E\">, price</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 17.99</span><span style=\"color:#24292E\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    {id</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"3\"</span><span style=\"color:#24292E\">, title</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Sarah Vaughan and Clifford Brown\"</span><span style=\"color:#24292E\">, artist</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Sarah Vaughan\"</span><span style=\"color:#24292E\">, price</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 39.99</span><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E\">@</span><span style=\"color:#005CC5\">grpc</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">Descriptor</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    value</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> DESCRIPTOR_RECORD_STORE_DESC</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#032F62\"> \"Albums\"</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> grpc:Listener(</span><span style=\"color:#E36209\">port</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> getAlbum</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> id</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Album[] filteredAlbums </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> albums.</span><span style=\"color:#6F42C1\">filter</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">album</span><span style=\"color:#D73A49\"> =></span><span style=\"color:#24292E\"> album.id </span><span style=\"color:#D73A49\">==</span><span style=\"color:#E36209\"> id</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> filteredAlbums.</span><span style=\"color:#6F42C1\">length</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">></span><span style=\"color:#005CC5\"> 0</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            return</span><span style=\"color:#24292E\"> filteredAlbums.</span><span style=\"color:#6F42C1\">pop</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> error</span><span style=\"color:#24292E\"> grpc</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">NotFoundError</span><span style=\"color:#24292E\">(</span><span style=\"color:#005CC5\">string</span><span style=\"color:#032F62\"> `Cannot find the album for ID ${</span><span style=\"color:#24292E\">id</span><span style=\"color:#032F62\">}`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> addAlbum</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Album</span><span style=\"color:#E36209\"> album</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        albums.</span><span style=\"color:#6F42C1\">push</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">album</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> album;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> listAlbums</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> stream&#x3C;</span><span style=\"color:#24292E\">Album, </span><span style=\"color:#D73A49\">error?>|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> albums.</span><span style=\"color:#6F42C1\">toStream</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","kafka-consumer-producer":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerinax/kafka;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> groupId </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"order-consumers\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> orders </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"orders\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> paymentSuccessOrders </span><span style=\"color:#D73A49\">=</span><span style=\"color:#032F62\"> \"payment-success-orders\"</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> decimal</span><span style=\"color:#24292E\"> pollingInterval </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 1</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> kafkaEndpoint </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">DEFAULT_URL;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Order</span><span style=\"color:#D73A49\"> readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> id;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> desc;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    PaymentStatus paymentStatus;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">enum</span><span style=\"color:#6F42C1\"> PaymentStatus</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    SUCCESS</span><span style=\"color:#24292E\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    FAIL</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">final</span><span style=\"color:#24292E\"> kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">ConsumerConfiguration consumerConfigs </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    groupId</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> groupId,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    topics</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> [orders],</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    offsetReset</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> kafka:OFFSET_RESET_EARLIEST,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    pollingInterval</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#D73A49\"> on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> kafka:Listener(</span><span style=\"color:#E36209\">kafkaEndpoint</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">consumerConfigs</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    private</span><span style=\"color:#D73A49\"> final</span><span style=\"color:#24292E\"> kafka</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Producer orderProducer;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    function</span><span style=\"color:#6F42C1\"> init</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        self</span><span style=\"color:#24292E\">.orderProducer </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">kafkaEndpoint</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    remote</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> onConsumerRecord</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">Order</span><span style=\"color:#24292E\">[] </span><span style=\"color:#E36209\">orders</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        from</span><span style=\"color:#24292E\"> Order 'order </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> orders</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            where</span><span style=\"color:#24292E\"> 'order.paymentStatus </span><span style=\"color:#D73A49\">==</span><span style=\"color:#24292E\"> SUCCESS</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            do</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">                check</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.orderProducer</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">send</span><span style=\"color:#24292E\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    topic</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> paymentSuccessOrders,</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                    value</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\"> 'order</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">                });</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">            };</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","restful-api":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#24292E\"> port </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> 8080</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Album</span><span style=\"color:#D73A49\"> readonly</span><span style=\"color:#D73A49\"> &#x26;</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> id;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> title;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> artist;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    decimal</span><span style=\"color:#24292E\"> price;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">table&#x3C;</span><span style=\"color:#24292E\">Album</span><span style=\"color:#D73A49\">></span><span style=\"color:#D73A49\"> key</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">id</span><span style=\"color:#24292E\">) albums </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> table</span><span style=\"color:#24292E\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        {id</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"1\"</span><span style=\"color:#24292E\">, title</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Blue Train\"</span><span style=\"color:#24292E\">, artist</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"John Coltrane\"</span><span style=\"color:#24292E\">, price</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 56.99</span><span style=\"color:#24292E\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        {id</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"2\"</span><span style=\"color:#24292E\">, title</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Jeru\"</span><span style=\"color:#24292E\">, artist</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Gerry Mulligan\"</span><span style=\"color:#24292E\">, price</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 17.99</span><span style=\"color:#24292E\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        {id</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"3\"</span><span style=\"color:#24292E\">, title</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Sarah Vaughan and Clifford Brown\"</span><span style=\"color:#24292E\">, artist</span><span style=\"color:#D73A49\">:</span><span style=\"color:#032F62\"> \"Sarah Vaughan\"</span><span style=\"color:#24292E\">, price</span><span style=\"color:#D73A49\">:</span><span style=\"color:#005CC5\"> 39.99</span><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    ];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#24292E\"> / </span><span style=\"color:#D73A49\">on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> http:Listener(</span><span style=\"color:#E36209\">port</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> albums</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album[] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> albums.</span><span style=\"color:#6F42C1\">toArray</span><span style=\"color:#24292E\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> albums</span><span style=\"color:#24292E\">/[</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> id</span><span style=\"color:#24292E\">]() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">NotFound {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Album</span><span style=\"color:#D73A49\">?</span><span style=\"color:#24292E\"> album </span><span style=\"color:#D73A49\">=</span><span style=\"color:#24292E\"> albums[id];</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> album </span><span style=\"color:#D73A49\">is</span><span style=\"color:#24292E\"> () {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            return</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">NOT_FOUND;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        } </span><span style=\"color:#D73A49\">else</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            return</span><span style=\"color:#24292E\"> album;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> post</span><span style=\"color:#6F42C1\"> albums</span><span style=\"color:#24292E\">(@</span><span style=\"color:#005CC5\">http</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">Payload</span><span style=\"color:#E36209\"> Album</span><span style=\"color:#E36209\"> album</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        albums.</span><span style=\"color:#6F42C1\">add</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">album</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> album;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","working-with-data":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/io;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Country</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> country;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> population;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> continent;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> cases;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    int</span><span style=\"color:#24292E\"> deaths;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Prints the top 10 countries having the highest case-fatality ratio.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">public</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> main</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client diseaseEp </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#032F62\">\"https://disease.sh/v3\"</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    Country[] countries </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#24292E\"> diseaseEp</span><span style=\"color:#D73A49\">->/</span><span style=\"color:#24292E\">covid\\</span><span style=\"color:#D73A49\">-</span><span style=\"color:#005CC5\">19</span><span style=\"color:#D73A49\">/</span><span style=\"color:#24292E\">countries;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    json</span><span style=\"color:#24292E\"> summary </span><span style=\"color:#D73A49\">=</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        from</span><span style=\"color:#005CC5\"> var</span><span style=\"color:#24292E\"> {country, continent, population, cases, deaths} </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> countries</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            where</span><span style=\"color:#24292E\"> population </span><span style=\"color:#D73A49\">>=</span><span style=\"color:#005CC5\"> 100000</span><span style=\"color:#D73A49\"> &#x26;&#x26;</span><span style=\"color:#24292E\"> deaths </span><span style=\"color:#D73A49\">>=</span><span style=\"color:#005CC5\"> 100</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            let</span><span style=\"color:#005CC5\"> decimal</span><span style=\"color:#24292E\"> caseFatalityRatio </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> &#x3C;</span><span style=\"color:#005CC5\">decimal</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\">deaths </span><span style=\"color:#D73A49\">/</span><span style=\"color:#D73A49\"> &#x3C;</span><span style=\"color:#005CC5\">decimal</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\">cases </span><span style=\"color:#D73A49\">*</span><span style=\"color:#005CC5\"> 100</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            order</span><span style=\"color:#D73A49\"> by</span><span style=\"color:#24292E\"> caseFatalityRatio </span><span style=\"color:#D73A49\">descending</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            limit</span><span style=\"color:#005CC5\"> 10</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            select</span><span style=\"color:#24292E\"> {country, continent, population, caseFatalityRatio};</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    io</span><span style=\"color:#D73A49\">:</span><span style=\"color:#6F42C1\">println</span><span style=\"color:#24292E\">(</span><span style=\"color:#E36209\">summary</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>","working-with-databases":"<pre class=\"shiki github-light\" style=\"background-color:#fff;color:#24292e\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/http;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerina/sql;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerinax/mysql;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">import</span><span style=\"color:#24292E\"> ballerinax/mysql.driver </span><span style=\"color:#D73A49\">as</span><span style=\"color:#24292E\"> _;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> host </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> int</span><span style=\"color:#24292E\"> port </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> user </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> password </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">configurable</span><span style=\"color:#005CC5\"> string</span><span style=\"color:#24292E\"> database </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> ?</span><span style=\"color:#24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">type</span><span style=\"color:#6F42C1\"> Album</span><span style=\"color:#D73A49\"> record</span><span style=\"color:#24292E\"> {</span><span style=\"color:#D73A49\">|</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> id;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> title;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    string</span><span style=\"color:#24292E\"> artist;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">    float</span><span style=\"color:#24292E\"> price;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">service</span><span style=\"color:#24292E\"> / </span><span style=\"color:#D73A49\">on</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> http:Listener(</span><span style=\"color:#005CC5\">8080</span><span style=\"color:#24292E\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    private</span><span style=\"color:#D73A49\"> final</span><span style=\"color:#24292E\"> mysql</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Client db;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    function</span><span style=\"color:#6F42C1\"> init</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#D73A49\"> error?</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5\">        self</span><span style=\"color:#24292E\">.db </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#D73A49\"> new</span><span style=\"color:#24292E\"> (</span><span style=\"color:#E36209\">host</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">user</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">password</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">database</span><span style=\"color:#24292E\">, </span><span style=\"color:#E36209\">port</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> albums</span><span style=\"color:#24292E\">() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album[]</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        stream&#x3C;</span><span style=\"color:#24292E\">Album, sql</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error?</span><span style=\"color:#D73A49\">></span><span style=\"color:#24292E\"> albumStream </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.db</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">query</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">`SELECT * FROM Albums`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#D73A49\"> from</span><span style=\"color:#24292E\"> Album album </span><span style=\"color:#D73A49\">in</span><span style=\"color:#24292E\"> albumStream </span><span style=\"color:#D73A49\">select</span><span style=\"color:#24292E\"> album;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> get</span><span style=\"color:#6F42C1\"> albums</span><span style=\"color:#24292E\">/[</span><span style=\"color:#005CC5\">string</span><span style=\"color:#E36209\"> id</span><span style=\"color:#24292E\">]() </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">NotFound</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        Album</span><span style=\"color:#D73A49\">|</span><span style=\"color:#24292E\">sql</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">Error result </span><span style=\"color:#D73A49\">=</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.db</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">queryRow</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">`SELECT * FROM Albums WHERE id = ${</span><span style=\"color:#24292E\">id</span><span style=\"color:#032F62\">}`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        if</span><span style=\"color:#24292E\"> result </span><span style=\"color:#D73A49\">is</span><span style=\"color:#24292E\"> sql</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">NoRowsError {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            return</span><span style=\"color:#24292E\"> http</span><span style=\"color:#D73A49\">:</span><span style=\"color:#24292E\">NOT_FOUND;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        } </span><span style=\"color:#D73A49\">else</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">            return</span><span style=\"color:#24292E\"> result;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D73A49\">    resource</span><span style=\"color:#D73A49\"> function</span><span style=\"color:#6F42C1\"> post</span><span style=\"color:#6F42C1\"> album</span><span style=\"color:#24292E\">(@</span><span style=\"color:#005CC5\">http</span><span style=\"color:#24292E\">:</span><span style=\"color:#005CC5\">Payload</span><span style=\"color:#E36209\"> Album</span><span style=\"color:#E36209\"> album</span><span style=\"color:#24292E\">) </span><span style=\"color:#D73A49\">returns</span><span style=\"color:#24292E\"> Album</span><span style=\"color:#D73A49\">|error</span><span style=\"color:#24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">        _ </span><span style=\"color:#D73A49\">=</span><span style=\"color:#D73A49\"> check</span><span style=\"color:#005CC5\"> self</span><span style=\"color:#24292E\">.db</span><span style=\"color:#D73A49\">-></span><span style=\"color:#6F42C1\">execute</span><span style=\"color:#24292E\">(</span><span style=\"color:#032F62\">`</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">            INSERT INTO Albums (id, title, artist, price)</span></span>\n<span class=\"line\"><span style=\"color:#032F62\">            VALUES (${</span><span style=\"color:#24292E\">album</span><span style=\"color:#032F62\">.</span><span style=\"color:#24292E\">id</span><span style=\"color:#032F62\">}, ${</span><span style=\"color:#24292E\">album</span><span style=\"color:#032F62\">.</span><span style=\"color:#24292E\">title</span><span style=\"color:#032F62\">}, ${</span><span style=\"color:#24292E\">album</span><span style=\"color:#032F62\">.</span><span style=\"color:#24292E\">artist</span><span style=\"color:#032F62\">}, ${</span><span style=\"color:#24292E\">album</span><span style=\"color:#032F62\">.</span><span style=\"color:#24292E\">price</span><span style=\"color:#032F62\">});`</span><span style=\"color:#24292E\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49\">        return</span><span style=\"color:#24292E\"> album;</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E\">}</span></span>\n<span class=\"line\"></span></code></pre>"},"codeSamples":{"consuming-services":"\nimport ballerina/http;\nimport ballerinax/googleapis.sheets;\n\nconfigurable string githubPAT = ?;\nconfigurable string repository = \"ballerina-platform/ballerina-lang\";\nconfigurable string sheetsAccessToken = ?;\nconfigurable string spreadSheetId = ?;\nconfigurable string sheetName = \"pull-requests\";\n\ntype PR record {\n    string url;\n    string title;\n    string state;\n    string created_at;\n    string updated_at;\n};\n\npublic function main() returns error? {\n    http:Client github = check new (\"https://api.github.com/repos\");\n    map<string> headers = {\n        \"Accept\": \"application/vnd.github.v3+json\",\n        \"Authorization\": \"token \" + githubPAT\n    };\n    PR[] prs = check github->/[repository]/pulls(headers);\n\n    sheets:Client gsheets = check new ({auth: {token: sheetsAccessToken}});\n    _ = check gsheets->appendValue(spreadSheetId, [\"Issue\", \"Title\", \"State\", \"Created At\", \"Updated At\"],\n                {sheetName: sheetName});\n\n    foreach var {url, title, state, created_at, updated_at} in prs {\n        _ = check gsheets->appendValue(spreadSheetId, [url, title, state, created_at, updated_at],\n                    {sheetName: sheetName});\n    }\n}\n","graphql-api":"\nimport ballerina/graphql;\nimport ballerina/http;\nimport ballerinax/mysql;\nimport ballerinax/mysql.driver as _;\n\nconfigurable string user = ?;\nconfigurable string password = ?;\nconfigurable string host = ?;\nconfigurable int port = ?;\nconfigurable string database = ?;\nconfigurable string apiEndpoint = ?;\n\npublic type Album record {\n    string id;\n    string title;\n    string artist;\n    float price;\n    Currency currency = USD;\n};\n\npublic enum Currency {\n    USD,\n    LKR,\n    EUR,\n    GBP\n}\n\nservice / on new graphql:Listener(9000) {\n    private final mysql:Client db;\n    private final http:Client forex;\n    private final Currency baseCurrency = USD;\n\n    function init() returns error? {\n        self.db = check new (host, user, password, database, port);\n        self.forex = check new (apiEndpoint);\n    }\n\n    resource function get album(string id, Currency currency = USD) returns Album|error {\n        Album album = check self.db->queryRow(`SELECT * FROM Albums WHERE id=${id}`);\n        if currency != self.baseCurrency {\n            record {float rate;} exchange = check self.forex->/currencyConversion('from = self.baseCurrency, to = currency);\n            album.price = album.price * exchange.rate;\n            album.currency = currency;\n        }\n        return album;\n    }\n}\n","grpc-api-proto":"\nsyntax = \"proto3\";\n\nimport \"google/protobuf/wrappers.proto\";\nimport \"google/protobuf/empty.proto\";\n\nservice Albums {\n    rpc getAlbum(google.protobuf.StringValue)\n            returns (Album);\n    rpc addAlbum(Album) returns (Album);\n    rpc listAlbums(google.protobuf.Empty)\n            returns (stream Album);\n}\n\nmessage Album {\n    string id = 1;\n    string title = 2;\n    string artist = 3;\n    float price = 4;\n};\n","grpc-api":"\nimport ballerina/grpc;\n\nconfigurable int port = 9090;\n\nAlbum[] albums = [\n    {id: \"1\", title: \"Blue Train\", artist: \"John Coltrane\", price: 56.99},\n    {id: \"2\", title: \"Jeru\", artist: \"Gerry Mulligan\", price: 17.99},\n    {id: \"3\", title: \"Sarah Vaughan and Clifford Brown\", artist: \"Sarah Vaughan\", price: 39.99}\n];\n\n@grpc:Descriptor {\n    value: DESCRIPTOR_RECORD_STORE_DESC\n}\nservice \"Albums\" on new grpc:Listener(port) {\n    remote function getAlbum(string id) returns Album|error {\n        Album[] filteredAlbums = albums.filter(album => album.id == id);\n        if filteredAlbums.length() > 0 {\n            return filteredAlbums.pop();\n        }\n\n        return error grpc:NotFoundError(string `Cannot find the album for ID ${id}`);\n    }\n\n    remote function addAlbum(Album album) returns Album|error {\n        albums.push(album);\n        return album;\n    }\n\n    remote function listAlbums() returns stream<Album, error?>|error {\n        return albums.toStream();\n    }\n}\n","kafka-consumer-producer":"\nimport ballerinax/kafka;\n\nconfigurable string groupId = \"order-consumers\";\nconfigurable string orders = \"orders\";\nconfigurable string paymentSuccessOrders = \"payment-success-orders\";\nconfigurable decimal pollingInterval = 1;\nconfigurable string kafkaEndpoint = kafka:DEFAULT_URL;\n\ntype Order readonly & record {|\n    int id;\n    string desc;\n    PaymentStatus paymentStatus;\n|};\n\nenum PaymentStatus {\n    SUCCESS,\n    FAIL\n}\n\nfinal kafka:ConsumerConfiguration consumerConfigs = {\n    groupId: groupId,\n    topics: [orders],\n    offsetReset: kafka:OFFSET_RESET_EARLIEST,\n    pollingInterval\n};\n\nservice on new kafka:Listener(kafkaEndpoint, consumerConfigs) {\n    private final kafka:Producer orderProducer;\n\n    function init() returns error? {\n        self.orderProducer = check new (kafkaEndpoint);\n    }\n\n    remote function onConsumerRecord(Order[] orders) returns error? {\n        from Order 'order in orders\n            where 'order.paymentStatus == SUCCESS\n            do {\n                check self.orderProducer->send({\n                    topic: paymentSuccessOrders,\n                    value: 'order\n                });\n            };\n    }\n}\n","restful-api":"\nimport ballerina/http;\n\nconfigurable int port = 8080;\n\ntype Album readonly & record {|\n    string id;\n    string title;\n    string artist;\n    decimal price;\n|};\n\ntable<Album> key(id) albums = table [\n        {id: \"1\", title: \"Blue Train\", artist: \"John Coltrane\", price: 56.99},\n        {id: \"2\", title: \"Jeru\", artist: \"Gerry Mulligan\", price: 17.99},\n        {id: \"3\", title: \"Sarah Vaughan and Clifford Brown\", artist: \"Sarah Vaughan\", price: 39.99}\n    ];\n\nservice / on new http:Listener(port) {\n    resource function get albums() returns Album[] {\n        return albums.toArray();\n    }\n\n    resource function get albums/[string id]() returns Album|http:NotFound {\n        Album? album = albums[id];\n        if album is () {\n            return http:NOT_FOUND;\n        } else {\n            return album;\n        }\n    }\n\n    resource function post albums(@http:Payload Album album) returns Album {\n        albums.add(album);\n        return album;\n    }\n}\n","working-with-data":"\nimport ballerina/http;\nimport ballerina/io;\n\ntype Country record {\n    string country;\n    int population;\n    string continent;\n    int cases;\n    int deaths;\n};\n\n// Prints the top 10 countries having the highest case-fatality ratio.\npublic function main() returns error? {\n    http:Client diseaseEp = check new (\"https://disease.sh/v3\");\n    Country[] countries = check diseaseEp->/covid\\-19/countries;\n\n    json summary =\n        from var {country, continent, population, cases, deaths} in countries\n            where population >= 100000 && deaths >= 100\n            let decimal caseFatalityRatio = <decimal>deaths / <decimal>cases * 100\n            order by caseFatalityRatio descending\n            limit 10\n            select {country, continent, population, caseFatalityRatio};\n    io:println(summary);\n}\n","working-with-databases":"\nimport ballerina/http;\nimport ballerina/sql;\nimport ballerinax/mysql;\nimport ballerinax/mysql.driver as _;\n\nconfigurable string host = ?;\nconfigurable int port = ?;\nconfigurable string user = ?;\nconfigurable string password = ?;\nconfigurable string database = ?;\n\ntype Album record {|\n    string id;\n    string title;\n    string artist;\n    float price;\n|};\n\nservice / on new http:Listener(8080) {\n    private final mysql:Client db;\n\n    function init() returns error? {\n        self.db = check new (host, user, password, database, port);\n    }\n\n    resource function get albums() returns Album[]|error {\n        stream<Album, sql:Error?> albumStream = self.db->query(`SELECT * FROM Albums`);\n        return from Album album in albumStream select album;\n    }\n\n    resource function get albums/[string id]() returns Album|http:NotFound|error {\n        Album|sql:Error result = self.db->queryRow(`SELECT * FROM Albums WHERE id = ${id}`);\n        if result is sql:NoRowsError {\n            return http:NOT_FOUND;\n        } else {\n            return result;\n        }\n    }\n\n    resource function post album(@http:Payload Album album) returns Album|error {\n        _ = check self.db->execute(`\n            INSERT INTO Albums (id, title, artist, price)\n            VALUES (${album.id}, ${album.title}, ${album.artist}, ${album.price});`);\n        return album;\n    }\n}\n"}},"__N_SSG":true}