{"pageProps":{"frontmatter":{},"content":"# Specification: Ballerina OS Library\n\n_Owners_: @daneshk @MadhukaHarith92  \n_Reviewers_: @daneshk  \n_Created_: 2021/11/10  \n_Updated_: 2022/02/08  \n_Edition_: Swan Lake  \n\n## Introduction\nThis is the specification for the OS standard library of [Ballerina language](https://ballerina.io/), which provides APIs to retrieve information about the operating system and its current users.\n\nThe OS library specification has evolved and may continue to evolve in the future. The released versions of the specification can be found under the relevant Github tag.\n\nIf you have any feedback or suggestions about the library, start a discussion via a [GitHub issue](https://github.com/ballerina-platform/ballerina-standard-library/issues) or in the [Discord server](https://discord.gg/ballerinalang). Based on the outcome of the discussion, the specification and implementation can be updated. Community feedback is always welcome. Any accepted proposal, which affects the specification is stored under `/docs/proposals`. Proposals under discussion can be found with the label `type/proposal` in GitHub.\n\nThe conforming implementation of the specification is released and included in the distribution. Any deviation from the specification is considered a bug.\n\n## Contents\n\n1. [Overview](#1-overview)\n2. [Environment Variable Values](#2-environment-variable-values)\n3. [Operating System Users Information](#3-operating-system-users-information)\n4. [Operating System Command execution](#4-operating-system-command-execution)\n\n## 1. Overview\nThis specification elaborates on the operating-system-related functions available in the OS library.\n\n## 2. Environment Variable Values\nThe environment variable value associated with a provided name can be retrieved using the `os:getEnv()` function.\n```ballerina\nstring port = os:getEnv(\"HTTP_PORT\");\n```\n\nAn environment variable can be set using the `setEnv` function.\n```ballerina\nos:Error? err = os:setEnv(\"BALCONFIGFILE\", \"/path/to/Config.toml\");\n```\n\nAn environment variable can be removed from the system using the `unsetEnv` function.\n```ballerina\nos:Error? err = os:unsetEnv(\"BALCONFIGFILE\");\n```\n\nThe existing environment variables of the system can be listed using the `listEnv` function.\n```ballerina\nmap<string> envs = os:listEnv();\n```\n\n## 3. Operating System Users Information\nThe current user's name can be retrieved using the `os:getUsername()` function.\n```ballerina\nstring username = os:getUsername();\n```\n\nThe current user's home directory path can be retrieved using the `os:getUserHome()` function.\n```ballerina\nstring userHome = os:getUserHome();\n```\n\n## 4. Operating System Command execution\nThe users can execute OS commands using the `os:exec()` function by passing an `os:Command` record.\n```ballerina\nos:Process|os:Error result = os:exec({value: \"bal\", arguments: [\"run\", filepath]}, BAL_CONFIG_FILE = \"/abc/Config.toml\");\n```\n\nThe following is the record type definitions of `os:Command`.\n```ballerina\npublic type Command record {|\n    string value;\n    string[] arguments = [];\n|};\n```\n\nAdditionally, users can pass any number of environment properties as key-value pairs.\n```ballerina\npublic type EnvProperties record {|\n    never command?;\n    anydata...;\n|};\n```\n\nThis will return an `os:Process` object. To wait for the process to finish its work and exit, `process.waitForExit()` function can be used.\n```ballerina\nint|os:Error exitCode = process.waitForExit();\n```\n\nTo retrieve the output of the process, `process.output()` function can be used. This will return the standard output as default. \nThere is an option provided to return standard error by providing file descriptor.\n```ballerina\nbyte[]|os:Error err = process.output(io:stderr);\n```\n\nTo terminate a process, `process.exit()` function can be used.\n```ballerina\nprocess.exit();\n```\n\nThe following is the definition of the `os:Process` object.\n```ballerina\n# This object contains information on a process being created from Ballerina.\n# This is returned from the `exec` function in the `os` module.\npublic class Process {\n\n    # Waits for the process to finish its work and exit. \n    # This will return 0 if successful, or a different value during failure depending on the operating system.\n    # ```ballerina\n    # int|os:Error exitCode = process.waitForExit();\n    # ```\n    #\n    # + return - Returns the exit code for the process, or else an `Error` if a failure occurs\n    public isolated function waitForExit() returns int|Error {\n        return nativeWaitForExit(self);\n    }\n\n    # Returns the standard output as default. Option provided to return standard error by providing file descriptor.\n    # If the process was not finished and exited explicitly by running process.waitForExit(), then process.output() will finish the work and exit and return the output. \n    # ```ballerina\n    # byte[]|os:Error err = process.output(io:stderr);\n    # ```\n    #\n    # + fileOutputStream - The output stream (`io:stdout` or `io:stderr`) content needs to be returned\n    # + return - The `byte[]`, which represents the process's 'standard error', or the 'standard out', or an Error\n    public isolated function output(io:FileOutputStream fileOutputStream = io:stdout) returns byte[]|Error {\n        return nativeOutput(self, fileOutputStream);\n    }\n\n    # Terminates the process.\n    # ```ballerina\n    # process.exit();\n    # ```\n    #\n    public isolated function exit() {\n        return nativeExit(self);\n    }\n}\n```\n","codeSnippets":"[[-1921617040,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> port </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">getEnv</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;HTTP_PORT&quot;</span><span style=\\\"color: #24292E\\\">);</span></span></code></pre>\"],[286593626,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Error? err </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">setEnv</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;BALCONFIGFILE&quot;</span><span style=\\\"color: #24292E\\\">, </span><span style=\\\"color: #032F62\\\">&quot;/path/to/Config.toml&quot;</span><span style=\\\"color: #24292E\\\">);</span></span></code></pre>\"],[406462860,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Error? err </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">unsetEnv</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #032F62\\\">&quot;BALCONFIGFILE&quot;</span><span style=\\\"color: #24292E\\\">);</span></span></code></pre>\"],[1747945879,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">map&lt;</span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #D73A49\\\">&gt;</span><span style=\\\"color: #24292E\\\"> envs </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">listEnv</span><span style=\\\"color: #24292E\\\">();</span></span></code></pre>\"],[1078154278,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> username </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">getUsername</span><span style=\\\"color: #24292E\\\">();</span></span></code></pre>\"],[611683750,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> userHome </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">getUserHome</span><span style=\\\"color: #24292E\\\">();</span></span></code></pre>\"],[787513108,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">Process</span><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">os:Error result </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> os</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #6F42C1\\\">exec</span><span style=\\\"color: #24292E\\\">({value</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;bal&quot;</span><span style=\\\"color: #24292E\\\">, arguments</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\"> [</span><span style=\\\"color: #032F62\\\">&quot;run&quot;</span><span style=\\\"color: #24292E\\\">, filepath]}, </span><span style=\\\"color: #E36209\\\">BAL_CONFIG_FILE</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #032F62\\\">&quot;/abc/Config.toml&quot;</span><span style=\\\"color: #24292E\\\">);</span></span></code></pre>\"],[2066196062,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Command</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\"> value;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">string</span><span style=\\\"color: #24292E\\\">[] arguments </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> [];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[1313348915,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">type</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">EnvProperties</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #D73A49\\\">record</span><span style=\\\"color: #24292E\\\"> {</span><span style=\\\"color: #D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #D73A49\\\">never</span><span style=\\\"color: #24292E\\\"> command</span><span style=\\\"color: #D73A49\\\">?</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #005CC5\\\">anydata</span><span style=\\\"color: #D73A49\\\">...</span><span style=\\\"color: #24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">|</span><span style=\\\"color: #24292E\\\">};</span></span></code></pre>\"],[-925823714,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">int</span><span style=\\\"color: #D73A49\\\">|os:</span><span style=\\\"color: #24292E\\\">Error exitCode </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> process.</span><span style=\\\"color: #6F42C1\\\">waitForExit</span><span style=\\\"color: #24292E\\\">();</span></span></code></pre>\"],[1096481338,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #005CC5\\\">byte</span><span style=\\\"color: #24292E\\\">[]</span><span style=\\\"color: #D73A49\\\">|os:</span><span style=\\\"color: #24292E\\\">Error err </span><span style=\\\"color: #D73A49\\\">=</span><span style=\\\"color: #24292E\\\"> process.</span><span style=\\\"color: #6F42C1\\\">output</span><span style=\\\"color: #24292E\\\">(</span><span style=\\\"color: #E36209\\\">io</span><span style=\\\"color: #D73A49\\\">:</span><span style=\\\"color: #24292E\\\">stderr);</span></span></code></pre>\"],[-1152830211,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">process.</span><span style=\\\"color: #6F42C1\\\">exit</span><span style=\\\"color: #24292E\\\">();</span></span></code></pre>\"],[-1643491236,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># This object contains information on a process being created from Ballerina.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># This is returned from the `exec` function in the `os` module.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #D73A49\\\">public class</span><span style=\\\"color: #24292E\\\"> </span><span style=\\\"color: #6F42C1\\\">Process</span><span style=\\\"color: #24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\"># Waits for the process to finish its work and exit. </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\"># This will return 0 if successful, or a different value during failure depending on the operating system.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292E\\\">    </span><span style=\\\"color: #6A737D\\\">#</span></span></code></pre>\"],[210118704,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># byte[]|os:Error err = process.output(io:stderr);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">#</span></span></code></pre>\"],[-1101558695,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #fff\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\"># process.exit();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6A737D\\\">#</span></span></code></pre>\"]]"},"__N_SSG":true}