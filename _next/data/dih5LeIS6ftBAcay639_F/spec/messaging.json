{"pageProps":{"frontmatter":{},"content":"# Specification: Ballerina Messaging Library\n\n_Owners_: @TharmiganK @shafreenAnfar @daneshk @ThisaruGuruge\n_Reviewers_: @daneshk @ThisaruGuruge @shafreenAnfar  \n_Created_: 2025/07/16  \n_Updated_: 2025/07/16\n_Edition_: Swan Lake\n\n## Introduction\n\nThis is the specification for the Messaging standard library of [Ballerina language](https://ballerina.io/), which \nprovides a unified, extensible API for message persistence and consumption in Ballerina applications. It abstracts the \nunderlying message store technology, enabling developers to interact with various message brokers or databases through \na consistent interface. This approach simplifies integration, fosters code consistency, and supports advanced messaging \npatterns such as retries and dead-letter queues (DLQs).\n\nThe Messaging library specification has evolved and may continue to evolve in the future. The released versions of the \nspecification can be found under the relevant GitHub tag.\n\nIf you have any feedback or suggestions about the library, start a discussion via a \n[GitHub issue](https://github.com/ballerina-platform/ballerina-standard-library/issues) or in the \n[Discord server](https://discord.gg/ballerinalang). Based on the outcome of the discussion, the specification and \nimplementation can be updated. Community feedback is always welcome. Any proposal, which affects the \nspecification can be found in the [Ballerina Specification repository](https://github.com/ballerina-platform/ballerina-spec/tree/master/stdlib/proposals) \nunder `stdlibs/proposals/messaging`.\n\nThe conforming implementation of the specification is released to Ballerina central. Any deviation from the \nspecification is considered a bug.\n\n## Contents\n\n1. [Overview](#1-overview)\n2. [Message Store Interface](#2-message-store-interface)\n3. [Store Listener](#3-store-listener)\n4. [Message Store Service](#4-message-store-service)\n5. [In-Memory Message Store](#5-in-memory-message-store)\n6. [Example Usage](#6-example-usage)\n7. [Extensibility](#7-extensibility)\n\n## 1. Overview\n\nThis module defines a set of interfaces and implementations for message storage and consumption. The key components are:\n\n- **Message Store Interface**: Defines the contract for storing, retrieving, and acknowledging messages.\n- **Store Listener**: Polls a message store at configurable intervals and dispatches messages to an attached service, \nwith support for retries and DLQs.\n- **Message Store Service**: A service object that processes messages delivered by the listener.\n- **In-Memory Message Store**: A default implementation for testing and lightweight use cases.\n\n## 2. Message Store Interface\n\nThe `Store` interface is the core abstraction for message persistence. It defines the following operations:\n\n- `store(anydata message)`: Persists a message.\n- `retrieve()`: Retrieves the next available message for processing.\n- `acknowledge(string id, boolean success = true)`: Acknowledges the outcome of message processing.\n\n**Message Structure:**\n\n```ballerina\ntype Message record {|\n    readonly string id;\n    anydata payload;\n|};\n```\n\n**Store Interface:**\n\n```ballerina\ntype Store isolated client object {\n    isolated remote function store(anydata message) returns error?;\n    isolated remote function retrieve() returns Message|error?;\n    isolated remote function acknowledge(string id, boolean success = true) returns error?;\n};\n```\n\n## 3. Store Listener\n\nThe `StoreListener` class orchestrates message consumption from a `Store` implementation. It polls the store at a \nconfigurable interval, dispatches messages to an attached service, and manages retries and DLQ handling.\n\n**Configuration:**\n\n```ballerina\ntype StoreListenerConfiguration record {|\n    decimal pollingInterval = 1;\n    int maxRetries = 3;\n    decimal retryInterval = 1;\n    boolean ackWithFailureAfterMaxRetries = true;\n    Store deadLetterStore?;\n|};\n```\n\n**Key Features:**\n\n- Configurable polling, retry, and DLQ behavior\n- Attachable service for message processing\n- Graceful and immediate stop operations\n\n## 4. Message Store Service\n\nA `StoreService` is a service object that processes messages delivered by the listener. It must implement the following \nmethod:\n\n```ballerina\ntype StoreService distinct isolated service object {\n    isolated remote function onMessage(anydata message) returns error?;\n};\n```\n\nIf `onMessage` returns an error, the listener will retry processing according to the configuration. After exhausting \nretries, the message can be dropped or moved to a DLQ.\n\n## 5. In-Memory Message Store\n\nThe `InMemoryMessageStore` is a built-in implementation of the `Store` interface. It is suitable for testing and \nlightweight scenarios where persistence is not required.\n\n## 6. Example Usage\n\n```ballerina\nimport ballerina/messaging;\n\nmessaging:Store msgStore = new messaging:InMemoryMessageStore();\nlistener messaging:StoreListener msgStoreListener = new(msgStore, {\n    pollingInterval: 10,\n    maxRetries: 2,\n    retryInterval: 2\n});\n\nservice on msgStoreListener {\n    isolated remote function onMessage(anydata payload) returns error? {\n        // Process the message\n    }\n}\n```\n\n## 7. Extensibility\n\nDevelopers can implement the `Store` interface to integrate with custom message brokers or databases. The listener and \nservice patterns remain unchanged, ensuring consistent application logic regardless of the underlying store technology.\n\n```ballerina\npublic isolated client class CustomStore {\n    *messaging:Store;\n    \n    isolated remote function store(anydata message) returns error? {\n        // Custom implementation to store the message\n    }\n\n    isolated remote function retrieve() returns Message|error? {\n        // Custom implementation to retrieve a message\n    }\n\n    isolated remote function acknowledge(string id, boolean success = true) returns error? {\n        // Custom implementation to acknowledge a message\n    }\n}\n```\n","codeSnippets":"[[788959899,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Message</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> string</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    anydata</span><span style=\\\"color:#24292E\\\"> payload;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-661352391,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Store</span><span style=\\\"color:#D73A49\\\"> isolated</span><span style=\\\"color:#D73A49\\\"> client</span><span style=\\\"color:#D73A49\\\"> object</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    isolated</span><span style=\\\"color:#D73A49\\\"> remote</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> store</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">anydata</span><span style=\\\"color:#E36209\\\"> message</span><span style=\\\"color:#24292E\\\">) </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#D73A49\\\"> error?</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    isolated</span><span style=\\\"color:#D73A49\\\"> remote</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> retrieve</span><span style=\\\"color:#24292E\\\">() </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#24292E\\\"> Message</span><span style=\\\"color:#D73A49\\\">|error?</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    isolated</span><span style=\\\"color:#D73A49\\\"> remote</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> acknowledge</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">string</span><span style=\\\"color:#E36209\\\"> id</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">boolean</span><span style=\\\"color:#E36209\\\"> success</span><span style=\\\"color:#D73A49\\\"> =</span><span style=\\\"color:#005CC5\\\"> true</span><span style=\\\"color:#24292E\\\">) </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#D73A49\\\"> error?</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[656927497,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> StoreListenerConfiguration</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    decimal</span><span style=\\\"color:#24292E\\\"> pollingInterval </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#005CC5\\\"> 1</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    int</span><span style=\\\"color:#24292E\\\"> maxRetries </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#005CC5\\\"> 3</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    decimal</span><span style=\\\"color:#24292E\\\"> retryInterval </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#005CC5\\\"> 1</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    boolean</span><span style=\\\"color:#24292E\\\"> ackWithFailureAfterMaxRetries </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#D73A49\\\"> true</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    Store deadLetterStore</span><span style=\\\"color:#D73A49\\\">?</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[1403504060,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> StoreService</span><span style=\\\"color:#D73A49\\\"> distinct</span><span style=\\\"color:#D73A49\\\"> isolated</span><span style=\\\"color:#D73A49\\\"> service</span><span style=\\\"color:#D73A49\\\"> object</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    isolated</span><span style=\\\"color:#D73A49\\\"> remote</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> onMessage</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">anydata</span><span style=\\\"color:#E36209\\\"> message</span><span style=\\\"color:#24292E\\\">) </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#D73A49\\\"> error?</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-2048636052,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">import</span><span style=\\\"color:#24292E\\\"> ballerina/messaging;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">messaging</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\">Store msgStore </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#D73A49\\\"> new</span><span style=\\\"color:#24292E\\\"> messaging</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#6F42C1\\\">InMemoryMessageStore</span><span style=\\\"color:#24292E\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">listener</span><span style=\\\"color:#24292E\\\"> messaging</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\">StoreListener msgStoreListener </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#D73A49\\\"> new</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#E36209\\\">msgStore</span><span style=\\\"color:#24292E\\\">, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    pollingInterval</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#005CC5\\\"> 10</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    maxRetries</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#005CC5\\\"> 2</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    retryInterval</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#005CC5\\\"> 2</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">});</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">service</span><span style=\\\"color:#D73A49\\\"> on</span><span style=\\\"color:#24292E\\\"> msgStoreListener {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    isolated</span><span style=\\\"color:#D73A49\\\"> remote</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> onMessage</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">anydata</span><span style=\\\"color:#E36209\\\"> payload</span><span style=\\\"color:#24292E\\\">) </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#D73A49\\\"> error?</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">        // Process the message</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[-791652089,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">public</span><span style=\\\"color:#D73A49\\\"> isolated</span><span style=\\\"color:#D73A49\\\"> client class</span><span style=\\\"color:#6F42C1\\\"> CustomStore</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    *</span><span style=\\\"color:#24292E\\\">messaging</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\">Store;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    isolated</span><span style=\\\"color:#D73A49\\\"> remote</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> store</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">anydata</span><span style=\\\"color:#E36209\\\"> message</span><span style=\\\"color:#24292E\\\">) </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#D73A49\\\"> error?</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">        // Custom implementation to store the message</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    isolated</span><span style=\\\"color:#D73A49\\\"> remote</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> retrieve</span><span style=\\\"color:#24292E\\\">() </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#24292E\\\"> Message</span><span style=\\\"color:#D73A49\\\">|error?</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">        // Custom implementation to retrieve a message</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    isolated</span><span style=\\\"color:#D73A49\\\"> remote</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> acknowledge</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">string</span><span style=\\\"color:#E36209\\\"> id</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#005CC5\\\">boolean</span><span style=\\\"color:#E36209\\\"> success</span><span style=\\\"color:#D73A49\\\"> =</span><span style=\\\"color:#005CC5\\\"> true</span><span style=\\\"color:#24292E\\\">) </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#D73A49\\\"> error?</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">        // Custom implementation to acknowledge a message</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"]]"},"__N_SSG":true}