{"pageProps":{"frontmatter":{"title":"Build Ballerina from source","description":"Follow this guide to build Ballerina from source and contribute to the project..","keywords":"ballerina, installing ballerina, programming language, ballerina installation, build from source"},"content":"\n## Overview\n\n[Building the complete Ballerina distribution](#building-the-complete-ballerina-distribution) provides you access to all the main features of Ballerina such as the runtime, corresponding tools, standard library modules etc.\n\n>**Info:** However, if you need just a plain Ballerina language build with only the basic language features and the JBallerina Java (Java Introp) API in it, you can [build only the Ballerina Runtime with the tools](#building-only-the-ballerina-runtime-with-the-tools)\n\n\n## Set up the prerequisites\n\nFollow the steps below to set up the prerequisites.\n\n1. Download and [set up](https://adoptopenjdk.net/installation.html) OpenJDK 17 ([Adopt OpenJDK](https://adoptopenjdk.net/) or any other OpenJDK distribution).\n\n   >**Info:** You can also use [Oracle JDK](https://www.oracle.com/java/technologies/javase-downloads.html).\n\n2. Set up a [Personal Access Token](https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token) for your GitHub account and configure the following environment variables (the access token should have the `read` package permission).\n\n   **For Unix/macOS:**\n\n    ```\n    export packageUser=\"<YOUR_GITHUB_USERNAME>\";\n    export packagePAT=\"<YOUR_PERSONAL_ACCESS_TOKEN>\";\n    ```\n\n   **For Windows:**\n\n    ```\n    set packageUser=<YOUR_GITHUB_USERNAME>\n    set packagePAT=<YOUR_PERSONAL_ACCESS_TOKEN>\n    ```\n\n## Build the complete Ballerina distribution\n\nFollow the steps below to build the [`ballerina-distribution` repository](https://github.com/ballerina-platform/ballerina-distribution) to get full access to the complete Ballerina distribution.\n\n1. Fork the `ballerina-distribution` repository to your GitHub account and execute following command to clone it.\n\n    ```\n    $ git clone --recursive https://github.com/<GITHUB_USERNAME>/ballerina-distribution.git\n    ```\n\n2. Navigate to the `<BALLERINA_DISTRIBUTION_PROJECT>` directory, and execute the command below to start the build (here, the tests are excluded to speed up the build).\n\n   **For Unix/macOS:**\n\n    ```\n    $ ./gradlew clean build -x test\n    ```\n\n   **For Windows:**\n\n    ```\n    $ gradlew clean build -x test\n    ```\n\n3. Extract the built Ballerina Language distribution (i.e., the `<BALLERINA_DISTRIBUTION_PROJECT>/ballerina/build/distributions/ballerina-<VERSION>.zip` file) to a preferred location.\n\n4. Configure the environment variables below.\n\n   **For Unix/macOS:**\n\n    ```\n    # Set up the `BALLERINA_HOME` environment variable.\n    export BALLERINA_HOME=\"<YOUR_LOCATION>/ballerina-<VERSION>\";\n\n    # Include the binaries to the system `PATH`.\n    PATH=$BALLERINA_HOME/bin:$PATH;\n    export PATH;\n    ```\n\n   **For Windows:**\n\n    ```\n    # Set up the `BALLERINA_HOME` environment variable.\n    set BALLERINA_HOME=\"<YOUR_LOCATION>\\ballerina-<VERSION>\";\n\n    # Include the binaries to the system `PATH`.\n    set PATH=%PATH%;%BALLERINA_HOME%\\bin;\n    ```\n\n### Test the distribution build\n\nSince this is a complete Ballerina distribution build, this will have all the Standard Library module dependencies included in it.\n\nTherefore, follow the steps below to write a simple program using the Ballerina [`io` module](https://github.com/ballerina-platform/module-ballerina-io/) to test the distribution build.\n\n1. Create a `hello_world_with_io.bal` file with the code below.\n\n    ```ballerina\n    import ballerina/io;\n\n    // ballerina hello world program\n    public function main() {\n          io:println(\"Hello, World with IO!\");\n    }\n    ```\n\n2. Execute the command below to build and run this program.\n\n    ```\n    $ bal run hello_world_with_io.bal\n    ```\n\n   If your build is successful, you view the output below.\n\n    ```\n    Hello, World with IO!\n    ```\n\n## Build only the Ballerina runtime with the tools\n\nFollow the steps below to build just the Ballerina runtime with the corresponding tools.\n\n1. Fork the [`ballerina-lang` repository](https://github.com/ballerina-platform/ballerina-lang) to your GitHub account and execute following command to clone it.\n\n    ```\n    $ git clone --recursive https://github.com/<GITHUB_USERNAME>/ballerina-lang.git\n    ```\n\n2. Navigate to the `<BALLERINA_LANG_PROJECT>` directory, and execute the command below to update the Git submodules.\n\n    ```\n    $ git submodule update --init\n    ```\n\n3. Execute one of the commands below to start the build process.\n\n   **For Unix/macOS:**\n\n    ```\n    $ ./gradlew clean build\n    ```\n\n   **For Windows:**\n\n    ```\n    $ gradlew clean build\n    ```\n\n4. Extract the built Ballerina Language distribution (i.e., the `<BALLERINA_LANG_PROJECT>/distribution/zip/jballerina-tools/build/distributions/jballerina-tools-<VERSION>.zip` file) to a preferred location.\n\n5. Configure the environment variables below.\n\n   **For Unix/macOS:**\n\n    ```\n    # Set up the `BALLERINA_HOME` environment variable.\n    export BALLERINA_HOME=\"<YOUR_LOCATION>/jballerina-tools-<VERSION>\";\n\n    # Include the binaries to the system `PATH`.\n    PATH=$BALLERINA_HOME/bin:$PATH;\n    export PATH;\n    ```\n\n   **For Windows:**\n\n    ```\n    # Set up the `BALLERINA_HOME` environment variable.\n    set BALLERINA_HOME=\"<YOUR_LOCATION>\\jballerina-tools-<VERSION>\";\n\n    # Include the binaries to the system `PATH`.\n    set PATH=%PATH%:%BALLERINA_HOME%\\bin;\n    ```\n\n### Test the runtime build\n\nSince this runtime build is just a plain Ballerina language build, you only have the basic language features and JBallerina Java (Java Introp) API in it.\n\nTherefore, follow the steps below to write a basic Ballerina program using only those functionalities to test the runtime build.\n\n1. Create a `hello_world.bal` file with the code below.\n\n    ```ballerina\n    import ballerina/jballerina.java;\n\n    public function main(string... args) {\n        var systemOut = out();\n        println(systemOut, java:fromString(\"Hello, World!\"));\n    }\n\n    // Retrieves the current System output stream\n    public function out() returns handle = @java:FieldGet {\n        name: \"out\",\n        'class: \"java.lang.System\"\n    } external;\n\n    // Calls `println` method of the  `PrintStream`\n    function println(handle receiver, handle message) = @java:Method {\n        paramTypes: [\"java.lang.String\"],\n        'class: \"java.io.PrintStream\"\n    } external;\n    ```\n\n2. Execute the command below to build and run this program.\n\n    ```\n    $ bal run hello_world.bal\n    ```\n\n   If your build is successful, you view the output below.\n\n    ```\n    Hello, World!\n    ```\n\n","id":"build-ballerina-from-source","codes":"[[-479928620,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">import</span><span style=\\\"color:#24292E\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">// ballerina hello world program</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">public</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> main</span><span style=\\\"color:#24292E\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">      io</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#6F42C1\\\">println</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#032F62\\\">\\\"Hello, World with IO!\\\"</span><span style=\\\"color:#24292E\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[-602525295,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">import</span><span style=\\\"color:#24292E\\\"> ballerina/jballerina.java;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">public</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> main</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#005CC5\\\">string</span><span style=\\\"color:#D73A49\\\">...</span><span style=\\\"color:#E36209\\\"> args</span><span style=\\\"color:#24292E\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    var</span><span style=\\\"color:#24292E\\\"> systemOut </span><span style=\\\"color:#D73A49\\\">=</span><span style=\\\"color:#6F42C1\\\"> out</span><span style=\\\"color:#24292E\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1\\\">    println</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#E36209\\\">systemOut</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">java</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#6F42C1\\\">fromString</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#032F62\\\">\\\"Hello, World!\\\"</span><span style=\\\"color:#24292E\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">// Retrieves the current System output stream</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">public</span><span style=\\\"color:#D73A49\\\"> function</span><span style=\\\"color:#6F42C1\\\"> out</span><span style=\\\"color:#24292E\\\">() </span><span style=\\\"color:#D73A49\\\">returns</span><span style=\\\"color:#D73A49\\\"> handle</span><span style=\\\"color:#D73A49\\\"> =</span><span style=\\\"color:#24292E\\\"> @</span><span style=\\\"color:#005CC5\\\">java</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">FieldGet</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    name</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#032F62\\\"> \\\"out\\\"</span><span style=\\\"color:#24292E\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    'class</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#032F62\\\"> \\\"java.lang.System\\\"</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">} </span><span style=\\\"color:#D73A49\\\">external</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">// Calls `println` method of the  `PrintStream`</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">function</span><span style=\\\"color:#6F42C1\\\"> println</span><span style=\\\"color:#24292E\\\">(</span><span style=\\\"color:#D73A49\\\">handle</span><span style=\\\"color:#E36209\\\"> receiver</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#E36209\\\">handle</span><span style=\\\"color:#E36209\\\"> message</span><span style=\\\"color:#24292E\\\">) = @</span><span style=\\\"color:#005CC5\\\">java</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Method</span><span style=\\\"color:#24292E\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    paramTypes</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\"> [</span><span style=\\\"color:#032F62\\\">\\\"java.lang.String\\\"</span><span style=\\\"color:#24292E\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    'class</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#032F62\\\"> \\\"java.io.PrintStream\\\"</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">} </span><span style=\\\"color:#D73A49\\\">external</span><span style=\\\"color:#24292E\\\">;</span></span></code></pre>\"]]"},"__N_SSG":true}