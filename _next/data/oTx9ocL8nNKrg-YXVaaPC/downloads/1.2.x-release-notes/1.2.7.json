{"pageProps":{"frontmatter":{"layout":"ballerina-left-nav-release-notes","title":"1.2.7","permalink":"/downloads/1.2.x-release-notes/1.2.7/","active":"1.2.7","redirect_from":null},"content":"\n### Overview of jBallerina 1.2.7\nThe jBallerina 1.2.7 patch release improves upon the 1.2.6 release by introducing the features listed below and addressing a number of [bugs](https://github.com/ballerina-platform/ballerina-lang/issues?q=is%3Aissue+milestone%3A%22Ballerina+1.2.7%22+label%3AType%2FBug+is%3Aclosed) and [improvements](https://github.com/ballerina-platform/ballerina-lang/issues?q=is%3Aissue+milestone%3A%22Ballerina+1.2.7%22+is%3Aclosed+label%3AType%2FImprovement).\n\nYou can use the update tool to update to jBallerina 1.2.7 as follows.\n\n**For existing users:**\n\nIf you are already using jBallerina version 1.2.0, or above, you can directly update your distribution to jBallerina {{ site.data.stable-latest.metadata.version }} by executing the following command:\n\n> ballerina dist update\n\nHowever, you need to use the following commands instead of the above if you have installed:\n\n- jBallerina 1.2.0 but switched to a previous version: `ballerina dist pull jballerina-1.2.7`\n- a jBallerina version below 1.1.0: install via the [installers](https://ballerina.io/downloads/)\n\n**For new users:**\n\nIf you have not installed jBallerina, then download the [installers](https://ballerina.io/downloads/) to install.\n\n#### Standard library\n\n##### I/O\n\nWhen a CSV file has an empty record, the previous implementation panicked. This is fixed with this release.\n\n#### Developer tools\n\n##### Test framework\n\n###### Object mocking\n\nObject mocking enables controlling the values of member variables and the behavior of the member functions of an object. The following improvements are introduced with regard to this.\n\n- Ability to create a test double, which provides an equivalent mock in place of the real object\n- Capability of stubbing the member function or member variable\n\nObject mocking is done by using the following functions.\n\n- The `test:mock()` and `test:prepare()` functions are used to initialize the mocking capability\n- The `test:prepare()` function allows to use the associated mocking functions like `thenReturn()`, `thenReturnSequence()`, `doNothing()`, and `withArguments()`\n\n###### Function mocking\n\n- The `MockFunction` object is added to handle function mocking. `MockFunction` objects are defined by attaching the `@test:Mock` to the `MockFunction` object to specify the function to mock\n- The mocking API also supports scoping and stubbing of mock functions that are declared for functions in imported modules\n\nFunction mocking is done by using the following functions.\n\n- The `test:when(mockObj)` function is used to initialize the mocking capability within a particular test case\n- This allows you to use the associated mocking functions like `call()`, `thenReturn()`, and `withArguments()`\n","id":"1.2.7"},"__N_SSG":true}