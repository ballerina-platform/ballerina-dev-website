{"pageProps":{"frontmatter":{"layout":"ballerina-persist-documentation-left-nav-pages-swanlake","title":"Data model","description":"The sections gives details on the data model.","keywords":"ballerina, programming language, ballerina packages, persist, data model, persist data model, persist entity type, persist simple type","permalink":"/learn/ballerina-persist/persist-model/","active":"persist_model","intro":"The data model defines a mechanism to express the application's data using the Ballerina record type. Any record type that is a subtype of the `EntityType` will be an entity in the model."},"content":"\nWithin a Ballerina project, the data model should be defined in a separate BAL file under the `persist` directory. This file is not considered as a part of the Ballerina project and is used only for the data model definition.\n\n## The `EntityType` definition\n\nAn `EntityType` is defined using the `SimpleType` and `EntityType` fields.\n\n```ballerina\ntype SimpleType ()|boolean|int|float|decimal|string|byte[]|time:Date|time:TimeOfDay|time:Utc|time:Civil;\ntype EntityType record {|\n   SimpleType|EntityType|EntityType[]...;\n|};\n```\n\n### `Simple` type:\nFrom the data source perspective, a field of `SimpleType` contains only one value (i.e., each `SimpleType` field maps to a field of data).\n> *Note*: This does not support the union type of `SimpleType`( i.e., `int|string` is not supported).\n\n### `Entity` type\nAn entity can contain fields of the `SimpleType`, `EntityType`, or `EntityType[]`. This design uses fields of type `EntityType` or `EntityType[]` to define associations between two entities.\n\nBelow are some examples of subtypes of the entity type:\n\n```ballerina\n// Valid.\ntype Employee record {|\n   int id; // SimpleType\n   string fname; // SimpleType\n   string lname; // SimpleType\n   Department department; // EntityType\n|};\n\n\n// This is valid.\ntype Department record {|\n   int id;\n   string name;\n   byte[] logo;\n   Employee[] employees; // EntityType\n|};\n\n\n// Invalid\ntype Employee record {|\n   int|string id; \n   string fname;\n   string lname;\n   Department department; // EntityType\n|};\n```\n`Simple` types are mapped to native data source types. Depending on the data store, the mapping may vary. Refer to the [Supported data stores](/learn/supported-data-stores/) to learn more about the mapping.\n\n## Entity attributes definition\n\nBallerina record fields are used to model the attributes of an entity. The type of the field should be a subtype of `SimpleType`.\n\n### Identity field(s)\n\nThe entity must contain at least one identity field. This field's value is used to identify each record uniquely. The identity field(s) is indicated by the `readonly` flag.\n\nSay type T is one of `int`, `string`, `float`, `boolean` or `decimal` types,\n\n```ballerina\ntype EntityType record {|\n    readonly T <fieldName>;\n|} \n```\nThe identity field can be a single field or a combination of multiple fields as follows.\n\n```ballerina\ntype EntityType record {|\n    readonly T <fieldName1>;\n    readonly T <fieldName2>;\n|} \n```\n\n### Nullable field(s)\n\nSay type T is a subtype of `SimpleType`, and T does not contain (),\n\n| Field definition |                 Semantics                 | Supported data sources |        Examples        |   \n|:----------------:|:-----------------------------------------:|:----------------------:|:----------------------:|\n|       `T`        | Mapped to a non-nullable column in the DB |          All           |       `int id;`        |  \n|    `T? field`    |   Mapped to a nullable column in the DB   |    All except Redis    | `string? description;` |  \n|    `T field?`    |  The field can be ignored when inserting  |         Redis          | `string description?;` |  \n|   `T? field?`    |              Invalid syntax               |           -            |           -            |  \n\n## Relationship definition\n\nBallerina record fields are used to model a connection between two entities. The type of the field should be a subtype of `EntityType|EntityType?|EntityType[]`.\n\nThis design supports the following cardinalities.\n1. One-to-one (`1-1`)\n2. One-to-many (`1-n`)\n\nThe relation field is mandatory in both entities.\n\n### One-to-one (1-1)\n\nA 1-1 relationship is defined by a field of the `EntityType` in one entity and `EntityType?` in the other. For example, consider the `Car` and `User` entities. Assume that a car can have only one owner and a user can own at most one car.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   User owner;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n   Car? car;\n|};\n```\n\nThe above entities explain the following.\n- A `Car` must have a `User` as the owner.\n- A `User` may or may not own a `Car`.\n\nThe Ballerina record type generated from the above entities will be as follows.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   int ownerId;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n|};\n```\n\nIn the first record (`Car`), the `EntityType` field `owner` is taken as the owner in the 1-1 relationship and will include the foreign key of the second record (`User`).\n\nThe default foreign key field name will be `ownerId` in the `Car` table, which refers to the identity field of the `User` table by default. You can change this foreign key name and have more control with the `@sql:Relation` annotation.\n\n\n### One-to-many (1-n)\n\nA 1-n relationship is defined by a field of the `EntityType` in one entity and `EntityType[]` in the other. For example, consider the `Car` and `User` entities. Assume that a car can have only one owner and a user can own multiple cars.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   User owner;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n   Car[] cars;\n|};\n```\n\nThe above entities explain the following.\n- A `Car` must have a `User` as the owner.\n- A `User` may own multiple `Car`s or do not own one (represented with an empty array `[]`).\n\nThe Ballerina record type generated from the above entities will be as follows.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   int ownerId;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n|};\n```\n\nThe entity that contains the field of the `EntityType` is taken as the owner in the `1-n` relationship and will include the foreign key.\n\nThe default foreign key field name will be `ownerId` in the `Car` table, which refers to the identity field of the `User` table by default. You can change this foreign key name and have more control with the `@sql:Relation` annotation.\n\n### Many-to-many (`n-n`)\n\nAn `n-n` relationship is defined by two `1-n` relationships. The joining entity is used to map the two entities. The joining entity should contain two fields of the`EntityType` that refer to the two entities in the relationship. For example, consider `Car` and `User` entities. Assume that a car can have multiple owners and a user can own multiple cars.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   CarUser[] owners;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n   CarUser[] cars;\n|};\n\ntype CarUser record {|\n   readonly int id; \n   Car car;\n   User user;\n|};\n\n```\n\nThe above entities explain the following.\n\n- A `Car` may have multiple `User`s as owners.\n- A `User` may own multiple `Car`s.\n\nThe Ballerina record type generated from the above entities will be as follows.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n|};\n\ntype CarUser record {|\n   readonly int id; \n   int userId;\n   int carId;\n|};\n```\n\nThe `CarUser` `join` entity contains two fields of the EntityType` that refer to the two entities in the relationship.\nThe foreign key field names will be `userId`, and `carId` in the `CarUser` table, which refer to the identity field of the `User` and `Car` tables.\n\n## Advanced SQL annotations\n\nTo have a custom name and type mappings in the database implementation and to declare indexes, generated fields, and custom foreign keys, the below annotations can be used in the data model definition. Note that these annotations can only be used with SQL data stores.\n\nIn order to use them, you must first import the `persist.sql` package to your data model definition file as follows.\n\n```ballerina\nimport ballerinax/persist.sql;\n```\n\n### Name mapping with `Name` annotation\n\n- Map entity name to table name\n\n```ballerina\n@sql:Name {value: \"people\"}\ntype Person record {|\n    readonly int id;\n    string name;\n    string address;\n|};\n```\n\nThe `Person` entity will be mapped to the `people` table in the database.\n\n- Map field name to column name\n\n```ballerina\ntype Person record {|\n    @sql:Name {value: \"person_id\"}\n    readonly int id;\n    @sql:Name {value: \"full_name\"}\n    string name;\n    string address;\n|};\n```\n\nThe `id` field will be mapped to the `person_id` column in the database, and the `name` field will be mapped to the `full_name` column in the database.\n\n### Type mapping\n\n#### `Varchar` annotation\n\n```ballerina\ntype Person record {|\n    readonly int id;\n    @sql:Varchar {length: 100}\n    string name;\n    string address;\n|};\n```\n\nThe `name` field will have a `VARCHAR(100)` column in the database. The `@sql:Varchar` annotation can only be used on `string` fields.\n\n#### `Char` annotation\n\n```ballerina\ntype Person record {|\n    @sql:Char {length: 12}\n    readonly string nic;\n    string name;\n    string address;\n|};\n```\n\nThe `nic` field will have a `CHAR(12)` column in the database. The `@sql:Char` annotation can only be used on `string` fields.\n\n#### `Decimal` annotation\n\n```ballerina\ntype Person record {|\n    readonly int id;\n    @sql:Decimal {precision: [10,2]}\n    decimal salary;\n    string address;\n|};\n```\n\nThe `salary` field will have a `DECIMAL(10,2)` column in the database. The `@sql:Decimal` annotation can only be used on `decimal` fields.\n\n### Declare indexes\n\n#### `Index` annotation\n\nThis annotation lets you define an index on a specific field. Optionally, you can provide an index name as a `string` or a set of index names as a `string[]` in situations where a single field takes part in multiple indexes. A composite index can be created by repeating the same index name in multiple fields. In this case, the order of index columns will be the order in which the respective fields are declared in the record type.\n\n```ballerina\ntype Person record {|\n    @sql:Index {name: \"idx_name\"}\n    readonly int id;\n    @sql:Index {name: [\"idx_name\", \"idx_another\"]}\n    string name;\n    @sql:Index\n    string address;\n|};\n```\n\nThe index `idx_name` is a composite index consisting of `id` and `name` fields. `idx_another` is just another index on the `name` field. The `address` field also has the `@sql:Index` annotation without the `name` property. Here, the index name will be generated by `persist` in `idx_[FIELD_NAME]` format, in which case the index name for the `address` field will become `idx_address`.\n\n#### `UniqueIndex` annotation\n\nThis annotation lets you define a unique index on a specific field, and the usage is similar to the `@sql:Index` annotation.\n\n```ballerina\ntype Person record {|\n    readonly int id;\n    @sql:UniqueIndex {name: \"idx_person\"}\n    string nic;\n    @sql:UniqueIndex {name: [\"idx_person\", \"idx_another\"]}\n    string name;\n    @sql:UniqueIndex\n    string address;\n|};\n```\n\nThe unique index `idx_person` is a composite unique index consisting of `nic` and `name` fields. `idx_another` is just another unique index on the `name` field. The `address` field also has the `@sql:UniqueIndex` annotation without the `name` property. Here, the index name will be generated by `persist` in the `unique_idx_[FIELD_NAME]` format, in which case the index name for the `address` field becomes `unique_idx_address`.\n\n### Declare generated fields with `Generated` annotation\n\nThe `@sql:Generated` annotation is used to declare a field as a generated field. This annotation can only be used on `readonly int` fields. Currently, only the `AUTO_INCREMENT` or an equivalent generation strategy is supported.\n\n```ballerina\ntype Person record {|\n    @sql:Generated\n    readonly int id;\n    string name;\n    string address;\n|};\n```\n\nThe `id` field will be auto-generated and the [`PersonInsert`](/learn/persist-client-api/#insert-types) type will not have the `id` field as it should be auto-generated by the database. Refer the below table to understand how the generation strategy is implemented in different data stores.\n\n|  Data store  |  Implementation  |\n|:------------:|:----------------:|\n|   `MySQL`    | `AUTO_INCREMENT` |\n|   `MSSQL`    | `IDENTITY(1,1)`  |\n| `PostgreSQL` |     `SERIAL`     |\n|     `H2`     | `AUTO_INCREMENT` |\n\n\n### Declare custom foreign keys with `Relation` annotation\n\nThe `@sql:Relation` annotation can be used to declare your own custom foreign key field. You must put the foreign key on the correct side of the relationship (owner) and the key field must exist on the record type, and must be of the same type as the primary key of the referred entity. This is particularly useful when a foreign key is also a part of the composite primary key.\n\n```ballerina\ntype Car record {|\n   readonly int id;\n   string name;\n   int userId;\n   @sql:Relation {keys: [\"userId\"]}\n   User owner;\n|};\n\ntype User record {|\n   readonly int id;\n   string name;\n   Car[] cars;\n|};\n```\n\nThe `keys` field accepts an array of foreign keys and the length of it must be the same as the number of primary keys the referring entity has. Here, the field `userId` is used as the foreign key for the relation `owner` and it has been declared so through the `@sql:Relation` annotation. When the `@sql:Relation` annotation is used in a relation field, the foreign key will not be generated by default.\n","id":"persist-model","sub":"ballerina-persist","third":"","slug":"ballerina-persist/persist-model","codes":"[[-474084244,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> SimpleType</span><span style=\\\"color:#24292E\\\"> ()</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#005CC5\\\">boolean</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#005CC5\\\">int</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#005CC5\\\">float</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#005CC5\\\">decimal</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#005CC5\\\">string</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#005CC5\\\">byte</span><span style=\\\"color:#24292E\\\">[]</span><span style=\\\"color:#D73A49\\\">|time:</span><span style=\\\"color:#24292E\\\">Date</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">time:TimeOfDay</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">time:Utc</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">time:Civil;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> EntityType</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   SimpleType</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">EntityType</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">EntityType[]</span><span style=\\\"color:#D73A49\\\">...</span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-1817020057,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">// Valid.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Employee</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   int</span><span style=\\\"color:#24292E\\\"> id; </span><span style=\\\"color:#6A737D\\\">// SimpleType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> fname; </span><span style=\\\"color:#6A737D\\\">// SimpleType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> lname; </span><span style=\\\"color:#6A737D\\\">// SimpleType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   Department department; </span><span style=\\\"color:#6A737D\\\">// EntityType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">// This is valid.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Department</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   byte</span><span style=\\\"color:#24292E\\\">[] logo;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   Employee[] employees; </span><span style=\\\"color:#6A737D\\\">// EntityType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\">// Invalid</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Employee</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   int</span><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#005CC5\\\">string</span><span style=\\\"color:#24292E\\\"> id; </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> fname;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> lname;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   Department department; </span><span style=\\\"color:#6A737D\\\">// EntityType</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-1045143246,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> EntityType</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#24292E\\\"> T </span><span style=\\\"color:#D73A49\\\">&#x3C;</span><span style=\\\"color:#24292E\\\">fieldName</span><span style=\\\"color:#D73A49\\\">></span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[-1975341129,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> EntityType</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#24292E\\\"> T </span><span style=\\\"color:#D73A49\\\">&#x3C;</span><span style=\\\"color:#24292E\\\">fieldName1</span><span style=\\\"color:#D73A49\\\">></span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#24292E\\\"> T </span><span style=\\\"color:#D73A49\\\">&#x3C;</span><span style=\\\"color:#24292E\\\">fieldName2</span><span style=\\\"color:#D73A49\\\">></span><span style=\\\"color:#24292E\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">}</span></span></code></pre>\"],[2141137538,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Car</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   User owner;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> User</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   Car</span><span style=\\\"color:#D73A49\\\">?</span><span style=\\\"color:#24292E\\\"> car;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-1781065865,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Car</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   int</span><span style=\\\"color:#24292E\\\"> ownerId;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> User</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-962338408,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Car</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   User owner;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> User</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   Car[] cars;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-1843789114,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Car</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   CarUser[] owners;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> User</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   CarUser[] cars;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> CarUser</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id; </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   Car car;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   User user;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[88041102,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Car</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> User</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> CarUser</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id; </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   int</span><span style=\\\"color:#24292E\\\"> userId;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   int</span><span style=\\\"color:#24292E\\\"> carId;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-1051692493,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">import</span><span style=\\\"color:#24292E\\\"> ballerinax/persist.sql;</span></span></code></pre>\"],[1266165236,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">@</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Name</span><span style=\\\"color:#24292E\\\"> {value</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#032F62\\\"> \\\"people\\\"</span><span style=\\\"color:#24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Person</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[1697306877,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Person</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Name</span><span style=\\\"color:#24292E\\\"> {value</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#032F62\\\"> \\\"person_id\\\"</span><span style=\\\"color:#24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Name</span><span style=\\\"color:#24292E\\\"> {value</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#032F62\\\"> \\\"full_name\\\"</span><span style=\\\"color:#24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-319038839,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Person</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Varchar</span><span style=\\\"color:#24292E\\\"> {length</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#005CC5\\\"> 100</span><span style=\\\"color:#24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[1688670507,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Person</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Char</span><span style=\\\"color:#24292E\\\"> {length</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#005CC5\\\"> 12</span><span style=\\\"color:#24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> string</span><span style=\\\"color:#24292E\\\"> nic;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-647302774,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Person</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Decimal</span><span style=\\\"color:#24292E\\\"> {precision</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\"> [</span><span style=\\\"color:#005CC5\\\">10</span><span style=\\\"color:#24292E\\\">,</span><span style=\\\"color:#005CC5\\\">2</span><span style=\\\"color:#24292E\\\">]}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    decimal</span><span style=\\\"color:#24292E\\\"> salary;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-2035257380,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Person</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Index</span><span style=\\\"color:#24292E\\\"> {name</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#032F62\\\"> \\\"idx_name\\\"</span><span style=\\\"color:#24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Index</span><span style=\\\"color:#24292E\\\"> {name</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\"> [</span><span style=\\\"color:#032F62\\\">\\\"idx_name\\\"</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#032F62\\\">\\\"idx_another\\\"</span><span style=\\\"color:#24292E\\\">]}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Index</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[1499484341,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Person</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">UniqueIndex</span><span style=\\\"color:#24292E\\\"> {name</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#032F62\\\"> \\\"idx_person\\\"</span><span style=\\\"color:#24292E\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> nic;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">UniqueIndex</span><span style=\\\"color:#24292E\\\"> {name</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\"> [</span><span style=\\\"color:#032F62\\\">\\\"idx_person\\\"</span><span style=\\\"color:#24292E\\\">, </span><span style=\\\"color:#032F62\\\">\\\"idx_another\\\"</span><span style=\\\"color:#24292E\\\">]}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">UniqueIndex</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-1520056882,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Person</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">    @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Generated</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">    readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">    string</span><span style=\\\"color:#24292E\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"],[-680084756,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color:#fff;color:#24292e\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> Car</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   int</span><span style=\\\"color:#24292E\\\"> userId;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   @</span><span style=\\\"color:#005CC5\\\">sql</span><span style=\\\"color:#24292E\\\">:</span><span style=\\\"color:#005CC5\\\">Relation</span><span style=\\\"color:#24292E\\\"> {keys</span><span style=\\\"color:#D73A49\\\">:</span><span style=\\\"color:#24292E\\\"> [</span><span style=\\\"color:#032F62\\\">\\\"userId\\\"</span><span style=\\\"color:#24292E\\\">]}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   User owner;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">type</span><span style=\\\"color:#6F42C1\\\"> User</span><span style=\\\"color:#D73A49\\\"> record</span><span style=\\\"color:#24292E\\\"> {</span><span style=\\\"color:#D73A49\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">   readonly</span><span style=\\\"color:#005CC5\\\"> int</span><span style=\\\"color:#24292E\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5\\\">   string</span><span style=\\\"color:#24292E\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E\\\">   Car[] cars;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49\\\">|</span><span style=\\\"color:#24292E\\\">};</span></span></code></pre>\"]]"},"__N_SSG":true}