{"pageProps":{"frontmatter":{"layout":"ballerina-newsletter","issue":"2020 Issue #2 - July","title":"Why aren’t my microservices working?","description":"This is a periodic newsletter on Ballerina with hand-picked content and regular updates on the language.","keywords":"ballerina, community, ballerina community, newsletter","permalink":"/community/newsletter/2020-2/"},"content":"\n# Ballerina Newsletter 2020 Issue #2\n\n\n<table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"wso2_full_wrap\" style=\"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;background-color: #ffffff;height: 100% !important;margin: 0;mso-table-lspace: 0pt;mso-table-rspace: 0pt;padding: 0;\" width=\"100%\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td align=\"center\" style=\"-webkit-text-size-adjust: 100%;-ms-text-size-adjust: 100%;mso-table-lspace: 0pt;mso-table-rspace: 0pt;\" valign=\"top\">\n\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"templateHeader\" style=\"max-width: 950px;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;mso-table-lspace: 0pt;mso-table-rspace: 0pt;\" width=\"100%\">\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align=\"left\" class=\"headerContent\" style=\"-webkit-text-size-adjust: 100%;-ms-text-size-adjust: 100%;mso-table-lspace: 0pt;mso-table-rspace: 0pt;color: #505050;font-family: 'Roboto', Helvetica,sans-serif;font-size: 20px;font-weight: bold;line-height: 20px;text-align: left;vertical-align: middle;padding: 60px 10px 60px 10px;\" valign=\"top\"><a href=\"https://ballerina.io/\" style=\"text-decoration: none; border: 0;\"><img alt=\"Ballerina Newsletter\" src=\"https://wso2.cachefly.net/wso2/sites/all/images/ballerina-newsletter-new.png\" style=\"display: inline-block;height: 28px;\"></a>\n\t\t\t\t\t\t<p style=\"color: #585a5e;display: block;font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;font-weight: 500;line-height: 24px;margin: 0;text-align: left;padding-top: 8px;padding-bottom: 10px;\">Issue #2 - July 7, 2020</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 13px;color: #585a5e;line-height: 20px;font-weight: 400;text-align: left;font-style: italic;\">This is a recurring newsletter of content around Ballerina and related technology topics such as integration, microservices, distributed systems, and cloud computing.<br>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 26px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;margin-bottom: 16px;padding-top: 30px;\">Why aren’t my microservices working?</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">In the past few years, we have seen rapid growth in microservice adoption. But as of recent, microservices have been criticized. When they aren’t created and managed properly they can prove to be more detrimental than beneficial. To truly leverage the advantages of agility, scalability, reusability, and efficiency promised by microservices, you need to adopt the right tools and build your architecture in the most optimal manner.</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">The <a class=\"linkbody\" href=\"https://www.reactivemanifesto.org/\" style=\"color: rgba(0,0,0,0.87);text-decoration: underline;\" target=\"_blank\">reactive manifesto</a> is a set of guiding principles that help create a higher quality distributed system. A reactive system is <span style=\"font-style: italic;\">responsive, resilient, elastic, and message-driven</span>. You can effectively apply these concepts to the microservices world. More specifically, Ballerina, which was designed from the ground up to have first-class support for microservices, can fulfill this requirement with some easy-to-use developer abstractions. To learn more, read Anjana Fernando’s <a class=\"linkbody\" href=\"https://dzone.com/articles/reactive-microservices-done-right\" style=\"color: #20b6af;text-decoration: underline;\" target=\"_blank\">DZone article</a> on <span style=\"font-weight: 600;\">Reactive Microservice Done Right</span>.</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;margin-bottom: 6px;\">An effective communication approach between microservices is something you need to think about when designing your system, which includes choosing whether it needs synchronous or asynchronous communication or a mix of both. This should be determined by the nature of your service operations and the performance characteristics you require from the system. Ballerina has core features built-in that can be used to build microservices in either of these two patterns. Read Anjana’s <a class=\"linkbody\" href=\"https://dzone.com/articles/practical-microservices-development-patterns-sync\" style=\"color: #20b6af;text-decoration: underline;\" target=\"_blank\">DZone article</a> on <span style=\"font-weight: 600;\">Practical Microservices Development Patterns: Sync vs. Async</span> to learn more.</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;margin-bottom: 6px;    padding-bottom: 20px;\">Most often, developers design, architect, and implement microservices without thinking about deployment, causing them to underperform in the given execution environment. This happens because deployment is currently not a part of the programming process of creating, building, and running. To solve this, Ballerina has introduced a set of cloud native abstractions and tools into the language to write microservices that <span style=\"font-style: italic;\">just work</span> in platforms like Kubernetes. Read Lakmal Warusawithana’s <a class=\"linkbody\" href=\"https://dzone.com/articles/microservices-in-practice-deployment\" style=\"color: #20b6af;text-decoration: underline;\" target=\"_blank\">DZone article</a> on <span style=\"font-weight: 600;\">Microservices in Practice: Deployment Should Not Be an Afterthought</span> to learn more.</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 26px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;margin-bottom: 16px;\">What’s New in Ballerina?</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;margin-bottom: 6px;\">Ballerina 1.0, which was released in September 2019, implemented the 2019-R3 specification. Although this provided us with a good foundation, we needed to make a few changes to make it even better for building integration features like transactions, querying, streams, and improving features like table support, database integration, XML support, and JSON support.</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;margin-bottom: 6px;\">That’s why we released the first preview version of the all-new Ballerina Swan Lake on June 20 (which is backward incompatible with Ballerina 1.2). Ballerina Swan Lake will be a major new version of Ballerina that we plan to release in January 2021. Read our release blog for <a class=\"linkbody\" href=\"https://blog.ballerina.io/posts/announcing-the-first-preview-of-ballerina-swan-lake/?utm_source=mailer&amp;utm_medium=email&amp;utm_campaign=mailer_ballerina_nwsltr_july20\" style=\"color: #20b6af;text-decoration: underline;\" target=\"_blank\">more information</a>.</p>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;margin-bottom: 6px;\">Here are some key features of Ballerina Swan Lake Preview 1:</p>\n\n\t\t\t\t\t\t<ul style=\"margin-top: 6px;margin-bottom: 6px;padding-bottom: 20px;\">\n\t\t\t\t\t\t\t<li style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">Immutability in the type system, which guarantees that <a class=\"linkbody\" href=\"https://ballerina.io/swan-lake/learn/by-example/readonly-type.html?utm_source=mailer&amp;utm_medium=email&amp;utm_campaign=mailer_ballerina_nwsltr_july20\" style=\"color: #20b6af;\" target=\"_blank\">immutable</a> values stay unchanged</li>\n\t\t\t\t\t\t\t<li style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\"><span style=\"font-family: 'Courier Prime', monospace, Menlo,Monaco,Consolas;\">distinct</span> types bring native support for nominal typing into the structural type system in Ballerina</li>\n\t\t\t\t\t\t\t<li style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">Improved error type design eliminates pain-points in the previous version. The `distinct error` type allows you to define more refined error types that support common error handling use cases</li>\n\t\t\t\t\t\t\t<li style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">Improved transaction support in the language designed to make it easier and more convenient to write robust applications in Ballerina</li>\n\t\t\t\t\t\t\t<li style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">Enhanced query expressions that bring the power of SQL-like query capabilities directly into the language as comprehensions for data processing</li>\n\t\t\t\t\t\t\t<li style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">Introducing the `table` type: A new built-in collection type that works like a general-purpose hash table, where the keys are part of the values being stored</li>\n\t\t\t\t\t\t\t<li style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">Improved Ballerina SQL module API that leverages the latest languages features such as stream type, query expressions, and raw templates</li>\n\t\t\t\t\t\t\t<li style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;\">The new <a class=\"linkbody\" href=\"https://ballerina.io/swan-lake/learn/by-example/testerina-mocking-functions.html?utm_source=mailer&amp;utm_medium=email&amp;utm_campaign=mailer_ballerina_nwsltr_july20\" style=\"color: #20b6af;\" target=\"_blank\">mocking API</a>, which helps you to mock an entire object or a function allowing you to test your code independent of external dependencies</li>\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t<p style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size: 14px;color: rgba(0,0,0,0.87);line-height: 21px;font-weight: 400;text-align: left;padding-bottom: 20px;\">We hope you found this information useful. We’ll catch you again soon!</p>\n\n\t\t\t\t\t\t<hr style=\"color: #585a5e; height: 1px; background-color: #585a5e; border: 0;\">\n\t\t\t\t\t\t<p style=\"text-align: left;margin: 30px 0 0;padding-top: 10px;\"><a href=\"https://github.com/ballerina-platform\"><img src=\"https://b.content.wso2.com/sites/all/ballerina.io-cdn/img/github.png\" style=\"width: 18px;\"></a> <a href=\"https://stackoverflow.com/questions/tagged/ballerina\"><img src=\"https://b.content.wso2.com/sites/all/ballerina.io-cdn/img/stackoverflow.png\" style=\"width: 18px; margin-left: 10px;\"></a> <a href=\"https://twitter.com/ballerinalang\"><img src=\"https://b.content.wso2.com/sites/all/ballerina.io-cdn/img/twitter.png\" style=\"width: 18px; margin-left: 10px;\"></a> <a href=\"https://ballerina.io/community/slack/\"><img src=\"https://b.content.wso2.com/sites/all/ballerina.io-cdn/img/slack.png\" style=\"width: 18px; margin-left: 10px;\"></a></p>\n\n\t\t\t\t\t\t\n            <p align=\"left\" style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size:11px;line-height: 21px;color: #585a5e;margin-top: 5px;font-weight: 400;\"><a href=\"https://ballerina.io/privacy-policy\" style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size:11px;color:#585a5e;text-decoration: underline;\" target=\"_blank\">Privacy Policy</a>&nbsp;&nbsp;|&nbsp;&nbsp; <a href=\"https://ballerina.io/terms-of-service\" style=\"font-family: 'Roboto', Helvetica,sans-serif;font-size:11px;color:#585a5e;text-decoration: underline;\" target=\"_blank\">Terms of Service</a></p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n\n\n\n\n\n"},"__N_SSG":true}