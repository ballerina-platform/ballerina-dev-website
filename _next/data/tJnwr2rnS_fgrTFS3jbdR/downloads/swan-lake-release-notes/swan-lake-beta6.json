{"pageProps":{"frontmatter":{"layout":"ballerina-left-nav-release-notes","title":"Swan Lake Beta6","permalink":"/downloads/swan-lake-release-notes/swan-lake-beta6/","active":"swan-lake-beta6","redirect_from":["/downloads/swan-lake-release-notes/swan-lake-beta6"]},"content":"\n## Overview of Ballerina Swan Lake Beta6\n\n<em>This is the sixth Beta release in a series of planned Alpha and Beta releases leading up to the Ballerina Swan Lake GA release.</em> \n\nIt introduces the new language features planned for the Swan Lake GA release and includes improvements and bug fixes done to the compiler, runtime, standard library, and developer tooling after the Swan Lake Beta5 release.\n\n## Updating Ballerina\n\nIf you are already using Ballerina, you can use the [update tool](/learn/tooling-guide/cli-tools/update-tool/) to directly update to Ballerina Swan Lake Beta6 as follows. \n\nTo do this, first, execute the command below to get the update tool updated to its latest version. \n\n> `bal update`\n\nIf you are using an **update tool version below 0.8.14**, execute the `ballerina update` command to update it. Next, execute the command below to update to Swan Lake Beta5.\n\n> `bal dist pull slbeta6`\n\n## Installing Ballerina\n\nIf you have not installed Ballerina, then download the [installers](/downloads/#swanlake) to install.\n\n## Language updates\n\n### Improvements\n\nUpdated the static type of the unary plus expression to be the same as the static type of the operand. The assignments below are allowed now.\n\n```ballerina\npublic function main() {\n    int:Unsigned8 a = 32;\n    int:Unsigned8 b = +a;\n\n    int:Unsigned16 c = 43;\n    int:Unsigned16 d = +c;\n\n    int:Unsigned32 e = 54;\n    int:Unsigned32 f = +e;\n\n    byte g = 127;\n    byte h = +g;\n\n    int:Signed8 i = -32;\n    int:Signed8 j = +i;\n\n    int:Signed16 k = -65;\n    int:Signed16 l = +k;\n\n    int:Signed32 m = -64;\n    int:Signed32 n = +m;\n}\n```\n\n### Bug fixes\n\nTo view bug fixes, see the [GitHub milestone for Swan Lake Beta6](https://github.com/ballerina-platform/ballerina-lang/issues?q=is%3Aissue+is%3Aclosed+milestone%3A%22Ballerina+Swan+Lake+-+Beta6%22+label%3AType%2FBug+label%3ATeam%2FCompilerFE).\n\n## Standard library updates\n\n### New features\n\n#### `graphql` package\nAdded support for the GraphQL list type inputs.\n\n#### `http` package\nIntroduced request and request error interceptors at the service level.\n\n#### `xmldata` package\nAdded support to convert an XML to a record.\n\n#### `time` package\nAdded time zone handling support.\n\n### Improvements\n\n#### `http` package\nAllowed listener-level interceptors to have only the default path.\n\n### Breaking changes\n\n#### `graphql` package\nDeprecated the `add` function in the `graphql:Context` object and introduced the `set` function.\n\n**Old method:**\n```ballerina\ngraphql:Context context = new;\ngraphql:Error? result = context.add(\"key\", \"<value>\"); // Can return an error\n```\n\n**New method:**\n```ballerina\ngraphql:Context context = new;\ncontext.set(\"key\", \"<value>\"); // Does not return anything\n```\n\n#### `http` package\n- Changed the `RequestContext:add` function to `RequestContext:set`.\n\n  ```ballerina\n  service class DefaultRequestInterceptor {\n      *http:RequestInterceptor;\n\n      resource function 'default [string... path](http:RequestContext ctx) returns http:NextService|error? {\n          ctx.set(\"last-interceptor\", \"default-interceptor\");\n          return ctx.next();\n      }\n  }\n  ```\n- Changed the `parseHeader()` function to support multiple header values.\n\n  ```ballerina\n  http:HeaderValue[] values = check http:parseHeader(\"text/plain;level=1;q=0.6, application/xml;level=2\");\n  ```\n\n### Bug fixes\n\nTo view bug fixes, see the [GitHub milestone for Swan Lake Beta6](https://github.com/ballerina-platform/ballerina-standard-library/issues?q=is%3Aclosed+is%3Aissue+milestone%3A%22Swan+Lake+Beta6%22+label%3AType%2FBug).\n\n## Developer tools updates\n\n### Improvements\n\n#### OpenAPI tool \n\n- Added the `--with-tests` option for the OpenAPI client generation command, which will generate a test file template for all the relevant remote functions of the client. For example,\n\n  > `bal openapi -i <openapi contract> --mode client --with-tests`\n\n- Added the `--export-openapi` option for the `build` command, which will generate OpenAPI contract files for all the services in the current package. For example,\n\n  > `bal build --export-openapi`\n\n#### CLI\n\n- Introduced the `--target-dir` flag to the `run`, `test`, `doc`, and `clean` commands. With this, you can pass a custom directory to the aforementioned commands.\n- Added support for creating packages using template packages in Ballerina Central. For example, `bal new -t wso2/choreo_sample`.\n\n### Breaking changes\n\n#### Test framework \n\nImproved the `assertFail` function to eliminate the fake return/panic that had to be added after the statement. The signature of the function is changed as follows.\n\n**Old signature:** \n\n```ballerina\npublic isolated function assertFail(string msg = \"Test Failed!\");\n```\n\n**New signature:** \n```ballerina\npublic isolated function assertFail(string msg = \"Test Failed!\") returns never;\n```\n\nFor example, the function below, which compiled without an issue in Beta5 will throw an `unreachable code` compilation error after this signature change.\n\n```ballerina\n function testFunc(int|string val) returns int? {\n   if (val is int) {\n       return val;\n   } else {\n       test:assertFail();\n   }\n   return; //Remove this fake return statement to compile with Swan lake Beta6.\n}\n```\n\n### Bug fixes\n\nTo view bug fixes, see the GitHub milestone for Swan Lake Beta3 of the repositories below.\n\n- [Language Server](https://github.com/ballerina-platform/ballerina-lang/issues?q=is%3Aissue+is%3Aclosed+milestone%3A%22Ballerina+Swan+Lake+-+Beta6%22+label%3AType%2FBug+label%3ATeam%2FLanguageServer)\n- [OpenAPI](https://github.com/ballerina-platform/ballerina-openapi/issues?q=is%3Aissue+is%3Aclosed+milestone%3A%22Ballerina+Swan+Lake+-+Beta6%22+label%3AType%2FBug)\n- [Debugger](https://github.com/ballerina-platform/ballerina-lang/issues?q=is%3Aissue+label%3AType%2FBug+label%3AArea%2FDebugger+milestone%3A%22Ballerina+Swan+Lake+-+Beta6%22+is%3Aclosed)\n\n## Ballerina packages updates\n\n### New features\n\nAdded support to add an `icon` field under the `[package]` table. For example,\n```toml\n[package]\norg = \"ballerinax\"\nname = \"googleapis.gmail\"\nversion = \"0.1.0”\nicon = “images/icon.png”\n```\n\n>**Info:** The specified icon file will be packaged into the `docs/` directory of the Ballerina archive (`.bala`). Only the `.png` format is supported for the icon.\n \n","id":"swan-lake-beta6"},"__N_SSG":true}