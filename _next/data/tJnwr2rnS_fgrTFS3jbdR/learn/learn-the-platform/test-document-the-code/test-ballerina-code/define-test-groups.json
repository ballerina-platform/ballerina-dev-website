{"pageProps":{"frontmatter":{"layout":"ballerina-testing-code-left-nav-pages-swanlake","title":"Define test groups","description":"Learn how to use grouping functionality of the Ballerina test framework.","keywords":"ballerina, programming language, testing, test groups","permalink":"/learn/test-ballerina-code/define-test-groups/","active":"test-groups","intro":"The Ballerina test framework allows grouping of tests.","redirect_from":["/learn/testing-ballerina-code/","/learn/testing-ballerina-code","/swan-lake/learn/testing-ballerina-code/defining-test-groups/","/swan-lake/learn/testing-ballerina-code/defining-test-groups","/learn/user-guide/testing-ballerina-code/defining-test-groups","/learn/user-guide/testing-ballerina-code/defining-test-groups/","/learn/user-guide/testing-ballerina-code/","/learn/user-guide/testing-ballerina-code","/learn/user-guide/testing-ballerina-code/defining-test-groups/","/learn/testing-ballerina-code/defining-test-groups/","/learn/testing-ballerina-code/defining-test-groups","/learn/testing-ballerina-code/define-test-groups/","/learn/testing-ballerina-code/define-test-groups","/learn/test-ballerina-code/define-test-groups","/learn/guides/testing-ballerina-code/defining-test-groups/","/learn/guides/testing-ballerina-code/defining-test-groups"]},"content":"\n## Group tests\nTest grouping allows us to control the execution of tests by partitioning them into groups. The Test Framework allows\nfor a single test to have multiple groups. \n\nA test is assigned to a group via the test configuration `groups` key, which accepts a string array of groups. \n\n***Example:*** \n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n@test:Config { groups: [\"g1\"] }\nfunction testFunction1() {\n    io:println(\"I'm a test belonging to group g1!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n@test:Config { groups: [\"g1\", \"g2\"] }\nfunction testFunction2() {\n    io:println(\"I'm a test belonging to groups g1 and g2!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n@test:Config { groups: [\"g2\"] }\nfunction testFunction3() {\n    io:println(\"I'm a test belonging to group g2!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n```\n\n## Group commands\n\n### Execute grouped tests\nTo execute groups of tests, the `--groups` flag is used during test execution.\n\n```$bal test --groups g1```\n\nThe above results in an output of :\n\n```bash\n\nCompiling source\n        user/Testing:0.1.0\n\nRunning Tests\n\n        Testing\nI'm a test belonging to group g1!\nI'm a test belonging to groups g1 and g2!\n\n                [pass] testFunction1\n                [pass] testFunction2\n\n                2 passing\n                0 failing\n                0 skipped\n```\n\nThe `groups` flag supports executing multiple groups by using comma-separated arguments.\n\n```$bal test --groups g1,g2```\n\nThe above results in an output of :\n\n```bash\n\nCompiling source\n        user/Testing:0.1.0\n\nRunning Tests\n\n        Testing\nI'm a test belonging to group g1!\nI'm a test belonging to groups g1 and g2!\nI'm a test belonging to group g2!\n\n                [pass] testFunction1\n                [pass] testFunction2\n                [pass] testFunction3\n\n                3 passing\n                0 failing\n                0 skipped\n```\n\n### Disable grouped tests\n\nTo skip the execution of certain groups of tests, the `--disable-groups` flag is used during test execution.\n\n```bal test --disable-groups g2```\n\nThe above results in an output of :\n\n```bash\nCompiling source\n        user/Testing:0.1.0\n\nRunning Tests\n\n        Testing\nI'm a test belonging to group g1!\n\n                [pass] testFunction1\n\n                1 passing\n                0 failing\n                0 skipped\n```\n","id":"define-test-groups","sub":"test-document-the-code","third":"test-ballerina-code","slug":"test-document-the-code/test-ballerina-code/define-test-groups"},"__N_SSG":true}