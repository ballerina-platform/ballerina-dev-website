{"pageProps":{"frontmatter":{"layout":"ballerina-testing-code-left-nav-pages-swanlake","title":"Configure tests","description":"Learn how to configure Ballerina tests.","keywords":"ballerina, programming language, testing, test setup","permalink":"/learn/test-ballerina-code/configure-tests/","active":"configure-tests","intro":"The Ballerina Test framework has configurations at various levels to streamline the testing process and ensure that the tests are written with a comprehensible structure.","redirect_from":["/learn/testing-ballerina-code/","/learn/testing-ballerina-code","/swan-lake/learn/testing-ballerina-code/configuring-tests/","/swan-lake/learn/testing-ballerina-code/configuring-tests","/learn/user-guide/testing-ballerina-code/configuring-tests","/learn/user-guide/testing-ballerina-code/configuring-tests/","/learn/user-guide/testing-ballerina-code/","/learn/user-guide/testing-ballerina-code","/learn/user-guide/testing-ballerina-code/configuring-tests/","/learn/testing-ballerina-code/configuring-tests/","/learn/testing-ballerina-code/configuring-tests","/learn/test-ballerina-code/configuring-tests","/learn/test-ballerina-code/configuring-test/","/learn/test-ballerina-code/configure-tests","/learn/guides/testing-ballerina-code/configuring-tests/","/learn/guides/testing-ballerina-code/configuring-tests"]},"content":"\n## Set up and tearing down\n\nThe following test annotations can be used to set up and tear down the instructions. These configuration annotations \nenable executing instructions at various levels.\n\n### Suite level\n\n#### The `@test:BeforeSuite {}` annotation\nThe function annotated with the `BeforeSuite` annotation will be run once before any of the tests in the test suite. \nThis can be used for initializing the test suite level pre-requisites.\n\n***Example:***\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n// The `BeforeSuite` function is executed before running all the test\n// functions in this module.\n@test:BeforeSuite\nfunction beforeFunc() {\n    io:println(\"I'm the before suite function!\");\n}\n\n// Test function.\n@test:Config {}\nfunction testFunction1() {\n    io:println(\"I'm in test function 1!\");\n    test:assertTrue(true, msg = \"Failed\");\n}\n\n// Test function.\n@test:Config {}\nfunction testFunction2() {\n    io:println(\"I'm in test function 2!\");\n    test:assertTrue(true, msg = \"Failed\");\n}\n```\n\n#### The `@test:AfterSuite {}` annotation\nThe `AfterSuite` annotated function will be run once after all the tests in the test suite are run. This can be used for \ncleaning up the test suite level aspects. A test suite covers tests related to a module.\n\n***Example:***\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n// Test function.\n@test:Config {}\nfunction testFunction1() {\n    io:println(\"I'm in test function 1!\");\n    test:assertTrue(true, msg = \"Failed\");\n}\n\n// The `AfterSuite` function is executed after all the test functions in this module.\n@test:AfterSuite  {}\nfunction afterFunc() {\n    io:println(\"I'm the after suite function!\");\n}\n```\n\n### Group level\n\n#### The `@test:BeforeGroups {}` annotation\nFor each group specified in this annotation, the `BeforeGroups` annotated function will be executed once before any of \nthe tests belonging to the group.\n\n***Example:***\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n// The `beforeGroups1` function is executed before running all the test functions\n// belonging to the `g1` group.\n@test:BeforeGroups { value:[\"g1\"] }\nfunction beforeGroups1() {\n    io:println(\"I'm the before groups function!\");\n}\n\n// Another `beforeGroups2` function is executed before running all the test functions\n// belonging to the `g1` and `g2` groups.\n@test:BeforeGroups { value:[\"g1\", \"g2\"] }\nfunction beforeGroups2() {\n    io:println(\"I'm another before groups function!\");\n}\n\n// A test function that belongs to the `g1` group.\n@test:Config { groups:[\"g1\"] }\nfunction testFunction1() {\n    io:println(\"I belong to group g1!\");\n    test:assertTrue(true, msg = \"Failed\");\n}\n\n// A test function that belongs to the `g2` group.\n@test:Config { groups:[\"g2\"] }\nfunction testFunction2() {\n    io:println(\"I belong to group g2 \");\n    test:assertTrue(true, msg = \"Failed\");\n}\n```\n\n#### The `@test:AfterGroups {}` annotation\nFor each group specified in this annotation, the `AfterGroups` annotated function will be executed once after all the \ntests belonging to the group is executed.\n\n***Example:***\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n// A test function that belongs to the `g1` group.\n@test:Config { groups:[\"g1\"] }\nfunction testFunction1() {\n    io:println(\"I belong to group g1!\");\n    test:assertTrue(true, msg = \"Failed\");\n}\n\n// A test function that belongs to the `g2` group.\n@test:Config { groups:[\"g2\"] }\nfunction testFunction2() {\n    io:println(\"I belong to group g2 \");\n    test:assertTrue(true, msg = \"Failed\");\n}\n\n// The `afterGroupsFunc1` function is executed before running all the test functions\n// belonging to the `g1` group.\n@test:AfterGroups { value:[\"g1\"] }\nfunction afterGroupsFunc1() {\n    io:println(\"I'm the after groups function!\");\n}\n\n// The `afterGroupsFunc2` function is executed before running all the test functions\n// belonging to the `g1` and `g2` groups.\n@test:AfterGroups { value:[\"g1\", \"g2\"] }\nfunction afterGroupsFunc2() {\n    io:println(\"I'm another after groups function!\");\n}\n```\n\n### Test case level\n\n#### The `@test:BeforeEach` annotation\nThe `BeforeEach` annotated function will be run before each test in the test suite. This can be used to initialize the \ntest-level prerequisites repeatedly before every test function.\n\n***Example:***\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n// The `BeforeEach` function, which is executed before each test function.\n@test:BeforeEach\nfunction beforeFunc() {\n    io:println(\"I'm the before function!\");\n}\n\n// The first test function.\n@test:Config {}\nfunction testFunction1() {\n    io:println(\"I'm in test function 1!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n// The second test function.\n@test:Config {}\nfunction testFunction2() {\n    io:println(\"I'm in test function 2!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n// The third test function.\n@test:Config {}\nfunction testFunction3() {\n    io:println(\"I'm in test function 3!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n```\n\n#### The `@test:AfterEach` annotation\nThe `AfterEach` annotated function will be run after each test within the test suite. This can be used to clean up the \ntest-level aspects repeatedly after every test function.\n\n***Example:***\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n// This `AfterEach` function is executed before each test function.\n@test:AfterEach\nfunction afterFunc() {\n    io:println(\"I'm the after function!\");\n}\n\n// The first test function.\n@test:Config {}\nfunction testFunction1() {\n    io:println(\"I'm in test function 1!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n// The second test function.\n@test:Config {}\nfunction testFunction2() {\n    io:println(\"I'm in test function 2!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n// The third test function.\n@test:Config {}\nfunction testFunction3() {\n    io:println(\"I'm in test function 3!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n```\n\n### Each test case\n\n#### The `before` attribute of the `@test:Config {}` annotation\nThe test config annotation makes use of ‘before’ to denote which function needs to execute before the particular \ntest is run.\n\n***Example:***\n\n```ballerina\n@test:Config { before : testFunction1 }\nfunction testFunction3() {\n    io:println(\"I'm in test function 3!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n```\n\n#### The `after` attribute of the `@test:Config {}` annotation\nThe test config annotation makes use of ‘after’ to denote which function needs to execute after the particular \ntest is run.\n\n***Example:***\n\n```ballerina\n@test:Config { after : testFunction3 }\nfunction testFunction2() {\n    io:println(\"I'm in test function 2!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n```\n\n## Define test-specific configurations\nConfigurations for testing can be provided using configurable variables. The values for configurable variables can be\nprovided in a file named `Config.toml` located in the `tests` directory, which will only be initialized when the tests\nare run. \n\nConfigurable variables are useful when you require separate configurations that cannot be feasibly used outside of \ntesting. This is particularly useful when testing services and clients where you may need different host values when you\nare trying to test the service or client.\n\n\n## Define test-only dependencies\nDependencies are meant to be resolved only during testing and can be specified in the `Ballerina.toml` file by specifying the \nscope.\n\n```toml\n[[platform.java11.dependency]]\npath = \"/user/foo/libs/abc.jar\"\nscope = \"testOnly\"\n```\n","id":"configure-tests","sub":"test-document-the-code","third":"test-ballerina-code","slug":"test-document-the-code/test-ballerina-code/configure-tests","codes":"[[-702202873,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The `BeforeSuite` function is executed before running all the test</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// functions in this module.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">BeforeSuite</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">beforeFunc</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m the before suite function!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// Test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction1</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 1!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// Test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction2</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 2!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[1442270651,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// Test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction1</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 1!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The `AfterSuite` function is executed after all the test functions in this module.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">AfterSuite</span><span style=\\\"color: #24292F\\\">  {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">afterFunc</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m the after suite function!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-612011619,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The `beforeGroups1` function is executed before running all the test functions</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// belonging to the `g1` group.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">BeforeGroups</span><span style=\\\"color: #24292F\\\"> { value</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;g1&quot;</span><span style=\\\"color: #24292F\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">beforeGroups1</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m the before groups function!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// Another `beforeGroups2` function is executed before running all the test functions</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// belonging to the `g1` and `g2` groups.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">BeforeGroups</span><span style=\\\"color: #24292F\\\"> { value</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;g1&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0A3069\\\">&quot;g2&quot;</span><span style=\\\"color: #24292F\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">beforeGroups2</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m another before groups function!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// A test function that belongs to the `g1` group.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> { groups</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;g1&quot;</span><span style=\\\"color: #24292F\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction1</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I belong to group g1!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// A test function that belongs to the `g2` group.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> { groups</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;g2&quot;</span><span style=\\\"color: #24292F\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction2</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I belong to group g2 &quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[976326625,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// A test function that belongs to the `g1` group.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> { groups</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;g1&quot;</span><span style=\\\"color: #24292F\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction1</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I belong to group g1!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// A test function that belongs to the `g2` group.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> { groups</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;g2&quot;</span><span style=\\\"color: #24292F\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction2</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I belong to group g2 &quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The `afterGroupsFunc1` function is executed before running all the test functions</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// belonging to the `g1` group.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">AfterGroups</span><span style=\\\"color: #24292F\\\"> { value</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;g1&quot;</span><span style=\\\"color: #24292F\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">afterGroupsFunc1</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m the after groups function!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The `afterGroupsFunc2` function is executed before running all the test functions</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// belonging to the `g1` and `g2` groups.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">AfterGroups</span><span style=\\\"color: #24292F\\\"> { value</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;g1&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0A3069\\\">&quot;g2&quot;</span><span style=\\\"color: #24292F\\\">] }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">afterGroupsFunc2</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m another after groups function!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-1179481759,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The `BeforeEach` function, which is executed before each test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">BeforeEach</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">beforeFunc</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m the before function!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The first test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction1</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 1!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The second test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction2</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 2!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The third test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction3</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 3!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[957769291,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/test;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// This `AfterEach` function is executed before each test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">AfterEach</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">afterFunc</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m the after function!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The first test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction1</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 1!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The second test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction2</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 2!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// The third test function.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction3</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 3!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[1537200157,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> { before </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> testFunction1 }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction3</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 3!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[525379910,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">@</span><span style=\\\"color: #0550AE\\\">test</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Config</span><span style=\\\"color: #24292F\\\"> { after </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> testFunction3 }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">testFunction2</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;I&#39;m in test function 2!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    test</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">assertTrue</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">msg</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Failed!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-272768553,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">[[</span><span style=\\\"color: #953800\\\">platform</span><span style=\\\"color: #24292F\\\">.</span><span style=\\\"color: #953800\\\">java11</span><span style=\\\"color: #24292F\\\">.</span><span style=\\\"color: #953800\\\">dependency</span><span style=\\\"color: #24292F\\\">]]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">path = </span><span style=\\\"color: #0A3069\\\">&quot;/user/foo/libs/abc.jar&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">scope = </span><span style=\\\"color: #0A3069\\\">&quot;testOnly&quot;</span></span></code></pre>\"]]"},"__N_SSG":true}