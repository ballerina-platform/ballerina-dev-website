{"pageProps":{"frontmatter":{},"content":"# Specification: Ballerina FTP Library\n\n_Owners_: @shafreenAnfar @dilanSachi @Bhashinee    \n_Reviewers_: @shafreenAnfar @Bhashinee  \n_Created_: 2020/10/28   \n_Updated_: 2022/12/08  \n_Edition_: Swan Lake    \n\n## Introduction\nThis is the specification for the FTP standard library of [Ballerina language](https://ballerina.io/), which provides FTP client/listener functionalities to send and receive files by connecting to FTP/SFTP server.\n\nThe FTP library specification has evolved and may continue to evolve in the future. The released versions of the specification can be found under the relevant Github tag.\n\nIf you have any feedback or suggestions about the library, start a discussion via a [GitHub](https://github.com/ballerina-platform/ballerina-standard-library/issues) issue or in the [Discord server](https://discord.gg/ballerinalang). Based on the outcome of the discussion, the specification and implementation can be updated. Community feedback is always welcome. Any accepted proposal, which affects the specification is stored under `/docs/proposals`. Proposals under discussion can be found with the label `type/proposal` in GitHub.\n\nThe conforming implementation of the specification is released and included in the distribution. Any deviation from the specification is considered a bug.\n\n## Contents\n1. [Overview](#1-overview)\n2. [Configurations](#2-configurations)\n    *  2.1. [Security Configurations](#21-security-configurations)\n    *  2.2. [FileInfo](#22-fileinfo)\n3. [Client](#3-client)\n    *  3.1. [Configurations](#31-configurations)\n    *  3.2. [Initialization](#32-initialization)\n        *    3.2.1. [Insecure Client](#321-insecure-client)\n        *    3.2.2. [Secure Client](#322-secure-client)\n    *  3.3. [Functions](#33-functions)\n4. [Listener](#4-listener)\n    *  4.1. [Configurations](#41-configurations)\n    *  4.2. [Initialization](#42-initialization)\n        *  4.2.1. [Insecure Listener](#421-insecure-listener)\n        *  4.2.2. [Secure Listener](#422-secure-listener)\n    *   4.3. [Usage](#43-usage)\n5. [Caller](#5-caller)\n    *  5.1. [Initialization](#51-initialization)\n    *  5.2. [Functions](#52-functions)\n6. [Samples](#6-samples)\n    *  6.1. [Sending Files](#61-sending-files)\n    *  6.2. [Listening to File Changes](#62-listening-to-file-changes)\n\n## 1. Overview\nFTP is a file transfer protocol. It’s a basic way of using the Internet to share files.\nSFTP (or Secure File Transfer Protocol) is an alternative to FTP that also allows transferring files,\nbut adds a layer of security to the process. SFTP uses SSH (or secure shell) encryption to protect data as\nit’s being transferred. This means data is not exposed to outside entities on the Internet when it is sent\nto another party. This library provides support for both protocols.\n\nBallerina FTP library contains two core apis:\n* Client - The `ftp:Client` is used to connect to FTP server and perform various operations on the files.\n* Listener - The `ftp:Listener` is used to listen to a remote FTP location and notify if files are added or removed \n  from the FTP location.\n\n## 2. Configurations\n### 2.1. Security Configurations\n* PrivateKey record represents the configuration related to a private key.\n```ballerina\npublic type PrivateKey record {|\n    # Path to the private key file\n    string path;\n    # Private key password\n    string password?;\n|};\n```\n* Credentials record represents the username and password configurations.\n```ballerina\npublic type Credentials record {|\n    # Username of the user\n    string username;\n    # Password of the user\n    string password;\n|};\n```\n* AuthConfiguration record represents the configurations needed for facilitating secure communication with a remote FTP server.\n```ballerina\npublic type AuthConfiguration record {|\n    # Username and password to be used\n    Credentials credentials?;\n    # Private key to be used\n    PrivateKey privateKey?;\n|};\n```\n### 2.2. FileInfo\n* `FileInfo` record contains the metadata of the files.\n```ballerina\npublic type FileInfo record {|\n    # Relative file path for a newly-added file\n    string path;\n    # Size of the file\n    int size;\n    # Last-modified timestamp of the file in UNIX Epoch time\n    int lastModifiedTimestamp;\n    # File name\n    string name;\n    # `true` if the file is a folder\n    boolean isFolder;\n    # `true` if the file is a file\n    boolean isFile;\n    # Normalized absolute path of this file within its file system\n    string pathDecoded;\n    # Extension of the file name\n    string extension;\n    # Receiver as a URI String for public display\n    string publicURIString;\n    # Type of the file\n    string fileType;\n    # `true` if the `fileObject` is attached\n    boolean isAttached;\n    # `true` if someone reads/writes from/to this file\n    boolean isContentOpen;\n    # `true` if this file is executable\n    boolean isExecutable;\n    # `true` if this file is hidden\n    boolean isHidden;\n    # `true` if this file can be read\n    boolean isReadable;\n    # `true` if this file can be written\n    boolean isWritable;\n    # Depth of the file name within its file system\n    int depth;\n    # URI scheme of the file\n    string scheme;\n    # Absolute URI of the file\n    string uri;\n    # Root URI of the file system in which the file exists\n    string rootURI;\n    # A \"friendly path\" is a path, which can be accessed without a password\n    string friendlyURI;\n|};\n```\n## 3. Client\nThe `ftp:Client` connects to FTP server and performs various operations on the files. Currently, it supports the\ngeneric FTP operations; `get`, `delete`, `put`, `append`, `mkdir`, `rmdir`, `isDirectory`, `rename`, `size`, and\n`list`.\n### 3.1. Configurations\n* When initializing the `ftp:Client`, `ftp:ClientConfiguration` configuration can be provided.\n```ballerina\npublic type ClientConfiguration record {|\n    # Supported FTP protocols\n    Protocol protocol = FTP;\n    # Target service URL\n    string host = \"127.0.0.1\";\n    # Port number of the remote service\n    int port = 21;\n    # Authentication options\n    AuthConfiguration auth?;\n|};\n```\n* InputContent record represents the configurations for the input given for `put` and `append` operations.\n```ballerina\npublic type InputContent record{|\n    # Path of the file to be created or appended\n    string filePath;\n    # `true` if the input type is a file\n    boolean isFile = false;\n    # The content read from the input file, if the input is a file\n    stream<byte[] & readonly, io:Error?> fileContent?;\n    # The input content, for other input types\n    string textContent?;\n    # If true, input will be compressed before uploading\n    boolean compressInput = false;\n|};\n```\n* Following Compression options can be used when adding a file to the FTP server. \n```ballerina\npublic enum Compression {\n    # Zip compression\n    ZIP,\n    # No compression used\n    NONE\n}\n```\n### 3.2. Initialization\n#### 3.2.1. Insecure Client\nA simple insecure client can be initialized by providing `ftp:FTP` as the protocol and the host and optionally, the port \nto the `ftp:ClientConfiguration`.\n```ballerina\n# Gets invoked during object initialization.\n#\n# + clientConfig - Configurations for FTP client\n# + return - `ftp:Error` in case of errors or `()` otherwise\npublic isolated function init(ClientConfiguration clientConfig) returns Error?;\n```\n#### 3.2.2. Secure Client\nA secure client can be initialized by providing `ftp:SFTP` as the protocol and by providing `ftp:Credentials`\nand `ftp:PrivateKey` to `ftp:AuthConfiguration`.\n```ballerina\nftp:ClientConfiguration ftpConfig = {\n    protocol: ftp:SFTP,\n    host: \"<The FTP host>\",\n    port: <The FTP port>,\n    auth: {\n        credentials: {\n            username: \"<The FTP username>\",\n            password: \"<The FTP passowrd>\"\n        }\n    }\n};\n```\n### 3.3. Functions\n* FTP Client API can be used to put files on the FTP server. For this, the `put()` method can be used.\n```ballerina\n# Adds a file to FTP server.\n# ```ballerina\n# ftp:Error? response = client->put(path, channel);\n# ```\n#\n# + path - The resource path\n# + content - Content to be written to the file in server\n# + compressionType - Type of the compression to be used, if\n#                     the file should be compressed before\n#                     uploading\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function put(string path, stream<byte[] & readonly, io:Error?>|string|xml|json content, Compression compressionType=NONE) returns Error?;\n```\n* `append()` can be used to append the content to an existing file in FTP server.\n```ballerina\n# Appends the content to an existing file in FTP server.\n# ```ballerina\n# ftp:Error? response = client->append(path, content);\n# ```\n#\n# + path - The resource path\n# + content - Content to be written to the file in server\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function append(string path, stream<byte[] & readonly, io:Error?>|string|xml|json content) returns Error?;\n```\n* To retrieve file content from FTP server, `get()` can be used.\n```ballerina\n# Retrieves the file content from a remote resource.\n# ```ballerina\n# stream<byte[] & readonly, io:Error?>|ftp:Error channel = client->get(path);\n# ```\n#\n# + path - The resource path\n# + return - A byte stream from which the file can be read or `ftp:Error` in case of errors\nremote isolated function get(string path) returns stream<byte[] & readonly, io:Error?>|Error;\n```\n* `mkdir()` can be used to create a new directory in FTP server.\n```ballerina\n# Creates a new directory in FTP server.\n# ```ballerina\n# ftp:Error? response = client->mkdir(path);\n# ```\n#\n# + path - The directory path\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function mkdir(string path) returns Error?;\n```\n* `rmdir()` can be used to remove an empty directory in the server.\n```ballerina\n# Deletes an empty directory in FTP server.\n# ```ballerina\n# ftp:Error? response = client->rmdir(path);\n# ```\n#\n# + path - The directory path\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function rmdir(string path) returns Error?;\n```\n* To delete a file, `delete()` can be used.\n```ballerina\n# Deletes a file from FTP server.\n# ```ballerina\n# ftp:Error? response = client->delete(path);\n# ```\n#\n# + path - The resource path\n# + return -  `()` or else an `ftp:Error` if failed to establish\n#             the communication with the FTP server\nremote isolated function delete(string path) returns Error?;\n```\n* To rename a file or move it to another directory, `rename()` can be used.\n```ballerina\n# Renames a file or moves it to a new location within the same FTP server.\n# ```ballerina\n# ftp:Error? response = client->rename(origin, destination);\n# ```\n#\n# + origin - The source file location\n# + destination - The destination file location\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function rename(string origin, string destination) returns Error?;\n```\n* `size()` function can be used to get the size of a file.\n```ballerina\n# Gets the size of a file resource.\n# ```ballerina\n# int|ftp:Error response = client->size(path);\n# ```\n#\n# + path - The resource path\n# + return - The file size in bytes or an `ftp:Error` if\n#            failed to establish the communication with the FTP server\nremote isolated function size(string path) returns int|Error;\n```\n* To get the file list in a directory, `list()` can be used.\n```ballerina\n# Gets the file name list in a given folder.\n# ```ballerina\n# ftp:FileInfo[]|ftp:Error response = client->list(path);\n# ```\n#\n# + path - The direcotry path\n# + return - An array of file names or an `ftp:Error` if failed to\n#            establish the communication with the FTP server\nremote isolated function list(string path) returns FileInfo[]|Error;\n```\n* To check if a resource is a directory, `isDirectory()` can be used.\n```ballerina\n# Checks if a given resource is a directory.\n# ```ballerina\n# boolean|ftp:Error response = client->isDirectory(path);\n# ```\n#\n# + path - The resource path\n# + return - `true` if given resource is a directory or an `ftp:Error` if\n#            an error occurred while checking the path\nremote isolated function isDirectory(string path) returns boolean|Error;\n```\n## 4. Listener\nThe `ftp:Listener` is used to listen to a remote FTP location and trigger a `WatchEvent` type of event when new\nfiles are added to or deleted from the directory. The `onFileChange` function is invoked when a new file is added\nand/or deleted.\n### 4.1. Configurations\n* When initializing the `ftp:Listener`, following configurations can be provided.\n```ballerina\npublic type ListenerConfiguration record {|\n    # Supported FTP protocols\n    Protocol protocol = FTP;\n    # Target service url\n    string host = \"127.0.0.1\";\n    # Port number of the remote service\n    int port = 21;\n    # Authentication options\n    AuthConfiguration auth?;\n    # Remote FTP directory location\n    string path = \"/\";\n    # File name pattern that event need to trigger\n    string fileNamePattern?;\n    # Periodic time interval to check new update\n    decimal pollingInterval = 60;\n|};\n```\n* `WatchEvent` record represents the latest status change of the server from the last status change.\n```ballerina\npublic type WatchEvent record {|\n    # Array of `ftp:FileInfo` that represents newly added files\n    FileInfo[] addedFiles;\n    # Array of strings that contains deleted file names\n    string[] deletedFiles;\n|};\n```\n### 4.2. Initialization\n#### 4.2.1. Insecure Listener\nAn insecure FTP listener can be initialized by providing the mandatory `protocol`, `host`, and  `path` parameters to the \n`ftp:ListenerConfiguration`.\n```ballerina\n# Gets invoked during object initialization.\n#\n# + listenerConfig - Configurations for FTP listener\n# + return - `()` or else an `ftp:Error` upon failure to initialize the listener\npublic isolated function init(ListenerConfiguration listenerConfig) returns Error?;\n```\n#### 4.2.2. Secure Listener\nA secure listener can be initialized by providing `ftp:SFTP` as the protocol and by providing `ftp:Credentials`\nand `ftp:PrivateKey` to `ftp:AuthConfiguration`.\n```ballerina\nftp:ListenerConfiguration ftpConfig = {\n    protocol: ftp:SFTP,\n    host: \"<The SFTP host>\",\n    port: <The SFTP port>,\n    path: \"<The remote SFTP directory location>\",\n    pollingInterval: <Polling interval>,\n    fileNamePattern: \"<File name pattern>\",\n    auth: {\n        credentials: {username: \"<The SFTP username>\", password: \"<The SFTP password>\"},\n        privateKey: {\n            path: \"<The private key file path>\",\n            password: \"<The private key file password>\"\n        }\n    }\n};\n```\n#### 4.3. Usage\nAfter initializing the listener, a service must be attached to the listener. There are two ways for this.\n1. Attach the service to the listener directly.\n```ballerina\nservice ftp:Service on ftpListener {\n    remote function onFileChange(ftp:WatchEvent & readonly event, ftp:Caller caller) {\n        // process event\n    }\n}\n```\n2. Attach the service dynamically.\n```ballerina\n// Create a service object\nftp:Service ftpListener = service object {\n    remote function onFileChange(ftp:WatchEvent & readonly event, ftp:Caller caller) {\n        // process event\n    }\n};\n```\nThe remote method `onFileChange()` is invoked when the listener notices a file change in the FTP server. This function supports\nhaving both `ftp:WatchEvent` and `ftp:Caller` parameters or having only `ftp:WatchEvent` parameter.\n\nThe Listener has following functions to manage a service.\n* `attach()` - can be used to bind a service to the `ftp:Listener`.\n```ballerina\n# Binds a service to the `ftp:Listener`.\n# ```ballerina\n# error? response = listener.attach(service1);\n# ```\n#\n# + ftpService - Service to be detached from the listener\n# + name - Name of the service to be detached from the listener\n# + return - `()` or else an `error` upon failure to register the listener\npublic isolated function attach(Service ftpService, string[]|string? name = ()) returns error?;\n```\n* `detach()` - can be used to detach a service from the `ftp:Listener`.\n```ballerina\n# Stops consuming messages and detaches the service from the `ftp:Listener`.\n# ```ballerina\n# error? response = listener.detach(service1);\n# ```\n#\n# + ftpService - Service to be detached from the listener\n# + return - `()` or else an `error` upon failure to detach the service\npublic isolated function detach(Service ftpService) returns error?;\n```\n* `start()` - needs to be called to start the listener.\n```ballerina\n# Starts the `ftp:Listener`.\n# ```ballerina\n# error? response = listener.'start();\n# ```\n#\n# + return - `()` or else an `error` upon failure to start the listener\npublic isolated function 'start() returns error?;\n```\n* `gracefulStop()` - can be used to gracefully stop the listener.\n```ballerina\n# Stops the `ftp:Listener` gracefully.\n# ```ballerina\n# error? response = listener.gracefulStop();\n# ```\n#\n# + return - `()` or else an `error` upon failure to stop the listener\npublic isolated function gracefulStop() returns error?;\n```\n* `immediateStop()` - can be used to forcefully stop the listener.\n```ballerina\n# Stops the `ftp:Listener` forcefully.\n# ```ballerina\n# error? response = listener.immediateStop();\n# ```\n#\n# + return - `()` or else an `error` upon failure to stop the listener\npublic isolated function immediateStop() returns error?;\n```\n* `poll()` - can be used to poll new files from the FTP server.\n```ballerina\n# Poll new files from a FTP server.\n# ```ballerina\n# error? response = listener.poll();\n# ```\n#\n# + return - An `error` if failed to establish communication with the FTP\n#            server\npublic isolated function poll() returns error?\n```\n* `register()` can be used to register an FTP service in an `ftp:listener`.\n```ballerina\n# Register a FTP service in an FTP listener server.\n# ```ballerina\n# error? response = listener.register(ftpService, name);\n# ```\n#\n# + ftpService - The FTP service\n# + name - Name of the FTP service\n# + return - An `error` if failed to establish communication with the FTP\n#            server\npublic isolated function register(Service ftpService, string? name) returns error?\n```\n## 5. Caller\n`ftp:Caller` is like a wrapper on the `ftp:Client`. It has an `ftp:Client` defined inside and contains all the APIs of `ftp:Client` like `get()`, `put()`, `append()` etc. However, `ftp:Caller` can only be created internally to be passed to the `onFileChange` method.\n`ftp:Caller` is created in the runtime when the `ftp:Listener` gets attached to a `ftp:Service` by checking whether the user has added `ftp:Caller` as a parameter in the `onFileChange` method.\n### 5.1. Initialization\n`ftp:Caller` can be both secure and insecure and this depends on the type of `ftp:Listener`. If the `ftp:Listener` is a secure type, `ftp:Caller` will also be secure since the wrapping `ftp:Client` is created using a subset of the `ftp:ListenerConfiguration`.\n```ballerina\n# Gets invoked during object initialization.\n#\n# + 'client - The `ftp:Client` which is used to interact with the Ftp server\n# + return - `ftp:Error` in case of errors or `()` otherwise\nisolated function init(Client 'client) {\n    self.'client = 'client;\n}\n```\n### 5.2. Functions\n* `put()` method can be used to put files on the server.\n```ballerina\n# Adds a file to FTP server.\n# ```ballerina\n# ftp:Error? response = caller->put(path, channel);\n# ```\n#\n# + path - The resource path\n# + content - Content to be written to the file in server\n# + compressionType - Type of the compression to be used, if\n#                     the file should be compressed before\n#                     uploading\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function put(string path, stream<byte[] & readonly, io:Error?>|string|xml|json content, Compression compressionType=NONE) returns Error?;\n```\n* `append()` can be used to append the content to an existing file in FTP server.\n```ballerina\n# Appends the content to an existing file in FTP server.\n# ```ballerina\n# ftp:Error? response = client->caller(path, content);\n# ```\n#\n# + path - The resource path\n# + content - Content to be written to the file in server\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function append(string path, stream<byte[] & readonly, io:Error?>|string|xml|json content) returns Error?;\n```\n* To retrieve file content from FTP server, `get()` can be used.\n```ballerina\n# Retrieves the file content from a remote resource.\n# ```ballerina\n# stream<byte[] & readonly, io:Error?>|ftp:Error channel = caller->get(path);\n# ```\n#\n# + path - The resource path\n# + return - A byte stream from which the file can be read or `ftp:Error` in case of errors\nremote isolated function get(string path) returns stream<byte[] & readonly, io:Error?>|Error;\n```\n* `mkdir()` can be used to create a new directory in FTP server.\n```ballerina\n# Creates a new directory in FTP server.\n# ```ballerina\n# ftp:Error? response = caller->mkdir(path);\n# ```\n#\n# + path - The directory path\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function mkdir(string path) returns Error?;\n```\n* `rmdir()` can be used to remove an empty directory in the server.\n```ballerina\n# Deletes an empty directory in FTP server.\n# ```ballerina\n# ftp:Error? response = caller->rmdir(path);\n# ```\n#\n# + path - The directory path\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function rmdir(string path) returns Error?;\n```\n* To delete a file, `delete()` can be used.\n```ballerina\n# Deletes a file from FTP server.\n# ```ballerina\n# ftp:Error? response = caller->delete(path);\n# ```\n#\n# + path - The resource path\n# + return -  `()` or else an `ftp:Error` if failed to establish\n#             the communication with the FTP server\nremote isolated function delete(string path) returns Error?;\n```\n* To rename a file or move it to another directory, `rename()` can be used.\n```ballerina\n# Renames a file or moves it to a new location within the same FTP server.\n# ```ballerina\n# ftp:Error? response = caller->rename(origin, destination);\n# ```\n#\n# + origin - The source file location\n# + destination - The destination file location\n# + return - `()` or else an `ftp:Error` if failed to establish\n#            the communication with the FTP server\nremote isolated function rename(string origin, string destination) returns Error?;\n```\n* `size()` function can be used to get the size of a file.\n```ballerina\n# Gets the size of a file resource.\n# ```ballerina\n# int|ftp:Error response = caller->size(path);\n# ```\n#\n# + path - The resource path\n# + return - The file size in bytes or an `ftp:Error` if\n#            failed to establish the communication with the FTP server\nremote isolated function size(string path) returns int|Error;\n```\n* To get the file list in a directory, `list()` can be used.\n```ballerina\n# Gets the file name list in a given folder.\n# ```ballerina\n# ftp:FileInfo[]|ftp:Error response = caller->list(path);\n# ```\n#\n# + path - The direcotry path\n# + return - An array of file names or an `ftp:Error` if failed to\n#            establish the communication with the FTP server\nremote isolated function list(string path) returns FileInfo[]|Error;\n```\n* To check if a resource is a directory, `isDirectory()` can be used.\n```ballerina\n# Checks if a given resource is a directory.\n# ```ballerina\n# boolean|ftp:Error response = caller->isDirectory(path);\n# ```\n#\n# + path - The resource path\n# + return - `true` if given resource is a directory or an `ftp:Error` if\n#            an error occurred while checking the path\nremote isolated function isDirectory(string path) returns boolean|Error;\n```\n## 6. Samples\n### 6.1. Sending Files\n```ballerina\nimport ballerina/ftp;\nimport ballerina/io;\nimport ballerina/lang.'string as strings;\n\nftp:AuthConfiguration authConfig = {\n    credentials: {username: \"wso2\", password: \"wso2123\"},\n    privateKey: {\n        path: \"resources/keys/sftp.private.key\",\n        password: \"password\"\n    }\n};\n\nftp:ClientConfiguration sftpClientConfig = {\n    protocol: ftp:SFTP,\n    host: \"ftp.example.com\",\n    port: 21,\n    auth: authConfig\n};\n\npublic function main() returns error? {\n    ftp:Client clientEp = check new(sftpClientConfig);\n    stream<byte[] & readonly, io:Error?> fileStream = check clientEp->get(\"/server/book.txt\");\n    check fileStream.forEach(isolated function(byte[] & readonly fileContent) {\n        io:println(\"File content received: \" + checkpanic strings:fromBytes(fileContent));\n    });\n    stream<io:Block, io:Error?> bStream = check io:fileReadBlocksAsStream(\"/local/logFile.txt\", 1024);\n    check clientEp->put(\"/server\", bStream);\n    check fileStream.close();\n}\n```\n### 6.2. Listening to file changes\n```ballerina\nimport ballerina/ftp;\nimport ballerina/io;\n\nlistener ftp:Listener remoteServer = check new({\n    protocol: ftp:SFTP,\n    host: \"ftp.example.com\",\n    auth: {\n        credentials: {\n            username: \"wso2\",\n            password: \"wso2123\"\n        },\n        privateKey: {\n            path: \"resources/keys/sftp.private.key\",\n            password: \"password\"\n        }\n    },\n    port: 21,\n    path: \"/home/in\",\n    pollingInterval: 2,\n    fileNamePattern: \"(.*).txt\"\n});\n\nservice on remoteServer {\n\n    remote function onFileChange(ftp:Caller caller, ftp:WatchEvent & readonly event) {\n        foreach ftp:FileInfo addedFile in event.addedFiles {\n            io:println(\"Added file path: \" + addedFile.path);\n            check caller->delete(addedFile.path);\n        }\n\n        foreach string deletedFile in event.deletedFiles {\n            io:println(\"Deleted file path: \" + deletedFile);\n        }\n    }\n}\n```\n","codeSnippets":"[[-2085509734,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">PrivateKey</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Path to the private key file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> path;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Private key password</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> password?;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[401593859,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">Credentials</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Username of the user</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> username;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Password of the user</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> password;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[1557158995,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">AuthConfiguration</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Username and password to be used</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    Credentials credentials</span><span style=\\\"color: #CF222E\\\">?</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Private key to be used</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    PrivateKey privateKey</span><span style=\\\"color: #CF222E\\\">?</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-1010309948,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">FileInfo</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Relative file path for a newly-added file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> path;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Size of the file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> size;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Last-modified timestamp of the file in UNIX Epoch time</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> lastModifiedTimestamp;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># File name</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if the file is a folder</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isFolder;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if the file is a file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isFile;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Normalized absolute path of this file within its file system</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> pathDecoded;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Extension of the file name</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> extension;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Receiver as a URI String for public display</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> publicURIString;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Type of the file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> fileType;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if the `fileObject` is attached</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isAttached;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if someone reads/writes from/to this file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isContentOpen;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if this file is executable</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isExecutable;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if this file is hidden</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isHidden;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if this file can be read</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isReadable;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if this file can be written</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isWritable;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Depth of the file name within its file system</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> depth;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># URI scheme of the file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> scheme;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Absolute URI of the file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> uri;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Root URI of the file system in which the file exists</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> rootURI;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># A &quot;friendly path&quot; is a path, which can be accessed without a password</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> friendlyURI;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-1967697008,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">ClientConfiguration</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Supported FTP protocols</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    Protocol protocol </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> FTP;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Target service URL</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> host </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;127.0.0.1&quot;</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Port number of the remote service</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> port </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">21</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Authentication options</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    AuthConfiguration auth</span><span style=\\\"color: #CF222E\\\">?</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[1391830918,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">InputContent</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\">{</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Path of the file to be created or appended</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> filePath;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># `true` if the input type is a file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> isFile </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">false</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># The content read from the input file, if the input is a file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">stream&lt;</span><span style=\\\"color: #0550AE\\\">byte</span><span style=\\\"color: #24292F\\\">[] </span><span style=\\\"color: #CF222E\\\">&amp;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">readonly</span><span style=\\\"color: #24292F\\\">, io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Error?</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> fileContent?;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># The input content, for other input types</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> textContent?;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># If true, input will be compressed before uploading</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> compressInput </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">false</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-1569906454,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">enum</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">Compression</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Zip compression</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">ZIP</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># No compression used</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">NONE</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-1493357266,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Gets invoked during object initialization.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">clientConfig</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">Configurations for FTP client</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">return</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">`ftp:Error` in case of errors or `()` otherwise</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">isolated</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">init</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">ClientConfiguration</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">clientConfig</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> Error</span><span style=\\\"color: #CF222E\\\">?</span><span style=\\\"color: #24292F\\\">;</span></span></code></pre>\"],[-589629550,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">ClientConfiguration ftpConfig </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    protocol</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> ftp:SFTP,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    host</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The FTP host&gt;&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    port</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> &lt;The FTP port</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    auth</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        credentials</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            username</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The FTP username&gt;&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            password</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The FTP passowrd&gt;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-359521771,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Adds a file to FTP server.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[-416739646,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Appends the content to an existing file in FTP server.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[531290942,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Retrieves the file content from a remote resource.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[1696943555,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Creates a new directory in FTP server.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[-1054183473,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Deletes an empty directory in FTP server.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[-1334335456,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Deletes a file from FTP server.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[-1929929486,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Renames a file or moves it to a new location within the same FTP server.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[-1886493037,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Gets the size of a file resource.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[1789987224,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Gets the file name list in a given folder.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[-894667446,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Checks if a given resource is a directory.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[1521221364,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">ListenerConfiguration</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Supported FTP protocols</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    Protocol protocol </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> FTP;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Target service url</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> host </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;127.0.0.1&quot;</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Port number of the remote service</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> port </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">21</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Authentication options</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    AuthConfiguration auth</span><span style=\\\"color: #CF222E\\\">?</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Remote FTP directory location</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> path </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;/&quot;</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># File name pattern that event need to trigger</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> fileNamePattern?;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Periodic time interval to check new update</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">decimal</span><span style=\\\"color: #24292F\\\"> pollingInterval </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">60</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[1728845647,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">WatchEvent</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Array of `ftp:FileInfo` that represents newly added files</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    FileInfo[] addedFiles;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Array of strings that contains deleted file names</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\">[] deletedFiles;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[1710934269,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Gets invoked during object initialization.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">listenerConfig</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">Configurations for FTP listener</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">return</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">`()` or else an `ftp:Error` upon failure to initialize the listener</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">isolated</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">init</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">ListenerConfiguration</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">listenerConfig</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> Error</span><span style=\\\"color: #CF222E\\\">?</span><span style=\\\"color: #24292F\\\">;</span></span></code></pre>\"],[1562953172,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">ListenerConfiguration ftpConfig </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    protocol</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> ftp:SFTP,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    host</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The SFTP host&gt;&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    port</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> &lt;The SFTP port</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    path</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The remote SFTP directory location&gt;&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    pollingInterval</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> &lt;Polling interval</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    fileNamePattern</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;File name pattern&gt;&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    auth</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        credentials</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {username: </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The SFTP username&gt;&quot;</span><span style=\\\"color: #24292F\\\">, password</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The SFTP password&gt;&quot;</span><span style=\\\"color: #24292F\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        privateKey</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            path</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The private key file path&gt;&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            password</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;&lt;The private key file password&gt;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-631049479,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">service</span><span style=\\\"color: #24292F\\\"> ftp:Service </span><span style=\\\"color: #CF222E\\\">on</span><span style=\\\"color: #24292F\\\"> ftpListener {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">remote</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">onFileChange</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">WatchEvent &amp; </span><span style=\\\"color: #CF222E\\\">readonly</span><span style=\\\"color: #24292F\\\"> event, </span><span style=\\\"color: #953800\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Caller caller) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #6E7781\\\">// process event</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[1348070702,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">// Create a service object</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Service ftpListener </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">service</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">object</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">remote</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">onFileChange</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">WatchEvent &amp; </span><span style=\\\"color: #CF222E\\\">readonly</span><span style=\\\"color: #24292F\\\"> event, </span><span style=\\\"color: #953800\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Caller caller) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #6E7781\\\">// process event</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-14703344,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Binds a service to the `ftp:Listener`.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[203451677,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Stops consuming messages and detaches the service from the `ftp:Listener`.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[473647730,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Starts the `ftp:Listener`.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[1451047364,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Stops the `ftp:Listener` gracefully.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[873800183,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Stops the `ftp:Listener` forcefully.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[-206705666,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Poll new files from a FTP server.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[32172470,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Register a FTP service in an FTP listener server.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span></code></pre>\"],[-104045382,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Gets invoked during object initialization.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">&#39;client</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">The `ftp:Client` which is used to interact with the Ftp server</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">return</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">`ftp:Error` in case of errors or `()` otherwise</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">isolated</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">init</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">Client</span><span style=\\\"color: #24292F\\\"> &#39;client) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">self</span><span style=\\\"color: #24292F\\\">.&#39;client </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> &#39;client;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-233550052,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/ftp;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/lang.&#39;string </span><span style=\\\"color: #CF222E\\\">as</span><span style=\\\"color: #24292F\\\"> strings;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">AuthConfiguration authConfig </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    credentials</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {username: </span><span style=\\\"color: #0A3069\\\">&quot;wso2&quot;</span><span style=\\\"color: #24292F\\\">, password</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;wso2123&quot;</span><span style=\\\"color: #24292F\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    privateKey</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        path</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;resources/keys/sftp.private.key&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        password</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;password&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">ClientConfiguration sftpClientConfig </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    protocol</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> ftp:SFTP,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    host</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;ftp.example.com&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    port</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">21</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    auth</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> authConfig</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">main</span><span style=\\\"color: #24292F\\\">() </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">error?</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Client clientEp </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">new</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">sftpClientConfig</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">stream&lt;</span><span style=\\\"color: #0550AE\\\">byte</span><span style=\\\"color: #24292F\\\">[] </span><span style=\\\"color: #CF222E\\\">&amp;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">readonly</span><span style=\\\"color: #24292F\\\">, io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Error?</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> fileStream </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> clientEp</span><span style=\\\"color: #CF222E\\\">-&gt;</span><span style=\\\"color: #8250DF\\\">get</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;/server/book.txt&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> fileStream.</span><span style=\\\"color: #8250DF\\\">forEach</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #CF222E\\\">isolated</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">byte</span><span style=\\\"color: #24292F\\\">[] </span><span style=\\\"color: #CF222E\\\">&amp;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">readonly</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">fileContent</span><span style=\\\"color: #24292F\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;File content received: &quot;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">+ checkpanic</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">strings</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">fromBytes</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">fileContent</span><span style=\\\"color: #24292F\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">stream&lt;</span><span style=\\\"color: #24292F\\\">io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Block, io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Error?</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> bStream </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">fileReadBlocksAsStream</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;/local/logFile.txt&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">1024</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> clientEp</span><span style=\\\"color: #CF222E\\\">-&gt;</span><span style=\\\"color: #8250DF\\\">put</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;/server&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">bStream</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> fileStream.</span><span style=\\\"color: #8250DF\\\">close</span><span style=\\\"color: #24292F\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[479543317,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/ftp;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">listener</span><span style=\\\"color: #24292F\\\"> ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Listener remoteServer </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">new</span><span style=\\\"color: #24292F\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    protocol</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> ftp:SFTP,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    host</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;ftp.example.com&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    auth</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        credentials</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            username</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;wso2&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            password</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;wso2123&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #953800\\\">privateKey</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            </span><span style=\\\"color: #953800\\\">path</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;resources/keys/sftp.private.key&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            </span><span style=\\\"color: #953800\\\">password</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;password&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #953800\\\">port</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">21</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #953800\\\">path</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;/home/in&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #953800\\\">pollingInterval</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">2</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #953800\\\">fileNamePattern</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;(.*).txt&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">});</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">service</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">on</span><span style=\\\"color: #24292F\\\"> remoteServer {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">remote</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">onFileChange</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Caller caller, </span><span style=\\\"color: #953800\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">WatchEvent &amp; </span><span style=\\\"color: #CF222E\\\">readonly</span><span style=\\\"color: #24292F\\\"> event) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #CF222E\\\">foreach </span><span style=\\\"color: #24292F\\\">ftp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">FileInfo addedFile </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> event.addedFiles {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;Added file path: &quot;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">+</span><span style=\\\"color: #24292F\\\"> addedFile.path);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> caller</span><span style=\\\"color: #CF222E\\\">-&gt;</span><span style=\\\"color: #8250DF\\\">delete</span><span style=\\\"color: #24292F\\\">(addedFile.path);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #CF222E\\\">foreach </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> deletedFile </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> event.deletedFiles {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;Deleted file path: &quot;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">+</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">deletedFile</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"]]"},"__N_SSG":true}