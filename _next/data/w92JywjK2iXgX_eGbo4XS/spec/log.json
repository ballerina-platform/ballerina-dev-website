{"pageProps":{"frontmatter":{},"content":"# Specification: Ballerina Log Library\n\n_Owners_: @daneshk @MadhukaHarith92  \n_Reviewers_: @daneshk  \n_Created_: 2021/11/15  \n_Updated_: 2022/02/08  \n_Edition_: Swan Lake  \n\n## Introduction\nThis is the specification for the Log standard library of [Ballerina language](https://ballerina.io/), which provides APIs to log information when running applications.\n\nThe Log library specification has evolved and may continue to evolve in the future. The released versions of the specification can be found under the relevant Github tag.\n\nIf you have any feedback or suggestions about the library, start a discussion via a [GitHub issue](https://github.com/ballerina-platform/ballerina-standard-library/issues) or in the [Discord server](https://discord.gg/ballerinalang). Based on the outcome of the discussion, the specification and implementation can be updated. Community feedback is always welcome. Any accepted proposal, which affects the specification is stored under `/docs/proposals`. Proposals under discussion can be found with the label `type/proposal` in GitHub.\n\nThe conforming implementation of the specification is released and included in the distribution. Any deviation from the specification is considered a bug.\n\n## Contents\n\n1. [Overview](#1-overview)\n2. [Logging](#2-logging)\n3. [Configure Logging](#3-configure-logging)\n4. [Writing Logs to a File](#4-writing-logs-to-a-file)\n\n## 1. Overview\nThis specification elaborates on the functionalities available in the Log library. The Ballerina log module has four log levels with their priority in descending order as follows.\n```\n1. ERROR\n2. WARN\n3. INFO\n4. DEBUG\n```\n\n## 2. Logging\nThe Ballerina log module has 4 functions to log at the 4 levels; `printDebug()`, `printError()`, `printInfo()`, and `printWarn()`.\n```ballerina\nlog:printDebug(\"debug log\");\nlog:printError(\"error log\");\nlog:printInfo(\"info log\");\nlog:printWarn(\"warn log\");\n```\n\nOptionally, an error can be passed to the functions.\n```ballerina\nerror e = error(\"something went wrong!\");\nlog:printError(\"error log with cause\", 'error = e);\n```\n\nThis will print the error message. In order to print the complete error stack traces, users need to pass the error stack trace as a key-value pair which will be discussed in the next section.\n\nUsers can pass any number of key/value pairs, which need to be displayed in the log message. The value can be of `anydata` type, a function pointer or an error stack trace.\n```ballerina\nlog:printInfo(\"info log\", id = 845315, name = \"foo\", successful = true);\n```\n\n```ballerina\nlog:printInfo(\"info log\", current_time = isolated function() returns string { return time:utcToString(time:utcNow());});\n```\n\n```ballerina\nerror e = error(\"bad sad\");\nlog:printError(\"error log\", stackTrace = e.stackTrace());\n```\n\n## 3. Configure Logging\nOnly the `INFO` and higher level logs are logged by default. The log level can be configured via a Ballerina configuration file.\nTo set the global log level to a different level (eg: `DEBUG`), place the entry given below in the `Config.toml` file.\n```\n[ballerina.log]\nlevel = \"DEBUG\"\n```\n\nEach module can also be assigned its own log level. To assign a log level to a module, provide the following entry in the `Config.toml` file.\n```\n[[ballerina.log.modules]]\nname = \"[ORG_NAME]/[MODULE_NAME]\"\nlevel = \"[LOG_LEVEL]\"\n```\n\nBy default, log messages are logged to the console in the LogFmt format. To set the output format to JSON, place the entry given below in the `Config.toml` file.\n```\n[ballerina.log]\nformat = \"json\"\n```\n\n## 4. Writing Logs to a File\nBy default, logs are printed to the console. Users can set the output to a log file by providing an output file (with `.log` extension) to `log:setOutputFile()` function.\nNote that all the subsequent logs of the entire application will be written to this file.\n```ballerina\nvar result = log:setOutputFile(\"./resources/myfile.log\");\n```\n\nThere are 2 options when writing to a file.\n```\nOVERWRITE - Truncate the existing content\nAPPEND - Append to the existing content\n```\n\nThe following overwrites an existing log file.\n```ballerina\nvar result = log:setOutputFile(\"./resources/myfile.log\", log:OVERWRITE);\n```\n","codeSnippets":"[[558894138,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printDebug</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;debug log&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printError</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;error log&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printInfo</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;info log&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printWarn</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;warn log&quot;</span><span style=\\\"color: #24292F\\\">);</span></span></code></pre>\"],[-329993095,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">error</span><span style=\\\"color: #24292F\\\"> e </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">error</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;something went wrong!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printError</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;error log with cause&quot;</span><span style=\\\"color: #24292F\\\">, &#39;error </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> e);</span></span></code></pre>\"],[809765722,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printInfo</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;info log&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">id</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">845315</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">name</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;foo&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">successful</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">true</span><span style=\\\"color: #24292F\\\">);</span></span></code></pre>\"],[-842738594,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printInfo</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;info log&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">current_time</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">isolated</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\">() </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> { </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> time</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">utcToString</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">time</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">utcNow</span><span style=\\\"color: #24292F\\\">());});</span></span></code></pre>\"],[1571339909,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">error</span><span style=\\\"color: #24292F\\\"> e </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">error</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;bad sad&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printError</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;error log&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">stackTrace</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> e.</span><span style=\\\"color: #8250DF\\\">stackTrace</span><span style=\\\"color: #24292F\\\">());</span></span></code></pre>\"],[397350581,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #0550AE\\\">var</span><span style=\\\"color: #24292F\\\"> result </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">setOutputFile</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;./resources/myfile.log&quot;</span><span style=\\\"color: #24292F\\\">);</span></span></code></pre>\"],[941258448,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #0550AE\\\">var</span><span style=\\\"color: #24292F\\\"> result </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">setOutputFile</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;./resources/myfile.log&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">OVERWRITE);</span></span></code></pre>\"]]"},"__N_SSG":true}