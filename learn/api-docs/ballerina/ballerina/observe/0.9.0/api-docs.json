{"docsData":{"releaseShortVersion":"","packages":[{"description":"","modules":[{"id":"observe","summary":"This module provides apis for observing Ballerina services.\nBallerina supports Observability out of the box. This module provides user api\u0027s to make Ballerina Observability more flexible for the user.\n","description":"## Module Overview\n\nThis module provides apis for observing Ballerina services.\nBallerina supports Observability out of the box. This module provides user api\u0027s to make Ballerina Observability more flexible for the user.\n\nTo observe Ballerina code, the \u0027--b7a.observability.enabled\u003dtrue\u0027 property should be given when starting the service\n(i.e. `ballerina run hello_world.bal --b7a.observability.enabled\u003dtrue\u0027).\n\n## Tracing\nTracing provides information regarding the roundtrip of a service invocation based on the concept of spans, which are \nstructured in a hierarchy based on the cause and effect concept. The tracing API allows users to tap into that \ntracing information, introduce new spans, and add additional information to existing spans using user-defined tags.\n\n### Samples\n\n#### Start a root span \u0026 attach a child span\n\nThe following code snippet show an example of how start a root span with no parent and start another span as a child of the first span.\nNote: Make sure that all started spans are closed properly to ensure that all spans are reported properly.\n\n```ballerina\nint spanId \u003d observe:startRootSpan(\"Parent Span\");\n\n// Do Something.\n\nint spanId2 \u003d checkpanic observe:startSpan(\"Child Span\", parentSpanId \u003d spanId);\n\n// Do Something.\n\nvar ret1 \u003d observe:finishSpan(spanId2);\n\n// Do Something.\n\nvar ret2 \u003d observe:finishSpan(spanId);\n```\n\n#### Start a span attached to a system trace\n\nWhen no parentSpanId is given or a parentSpanId of -1 is given, a span is started as a child span to the current active span in the ootb system trace.\n\n```ballerina\nint spanId \u003d checkpanic observe:startSpan(\"Child Span\");\n\n// Do Something.\n\nvar ret \u003d observe:finishSpan(spanId);\n```\n\n#### Attach a tag to a span\n\nIt is possible to add tags to span by using the `observe:addTagToSpan()` api by providing the span id and relevant tag key and tag value.\n\n```ballerina\n_ \u003d observe:addTagToSpan(spanId \u003d spanId, \"Tag Key\", \"Tag Value\");\n```\n#### Attach a tag to a span in the system trace\nWhen no spanId is provided or -1 is given, the defined tags are added to the current active span in the ootb system trace.\n\n```ballerina\nvar ret \u003d observe:addTagToSpan(\"Tag Key\", \"Tag Value\");\n```\n\n## Metrics \nThere are mainly two kind of metrics instances supported; Counter and Gauge. A counter is a cumulative metric that \nrepresents a single monotonically increasing counter whose value can only increase or be reset to zero on restart. \nFor example, you can use a counter to represent the number of requests served, tasks completed, or errors. \nThe Gauge metric instance represents a single numerical value that can arbitrarily go up and down, and also based on the\nstatistics configurations provided to the Gauge, it can also report the statistics such as max, min, mean, percentiles, etc. \n\n### Counter Samples\n\n#### Create\nThe following code snippets provides the information on how Counter instances can be created. Instantiating the counter \nwill simply create an instance based on the params passed. \n\n```ballerina\n// Create counter with simply by name.\nobserve:Counter simpleCounter \u003d new(\"SimpleCounter\"); \n\n// Create counter with description.\nobserve:Counter counterWithDesc \u003d new(\"CounterWithDesc\", desc \u003d \"This is a sample counter description\");\n\n// Create counter with tags.\nmap\u003cstring\u003e counterTags \u003d { \"method\": \"GET\" };\nobserve:Counter counterWithTags \u003d new(\"CounterWithTags\", desc \u003d \"Some description\", tags \u003d counterTags);\n```\n\n#### Register\nThe counter can registered with the global metrics registry, therefore it can be looked up later without having the \nreference of the counter that was created. Also, only the registered counters will be reported to the Metrics reporter \nsuch as Prometheus. In case, if there is already another non counter metric registered, \nthen there will be an error returned. But if it\u0027s another counter instance, then the registered counter instance will \nbe returned.\n\n```ballerina\nmap\u003cstring\u003e counterTags \u003d { \"method\": \"GET\" };\nobserve:Counter counterWithTags \u003d new(\"CounterWithTags\", desc \u003d \"Some description\", tags \u003d counterTags);\nvar anyError \u003d counterWithTags.register();\nif anyError is error {\n    log:printError(\"Cannot register the counter\", err \u003d anyError);\n}\n```\n\n#### Unregister\nThe counter can unregistered with the global metrics registry if it is already registered. If a metrics is unregistered,\nthen further it\u0027ll not be included in metrics reporting.\n\n```ballerina\nmap\u003cstring\u003e counterTags \u003d { \"method\": \"GET\" };\nobserve:Counter counterWithTags \u003d new(\"CounterWithTags\", desc \u003d \"Some description\", tags \u003d counterTags);\nvar anyError \u003d counterWithTags.register();\nif anyError is error {\n    log:printError(\"Cannot register the counter\", err \u003d anyError);\n}\ncounterWithTags.unregister();\n    \n```\n\n#### Increment\nThe counter can be incremented without passing any params (defaulted to 1), or by a specific amount. \n\n```ballerina\nmap\u003cstring\u003e counterTags \u003d { \"method\": \"GET\" };\nobserve:Counter counterWithTags \u003d new(\"CounterWithTags\", desc \u003d \"Some description\", tags \u003d counterTags);\n// Increment by 1.\ncounterWithTags.increment(); \n// Increment by amount 10.\ncounterWithTags.increment(amount \u003d 10);\n```\n\n#### Reset\nThe counter can be resetted to default amount \u003d 0. \n\n```ballerina\nmap\u003cstring\u003e counterTags \u003d { \"method\": \"GET\" };\nobserve:Counter counterWithTags \u003d new(\"CounterWithTags\", desc \u003d \"Some description\", tags \u003d counterTags);\ncounterWithTags.reset();\n```\n\n#### Get Value\nThe current value can be retrieved by this operation. \n\n```ballerina\nmap\u003cstring\u003e counterTags \u003d { \"method\": \"GET\" };\nobserve:Counter counterWithTags \u003d new(\"CounterWithTags\", desc \u003d \"Some description\", tags \u003d counterTags);\nint currentValue \u003d counterWithTags.getValue();\n```\n\n### Gauge Samples\n\n#### Create\nThe following code snippets provides the information on how Gauge instances can be created. Instantiating the gauge \nwill simply create an instance based on the params passed. \n\n```ballerina\n// Create gauge with simply by name. \n// Uses the default statistics configuration. \nobserve:Gauge simpleGauge \u003d new(\"SimpleGauge\"); \n\n// Create gauge with description.\n// Uses the default statistics configuration. \nobserve:Gauge gaugeWithDesc \u003d new(\"GaugeWithDesc\", desc \u003d \"This is a sample gauge description\");\n\n// Create gauge with tags.\n// Uses the default statistics configuration. \nmap\u003cstring\u003e gaugeTags \u003d { \"method\": \"GET\" };\nobserve:Counter gaugeWithTags \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", tags \u003d gaugeTags);\n\n// Create gauge with disabled statistics. \nobserve:StatisticConfig[] statsConfigs \u003d [];\nobserve:Gauge gaugeWithNoStats \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", \n                                    tags \u003d gaugeTags, statisticConfig \u003d statsConfigs);\n\n// Create gauge with statistics config. \nobserve:StatisticConfig config \u003d { timeWindow: 30000, percentiles: [0.33, 0.5, 0.9, 0.99], buckets: 3 };\nstatsConfigs[0]\u003dconfig; \n\nobserve:Gauge gaugeWithStats \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", \n                                   tags \u003d gaugeTags, statisticConfig \u003d statsConfigs);\n```\n\n#### Register\nThe gauge can registered with the global metrics registry, therefore it can be looked up later without having the \nreference of the gauge that was created. Also, only the registered counters will be reported to the Metrics reporter \nsuch as Prometheus. In case, if there is already another non gauge metric registered, \nthen there will be an error returned. But if it\u0027s another gauge instance, then the registered gauge instance will \nbe returned.\n\n```ballerina\nmap\u003cstring\u003e gaugeTags \u003d { \"method\": \"GET\" };\nobserve:Gauge gaugeWithTags \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", tags \u003d gaugeTags);\nvar anyError \u003d gaugeWithTags.register();\nif anyError is error {\n    log:printError(\"Cannot register the gauge\", err \u003d anyError);\n}\n```\n\n#### Unregister\nThe gauge can unregistered with the global metrics registry if it is already registered. If a metrics is unregistered,\nthen further it\u0027ll not be included in metrics reporting.\n\n```ballerina\nmap\u003cstring\u003e gaugeTags \u003d { \"method\": \"GET\" };\nobserve:Gauge gaugeWithTags \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", tags \u003d gaugeTags);\nvar anyError \u003d gaugeWithTags.register();\nif anyError is error {\n    log:printError(\"Cannot register the gauge\", err \u003d anyError);\n}\ngaugeWithTags.unregister();\n```\n\n#### Increment\nThe gauge can be incremented without passing any params (defaulted to 1.0), or by a specific amount. \n\n```ballerina\nmap\u003cstring\u003e gaugeTags \u003d { \"method\": \"GET\" };\nobserve:Gauge gaugeWithTags \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", tags \u003d gaugeTags);\n// Increment by 1.\ngaugeWithTags.increment(); \n// Increment by amount 10.\ngaugeWithTags.increment(amount \u003d 10.0);  \n```\n\n#### Decrement\nThe gauge can be decremented without passing any params (defaulted to 1.0), or by a specific amount. \n\n```ballerina\nmap\u003cstring\u003e gaugeTags \u003d { \"method\": \"GET\" };\nobserve:Gauge gaugeWithTags \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", tags \u003d gaugeTags);\n// Increment by 1.\ngaugeWithTags.decrement(); \n// Increment by amount 10.\ngaugeWithTags.decrement(amount \u003d 10.0);\n```\n\n#### Set Value\nThis method sets the gauge\u0027s value with specific amount. \n\n```ballerina\nmap\u003cstring\u003e gaugeTags \u003d { \"method\": \"GET\" };\nobserve:Gauge gaugeWithTags \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", tags \u003d gaugeTags);\ngaugeWithTags.setValue(100.0);\n```\n\n#### Get Value.\nThe current value can be retrieved by this operation. \n\n```ballerina\nmap\u003cstring\u003e gaugeTags \u003d { \"method\": \"GET\" };\nobserve:Gauge gaugeWithTags \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", tags \u003d gaugeTags);\nfloat currentValue \u003d gaugeWithTags.getValue(); \n```\n\n#### Get Snapshot.\nThis method retrieves current snapshot of the statistics calculation based on the configurations passed to the gauge. \nIf the statistics are disabled, then it\u0027ll be returning nil ().\n\n```ballerina\nmap\u003cstring\u003e gaugeTags \u003d { \"method\": \"GET\" };\nobserve:Gauge gaugeWithTags \u003d new(\"GaugeWithTags\", desc \u003d \"Some description\", tags \u003d gaugeTags);\ngaugeWithTags.setValue(1.0);\ngaugeWithTags.setValue(2.0);\ngaugeWithTags.setValue(3.0);\n\nobserve:Snapshot[]? summarySnapshot \u003d gaugeWithTags.getSnapshot();\nif summarySnapshot is observe:Snapshot[] {\n    io:println(summarySnapshot);\n} else {\n    io:println(\"No statistics available!\");\n}\n```\n\n### Global Metrics Samples\n\n#### Get All Metrics \nThis method returns all the metrics that are registered in the global metrics registry. This method is mainly useful for\nmetric reporters, where they can fetch all metrics, format those, and report. \n\n```ballerina\nobserve:Metric[] metrics \u003d observe:getAllMetrics();\nforeach var metric in metrics {\n    // Do something.\n}\n```\n\n#### Lookup Metric\nThis method will lookup for the metric from the global metric registry and return it. \n\n```ballerina\nmap\u003cstring\u003e tags \u003d { \"method\": \"GET\" };\nobserve:Counter|observe:Gauge|() metric \u003d observe:lookupMetric(\"MetricName\", tags \u003d tags);\nif metric is observe:Counter {\n    metric.increment(amount \u003d 10);\n} else if metric is observe:Gauge {\n    metric.increment(amount \u003d 10.0);\n} else {\n    io:println(\"No Metric Found!\");\n}\n```\n","orgName":"ballerina","version":"0.9.0","records":[{"fields":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"desc","description":"Description of the metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"tags","description":"Tags associated with the metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"metricType","description":"Type of the metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"value","description":"Current value the metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"Snapshot","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"summary","description":"If the metric is configured with statistics config, then the calculated statistics of the metric.\n","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"Metric","description":"This represents the generic metric record that can represent both counter and gauge.\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"fields":[{"defaultValue":"","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"percentile","description":"The percentile of the reported value.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"value","description":"The value of the percentile.\n","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"PercentileValue","description":"This represents the percentile value record.\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"fields":[{"defaultValue":"","type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"timeWindow","description":"The time window in which variation of the values are considered.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"mean","description":"The average value within the time window.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"max","description":"The max value within the time window.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"min","description":"The min value within the time window.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"stdDev","description":"The standard deviation value within the time window.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"PercentileValue","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"percentileValues","description":"The percentiles values calculated wihtin the time window.\n","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"Snapshot","description":"This represents the snapshot of the statistics calculation of the gauge.\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"fields":[{"defaultValue":"","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"percentiles","description":"The percentiles that needs to be calculated.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"timeWindow","description":"The time window (in milli seconds) in which variation of the values are considered.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"buckets","description":"The number of buckets used in the sliding time window.\n","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"StatisticConfig","description":"This represents the statistic configuration that can be used to instatiate gauge metric.\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"}],"classes":[{"fields":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the counter metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"description","description":"Description of the counter metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"metricTags","description":"Tags associated with the counter metric.\n","isDeprecated":false,"isReadOnly":false}],"methods":[{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the Counter instance.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"\"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"desc","description":"Description of the Counter instance. If no description is provided, the the default empty string\nwill be used.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"tags","description":"The key/value pair of Tags. If no tags are provided, the default nil value will be used.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"This instantiates the Counter object. Name field is mandatory, and description and tags fields\nare optional and have its own default values when no params are passed.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"Returns error if there is any metric registered already with the same name\nbut different parameters or in a different kind.\n","isDeprecated":false,"isReadOnly":false}],"name":"register","description":"Register the counter metric instance with the Metric Registry.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"unregister","description":"Unregister the counter metric instance with the Metric Registry.\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"1","type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"amount","description":"The amount by which the value needs to be increased. The amount is defaulted as 1 and will be\nused if there is no amount passed in.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"increment","description":"Increment the counter\u0027s value by an amount.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"reset","description":"Resets the counter\u0027s value to zero.\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The current value of the counter.\n","isDeprecated":false,"isReadOnly":false}],"name":"getValue","description":"Retrieves the counter\u0027s current value.\n\n","isDeprecated":false,"isReadOnly":false}],"initMethod":{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the Counter instance.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"\"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"desc","description":"Description of the Counter instance. If no description is provided, the the default empty string\nwill be used.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"tags","description":"The key/value pair of Tags. If no tags are provided, the default nil value will be used.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"This instantiates the Counter object. Name field is mandatory, and description and tags fields\nare optional and have its own default values when no params are passed.\n\n","isDeprecated":false,"isReadOnly":false},"otherMethods":[{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"Returns error if there is any metric registered already with the same name\nbut different parameters or in a different kind.\n","isDeprecated":false,"isReadOnly":false}],"name":"register","description":"Register the counter metric instance with the Metric Registry.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"unregister","description":"Unregister the counter metric instance with the Metric Registry.\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"1","type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"amount","description":"The amount by which the value needs to be increased. The amount is defaulted as 1 and will be\nused if there is no amount passed in.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"increment","description":"Increment the counter\u0027s value by an amount.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"reset","description":"Resets the counter\u0027s value to zero.\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The current value of the counter.\n","isDeprecated":false,"isReadOnly":false}],"name":"getValue","description":"Retrieves the counter\u0027s current value.\n\n","isDeprecated":false,"isReadOnly":false}],"isIsolated":false,"name":"Counter","description":"This represents the metric type - counter, that can be only increased by an integer number.\n\n","isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the counter metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"description","description":"Description of the counter metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"metricTags","description":"Tags associated with the counter metric.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"StatisticConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"statisticConfigs","description":"Array of StatisticConfig objects which defines about the statistical calculation\nof the gauge during its usage.\n","isDeprecated":false,"isReadOnly":false}],"methods":[{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the Gauge instance.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"\"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"desc","description":"Description of the Gauge instance. If no description is provided, the the default empty string\nwill be used.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"tags","description":"The key/value pair of Tags. If no tags are provided, the default nil value will be used.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"StatisticConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"statisticConfig","description":"Statistics configurations array is used for statistics calculation. In case if empty\nstatistics configurations array is passed, then statistics calculation will be disabled.\nIf nil () is passed, then default statistics configs will be used for the statitics\ncalculation.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"This instantiates the Gauge object. Name field is mandatory, and description, tags, and statitics config fields\nare optional and have its own default values when no params are passed.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"Returns error if there is any metric registered already with the same name\nbut different parameters or in a different kind.\n","isDeprecated":false,"isReadOnly":false}],"name":"register","description":"Register the gauge metric instance with the Metric Registry.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"unregister","description":"Unregister the counter metric instance with the Metric Registry.\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"1.0","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"amount","description":"The amount by which the value of gauge needs to be increased.\nThe amount is defaulted as 1.0 and will be used if there is no amount passed in.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"increment","description":"Increment the gauge\u0027s value by an amount.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"1.0","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"amount","description":"The amount by which the value of gauge needs to be decreased.\nThe amount is defaulted as 1.0 and will be used if there is no amount passed in.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"decrement","description":"Decrement the gauge\u0027s value by an amount.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"amount","description":"The instantaneous value that needs to be set as gauge value.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"setValue","description":"Sets the instantaneous value for gauge.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The current value of the gauge.\n","isDeprecated":false,"isReadOnly":false}],"name":"getValue","description":"Retrieves the gauge\u0027s current value.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"Snapshot","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"","description":"Array of the statistics snapshots.\nIf there is no statisticsConfigs provided, then it will be nil.\n","isDeprecated":false,"isReadOnly":false}],"name":"getSnapshot","description":"Retrieves statistics snapshots based on the statistics configs of the gauge.\n\n","isDeprecated":false,"isReadOnly":false}],"initMethod":{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the Gauge instance.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"\"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"desc","description":"Description of the Gauge instance. If no description is provided, the the default empty string\nwill be used.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"tags","description":"The key/value pair of Tags. If no tags are provided, the default nil value will be used.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"StatisticConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"statisticConfig","description":"Statistics configurations array is used for statistics calculation. In case if empty\nstatistics configurations array is passed, then statistics calculation will be disabled.\nIf nil () is passed, then default statistics configs will be used for the statitics\ncalculation.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"This instantiates the Gauge object. Name field is mandatory, and description, tags, and statitics config fields\nare optional and have its own default values when no params are passed.\n\n","isDeprecated":false,"isReadOnly":false},"otherMethods":[{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"Returns error if there is any metric registered already with the same name\nbut different parameters or in a different kind.\n","isDeprecated":false,"isReadOnly":false}],"name":"register","description":"Register the gauge metric instance with the Metric Registry.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"unregister","description":"Unregister the counter metric instance with the Metric Registry.\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"1.0","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"amount","description":"The amount by which the value of gauge needs to be increased.\nThe amount is defaulted as 1.0 and will be used if there is no amount passed in.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"increment","description":"Increment the gauge\u0027s value by an amount.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"1.0","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"amount","description":"The amount by which the value of gauge needs to be decreased.\nThe amount is defaulted as 1.0 and will be used if there is no amount passed in.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"decrement","description":"Decrement the gauge\u0027s value by an amount.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"amount","description":"The instantaneous value that needs to be set as gauge value.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"setValue","description":"Sets the instantaneous value for gauge.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"float","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The current value of the gauge.\n","isDeprecated":false,"isReadOnly":false}],"name":"getValue","description":"Retrieves the gauge\u0027s current value.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"Snapshot","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"","description":"Array of the statistics snapshots.\nIf there is no statisticsConfigs provided, then it will be nil.\n","isDeprecated":false,"isReadOnly":false}],"name":"getSnapshot","description":"Retrieves statistics snapshots based on the statistics configs of the gauge.\n\n","isDeprecated":false,"isReadOnly":false}],"isIsolated":false,"name":"Gauge","description":"This represents the metric type - gauge, that can hold instantaneous, increased or decreased value\nduring the usage.\n\n","isDeprecated":false,"isReadOnly":false}],"objectTypes":[],"clients":[],"listeners":[],"functions":[{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"tagKey","description":"Key of the tag\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"tagValue","description":"Value of the tag\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"version":"slalpha4","name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"An error if an error occurred while attaching tag to System Metrics\n","isDeprecated":false,"isReadOnly":false}],"name":"addTagToMetrics","description":"Add a key value pair as a tag to system metrics.\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"tagKey","description":"Key of the tag\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"tagValue","description":"Value of the tag\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"-1","type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"spanId","description":"Id of span to which the tags should be added or -1 to add tags to the current active span\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"version":"slalpha4","name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"An error if an error occurred while attaching tag to the span\n","isDeprecated":false,"isReadOnly":false}],"name":"addTagToSpan","description":"Add a key value pair as a tag to the span.\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":false,"isRemote":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"spanId","description":"Id of span to finish\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"version":"slalpha4","name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"An error if an error occurred while finishing the span\n","isDeprecated":false,"isReadOnly":false}],"name":"finishSpan","description":"Finish the current span.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"Metric","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"","description":"Array of all registered metrics.\n","isDeprecated":false,"isReadOnly":false}],"name":"getAllMetrics","description":"Retrieve all registered metrics including default metrics from the ballerina runtime, and user defined metrics.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false,"isReadOnly":false}],"name":"getMetricsProvider","description":"","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false,"isReadOnly":false}],"name":"getMetricsReporter","description":"","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false,"isReadOnly":false}],"name":"getTracingProvider","description":"","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false,"isReadOnly":false}],"name":"isMetricsEnabled","description":"","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false,"isReadOnly":false}],"name":"isObservabilityEnabled","description":"","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"version":"slalpha4","name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false,"isReadOnly":false}],"name":"isTracingEnabled","description":"","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":false,"isRemote":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the metric to lookup.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"tags","description":"The key/value pair tags that associated with the metric that should be looked up.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"Counter","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"observe","version":"0.9.0","name":"Gauge","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The metric instance.\n","isDeprecated":false,"isReadOnly":false}],"name":"lookupMetric","description":"Retrieves the specific metric that is described by the given name and tags.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"spanName","description":"Name of the span\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"tags","description":"Tags to be associated to the span\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"SpanId of the started span\n","isDeprecated":false,"isReadOnly":false}],"name":"startRootSpan","description":"Start a span with no parent span.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":false,"isRemote":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"spanName","description":"Name of the span\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","type":{"version":"slalpha4","name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"tags","description":"Tags to be associated to the span\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"-1","type":{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"parentSpanId","description":"Id of the parent span or -1 if parent span should be taken from system trace\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"version":"slalpha4","name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"version":"slalpha4","name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"","description":"SpanId of the started span\n","isDeprecated":false,"isReadOnly":false}],"name":"startSpan","description":"Start a span and create child relationship to current active span or user specified span.\n\n","isDeprecated":false,"isReadOnly":false}],"constants":[],"annotations":[{"attachmentPoints":"source function","name":"Observable","description":"","isDeprecated":false,"isReadOnly":false}],"errors":[],"types":[],"enums":[]}],"name":"observe","orgName":"ballerina","version":"0.9.0","summary":"This module provides apis for observing Ballerina services.\nBallerina supports Observability out of the box. This module provides user api\u0027s to make Ballerina Observability more flexible for the user.\n"}],"builtinTypes":[],"keywords":[]},"searchData":{"modules":[{"id":"observe","description":"This module provides apis for observing Ballerina services.","orgName":"ballerina","packageName":"observe","version":"0.9.0"}],"classes":[{"id":"Counter","description":"This represents the metric type - counter, that can be only increased by an integer number.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"Gauge","description":"This represents the metric type - gauge, that can hold instantaneous, increased or decreased value\nduring the usage.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"}],"functions":[{"id":"addTagToMetrics","description":"Add a key value pair as a tag to system metrics.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"addTagToSpan","description":"Add a key value pair as a tag to the span.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"finishSpan","description":"Finish the current span.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"getAllMetrics","description":"Retrieve all registered metrics including default metrics from the ballerina runtime, and user defined metrics.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"getMetricsProvider","description":"","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"getMetricsReporter","description":"","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"getTracingProvider","description":"","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"isMetricsEnabled","description":"","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"isObservabilityEnabled","description":"","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"isTracingEnabled","description":"","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"lookupMetric","description":"Retrieves the specific metric that is described by the given name and tags.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"startRootSpan","description":"Start a span with no parent span.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"startSpan","description":"Start a span and create child relationship to current active span or user specified span.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"}],"records":[{"id":"Metric","description":"This represents the generic metric record that can represent both counter and gauge.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"PercentileValue","description":"This represents the percentile value record.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"Snapshot","description":"This represents the snapshot of the statistics calculation of the gauge.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"},{"id":"StatisticConfig","description":"This represents the statistic configuration that can be used to instatiate gauge metric.","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"}],"constants":[],"errors":[],"types":[],"clients":[],"listeners":[],"annotations":[{"id":"Observable","description":"","packageName":"observe","moduleId":"observe","moduleOrgName":"ballerina","moduleVersion":"0.9.0"}],"objectTypes":[],"enums":[]}}