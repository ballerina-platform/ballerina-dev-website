{"docsData":{"releaseShortVersion":"","packages":[{"description":"## Package overview\n\nThis package provides the following regex utility functions. \n\n* `matches` - Checks whether a string matches a given regex.\n* `replaceAll` - Replaces every occurrence of a substring that matches a given regex in a string, with another string provided.\n* `replaceFirst` - Replaces the first occurrence of a substring that matches a given regex in a string, with another string provided.\n* `split` - Splits a string using a given regex delimiter and returns an array of the split elements.                     \n","modules":[{"id":"regex","summary":"","description":"","orgName":"ballerina","version":"0.7.0-alpha7","records":[],"classes":[],"objectTypes":[],"clients":[],"listeners":[],"functions":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"stringToMatch","description":"The string to match the regex\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"regex","description":"The regex to match the string\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"version":"slalpha4","name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`true` if the provided string matches the regex or else\n`false`\n","isDeprecated":false,"isReadOnly":false}],"name":"matches","description":"Checks whether the given string matches the provided regex.\n```ballerina\nboolean isMatched \u003d regex:matches(\"Ballerina is great\", \"Ba[a-z ]+\");\n```\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"originalString","description":"The original string to replace the occurrences of the\nsubstrings that match the provided `regex`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"regex","description":"The regex to match the substrings in the `originalString` to be replaced\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"replacement","description":"The `replacement` string to replace the subsgrings, which\nmatch the `regex`\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The resultant string with the replaced substrings\n","isDeprecated":false,"isReadOnly":false}],"name":"replaceAll","description":"Replaces each occurrence of the substrings, which match the provided\nregular expression from the given original string value with the\nprovided replacement string.\n```ballerina\nstring result \u003d regex:replaceAll(\"Ballerina is great\", \"\\s+\", \"_\");\n```\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"originalString","description":"The original string to replace the occurrences of the\nsubstrings that match the provided `regex`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"regex","description":"The regex to match the first substring in the `originalString` to\nbe replaced\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"replacement","description":"The `replacement` string to replace the first substring, which\nmatches the `regex`\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The resultant string with the replaced substring\n","isDeprecated":false,"isReadOnly":false}],"name":"replaceFirst","description":"Replaces the first substring that matches the given regular expression with\nthe provided `replacement` string.\n```ballerina\nstring result \u003d regex:replaceFirst(\"Ballerina is great\", \"\\s+\", \"_\");\n```\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"receiver","description":"The string to split\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"delimiter","description":"The delimiter to split by\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"version":"slalpha4","name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isIsolated":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"","description":"An array of strings containing the individual strings that are split\n","isDeprecated":false,"isReadOnly":false}],"name":"split","description":"Returns an array of strings by splitting a string using the provided\ndelimiter.\n```ballerina\nstring[] result \u003d regex:split(\"Ballerina is great\", \" \");\n```\n\n","isDeprecated":false,"isReadOnly":false,"builtInVersion":"slalpha4"}],"constants":[],"annotations":[],"errors":[],"types":[],"enums":[]}],"name":"regex","orgName":"ballerina","version":"0.7.0-alpha7","summary":"This package provides the following regex utility functions.\n"}],"builtinTypes":[],"keywords":[]},"searchData":{"modules":[{"id":"regex","description":"","orgName":"ballerina","packageName":"regex","version":"0.7.0-alpha7"}],"classes":[],"functions":[{"id":"matches","description":"Checks whether the given string matches the provided regex.","packageName":"regex","moduleId":"regex","moduleOrgName":"ballerina","moduleVersion":"0.7.0-alpha7"},{"id":"replaceAll","description":"Replaces each occurrence of the substrings, which match the provided\nregular expression from the given original string value with the\nprovided replacement string.","packageName":"regex","moduleId":"regex","moduleOrgName":"ballerina","moduleVersion":"0.7.0-alpha7"},{"id":"replaceFirst","description":"Replaces the first substring that matches the given regular expression with\nthe provided `replacement` string.","packageName":"regex","moduleId":"regex","moduleOrgName":"ballerina","moduleVersion":"0.7.0-alpha7"},{"id":"split","description":"Returns an array of strings by splitting a string using the provided\ndelimiter.","packageName":"regex","moduleId":"regex","moduleOrgName":"ballerina","moduleVersion":"0.7.0-alpha7"}],"records":[],"constants":[],"errors":[],"types":[],"clients":[],"listeners":[],"annotations":[],"objectTypes":[],"enums":[]}}