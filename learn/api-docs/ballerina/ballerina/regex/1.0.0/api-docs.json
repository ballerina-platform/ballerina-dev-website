{"docsData":{"releaseVersion":"","langLibs":[],"modules":[{"relatedModules":[],"records":[],"classes":[],"objectTypes":[],"clients":[],"listeners":[],"functions":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"stringToMatch","description":"The string to match the regex\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"regex","description":"The regex to match the string\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"`true` if the provided string matches the regex or else\n`false`\n","isDeprecated":false,"isReadOnly":false}],"name":"matches","description":"Checks whether the given string matches the provided `regex`.\n```ballerina\nboolean isMatched \u003d regex:matches(\"Ballerina is great\", \"Ba[a-z ]+\");\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"originalString","description":"The original string to replace the occurrences of the\nsubstrings that match the provided `regex`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"regex","description":"The regex to match the substrings in the `originalString` to be replaced\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"replacement","description":"The `replacement` string to replace the subsgrings, which\nmatch the `regex`\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"The resultant string with the replaced substrings\n","isDeprecated":false,"isReadOnly":false}],"name":"replaceAll","description":"Replaces each occurrence of the substrings, which match the provided\n`regex` from the given original string value with the\nprovided replacement string.\n```ballerina\nstring result \u003d regex:replaceAll(\"Ballerina is great\", \"\\s+\", \"_\");\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"originalString","description":"The original string to replace the occurrences of the\nsubstrings that match the provided `regex`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"regex","description":"The regex to match the first substring in the `originalString` to\nbe replaced\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"replacement","description":"The `replacement` string to replace the first substring, which\nmatches the `regex`\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"The resultant string with the replaced substring\n","isDeprecated":false,"isReadOnly":false}],"name":"replaceFirst","description":"Replaces the first substring that matches the given `regex` with\nthe provided `replacement` string.\n```ballerina\nstring result \u003d regex:replaceFirst(\"Ballerina is great\", \"\\s+\", \"_\");\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"receiver","description":"The string to split\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"delimiter","description":"The delimiter to split by\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"","description":"An array of strings containing the individual strings that are split\n","isDeprecated":false,"isReadOnly":false}],"name":"split","description":"Returns an array of strings by splitting a string using the provided\ndelimiter.\n```ballerina\nstring[] result \u003d regex:split(\"Ballerina is great\", \" \");\n```\n\n","isDeprecated":false,"isReadOnly":false}],"constants":[],"annotations":[],"errors":[],"types":[],"enums":[],"variables":[],"id":"regex","summary":"This module provides APIs for searching, splitting, and replacing the set of characters of the string. These APIs are using a \n","description":"## Overview\n\nThis module provides APIs for searching, splitting, and replacing the set of characters of the string. These APIs are using a \nregular expression as a `String` to perform these operations by finding the string matches.\n\n[Regular expressions](https://en.wikipedia.org/wiki/Regular_expression), are notations for describing sets of \ncharacter strings. If a particular string is in the set described by a regular expression, the regular expression matches that string.\n\nFor information on the operations, which you can perform with the regex module, see the below **Functions**.\n","orgName":"ballerina","version":"1.0.0"}]},"searchData":{"modules":[{"id":"regex","description":"This module provides APIs for searching, splitting, and replacing the set of characters of the string. These APIs are using a \n","orgName":"ballerina","version":"1.0.0"}],"classes":[],"functions":[{"id":"matches","description":"Checks whether the given string matches the provided `regex`.\n```ballerina\nboolean isMatched \u003d regex:matches(\"Ballerina is great\", \"Ba[a-z ]+\");\n```\n\n","moduleId":"regex","moduleOrgName":"ballerina","moduleVersion":"1.0.0"},{"id":"replaceAll","description":"Replaces each occurrence of the substrings, which match the provided\n`regex` from the given original string value with the\nprovided replacement string.\n```ballerina\nstring result \u003d regex:replaceAll(\"Ballerina is great\", \"\\s+\", \"_\");\n```\n\n","moduleId":"regex","moduleOrgName":"ballerina","moduleVersion":"1.0.0"},{"id":"replaceFirst","description":"Replaces the first substring that matches the given `regex` with\nthe provided `replacement` string.\n```ballerina\nstring result \u003d regex:replaceFirst(\"Ballerina is great\", \"\\s+\", \"_\");\n```\n\n","moduleId":"regex","moduleOrgName":"ballerina","moduleVersion":"1.0.0"},{"id":"split","description":"Returns an array of strings by splitting a string using the provided\ndelimiter.\n```ballerina\nstring[] result \u003d regex:split(\"Ballerina is great\", \" \");\n```\n\n","moduleId":"regex","moduleOrgName":"ballerina","moduleVersion":"1.0.0"}],"records":[],"constants":[],"errors":[],"types":[],"clients":[],"listeners":[],"annotations":[],"objectTypes":[],"enums":[]}}