{"docsData":{"releaseVersion":"","langLibs":[],"modules":[{"relatedModules":[],"records":[{"fields":[{"defaultValue":"[]","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"value","description":"","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"AfterGroupsConfig","description":"","isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"alwaysRun","description":"","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"AfterSuiteConfig","description":"","isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"[]","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"value","description":"","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"BeforeGroupsConfig","description":"","isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"\".\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"moduleName","description":"Name of the module, which includes the function to be mocked\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"functionName","description":"Name of the function to be mocked\n","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"MockConfig","description":"Configuration of the function to be mocked.\n\n","isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"enable","description":"Flag to enable/disable test functions\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"[]","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"groups","description":"List of groups that this test function belongs to\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isLambda":true,"isIsolated":false,"isExtern":false,"isRemote":false,"paramTypes":[],"returnType":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":true,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"dataProvider","description":"Function, which will be used to feed data into this test\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isLambda":true,"isIsolated":false,"isExtern":false,"isRemote":false,"paramTypes":[],"returnType":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":true,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"before","description":"Function to be run before the test is run\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isLambda":true,"isIsolated":false,"isExtern":false,"isRemote":false,"paramTypes":[],"returnType":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":true,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"after","description":"Function to be run after the test is run\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"[]","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"dependsOn","description":"A list of functions the test function depends on and will be run before the test\n","isDeprecated":false,"isReadOnly":false}],"isClosed":false,"name":"TestConfig","description":"Configuration set for test functions.\n\n","isDeprecated":false,"isReadOnly":false}],"classes":[{"fields":[],"methods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MockFunction","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"mockFunction","description":"","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"Gets invoked during the stub registration.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"returnValue","description":"Value or error to return\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"thenReturn","description":"Sets the value to be returned when the function is called.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"args","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":true,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"name":"args","description":"Arguments list\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"FunctionStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing calls to a function\n","isDeprecated":false,"isReadOnly":false}],"name":"withArguments","description":"Sets the arguments list to consider when stubbing the function call.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"doNothing","description":"Sets the function behavior to do nothing when called.\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"functionName","description":"Mock function to call in place of the real\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"call","description":"Sets a function to be invoked when the real function is called.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"callOriginal","description":"Sets the original function to be invoked.\n","isDeprecated":false,"isReadOnly":false}],"initMethod":{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MockFunction","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"mockFunction","description":"","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"Gets invoked during the stub registration.\n\n","isDeprecated":false,"isReadOnly":false},"otherMethods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"returnValue","description":"Value or error to return\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"thenReturn","description":"Sets the value to be returned when the function is called.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"args","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":true,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"name":"args","description":"Arguments list\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"FunctionStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing calls to a function\n","isDeprecated":false,"isReadOnly":false}],"name":"withArguments","description":"Sets the arguments list to consider when stubbing the function call.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"doNothing","description":"Sets the function behavior to do nothing when called.\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"functionName","description":"Mock function to call in place of the real\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"call","description":"Sets a function to be invoked when the real function is called.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"callOriginal","description":"Sets the original function to be invoked.\n","isDeprecated":false,"isReadOnly":false}],"isIsolated":false,"name":"FunctionStub","description":"Represents an object that allows stubbing function invocations.\n\n","isDeprecated":false,"isReadOnly":false},{"fields":[],"methods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"object{} ","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"mockObject","description":"Object to register\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"Gets invoked during the stub registration.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"args","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":true,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"name":"args","description":"Arguments list\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MemberFunctionStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing calls to provided member function\n","isDeprecated":false,"isReadOnly":false}],"name":"withArguments","description":"Sets the arguments list to consider when stubbing the function call.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"returnValue","description":"Value or error to return\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"thenReturn","description":"Sets the value to be returned when the function is called.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"returnValues","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":true,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"name":"returnValues","description":"Value or error to return\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"thenReturnSequence","description":"Sets the values to be returned when the function is called repeatedly.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"doNothing","description":"Sets the function behavior to do nothing when called.\n","isDeprecated":false,"isReadOnly":false}],"initMethod":{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"object{} ","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"mockObject","description":"Object to register\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"Gets invoked during the stub registration.\n\n","isDeprecated":false,"isReadOnly":false},"otherMethods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"args","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":true,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"name":"args","description":"Arguments list\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MemberFunctionStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing calls to provided member function\n","isDeprecated":false,"isReadOnly":false}],"name":"withArguments","description":"Sets the arguments list to consider when stubbing the function call.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"returnValue","description":"Value or error to return\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"thenReturn","description":"Sets the value to be returned when the function is called.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"returnValues","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":true,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}},"name":"returnValues","description":"Value or error to return\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"thenReturnSequence","description":"Sets the values to be returned when the function is called repeatedly.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[],"name":"doNothing","description":"Sets the function behavior to do nothing when called.\n","isDeprecated":false,"isReadOnly":false}],"isIsolated":false,"name":"MemberFunctionStub","description":"Represents an object that allows stubbing member function invocations.\n\n","isDeprecated":false,"isReadOnly":false},{"fields":[],"methods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"object{} ","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"mockObject","description":"Object to register\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"Gets invoked during the stub registration.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"returnValue","description":"Value or error to return\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"thenReturn","description":"Sets the value to be returned when the function is called.\n\n","isDeprecated":false,"isReadOnly":false}],"initMethod":{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"object{} ","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"mockObject","description":"Object to register\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"Gets invoked during the stub registration.\n\n","isDeprecated":false,"isReadOnly":false},"otherMethods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"returnValue","description":"Value or error to return\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"thenReturn","description":"Sets the value to be returned when the function is called.\n\n","isDeprecated":false,"isReadOnly":false}],"isIsolated":false,"name":"MemberVariableStub","description":"Represents an object that allows stubbing member variables retrieved.\n\n","isDeprecated":false,"isReadOnly":false},{"fields":[],"methods":[],"otherMethods":[],"isIsolated":false,"name":"MockFunction","description":"Represents a MockFunction object.\n","isDeprecated":false,"isReadOnly":false},{"fields":[],"methods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"object{} ","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"mockObject","description":"Object to register stubbing\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"Gets invoked during the mock object preparation.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"functionName","description":"Function name to allow stubbing\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MemberFunctionStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing calls to provided member function\n","isDeprecated":false,"isReadOnly":false}],"name":"when","description":"Allows a member function to stub.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"fieldName","description":"Field name to allow stubbing\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MemberVariableStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing retrieval of provided member variable\n","isDeprecated":false,"isReadOnly":false}],"name":"getMember","description":"Allows a member variable to stub.\n\n","isDeprecated":false,"isReadOnly":false}],"initMethod":{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"object{} ","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"mockObject","description":"Object to register stubbing\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"init","description":"Gets invoked during the mock object preparation.\n\n","isDeprecated":false,"isReadOnly":false},"otherMethods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"functionName","description":"Function name to allow stubbing\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MemberFunctionStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing calls to provided member function\n","isDeprecated":false,"isReadOnly":false}],"name":"when","description":"Allows a member function to stub.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"fieldName","description":"Field name to allow stubbing\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MemberVariableStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing retrieval of provided member variable\n","isDeprecated":false,"isReadOnly":false}],"name":"getMember","description":"Allows a member variable to stub.\n\n","isDeprecated":false,"isReadOnly":false}],"isIsolated":false,"name":"MockObject","description":"Represents a Mock object in which stubs for member functions and variables need to be specified.\n","isDeprecated":false,"isReadOnly":false}],"objectTypes":[],"clients":[],"listeners":[],"functions":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"actual","description":"Actual value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"expected","description":"Expected value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"Assertion Failed!\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"msg","description":"Assertion error message\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"assertEquals","description":"Asserts whether the given values are equal. If it is not, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n@test:Config {}\n function testAssertIntEquals() {\n     int answer \u003d intAdd(5, 3);\n     test:assertEquals(answer, 8, msg \u003d \"IntAdd function failed\");\n }\n function intAdd(int a, int b) returns (int) {\n     return (a + b);\n }\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"actual","description":"Actual value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"expected","description":"Expected value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"Assertion Failed!\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"msg","description":"Assertion error message\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"assertExactEquals","description":"Asserts whether the given values are exactly equal. If it is not, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n class Person {\n     public string name \u003d \"\";\n     public int age \u003d 0;\n     public Person? parent \u003d ();\n     private string email \u003d \"default@abc.com\";\n     string address \u003d \"No 20, Palm grove\";\n }\n @test:Config {}\n function testAssertExactEqualsObject() {\n     Person p1 \u003d new;\n     Person p2 \u003d p1;\n     test:assertExactEquals(p1, p2, msg \u003d \"Objects are not exactly equal\");\n }\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"\"Test Failed!\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"msg","description":"Assertion error message\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"assertFail","description":"Assert failure is triggered based on your discretion. AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function foo() {\n     error? e \u003d trap bar(); // Expecting `bar()` to panic\n     if (e is error) {\n         test:assertEquals(e.message().toString(), \"Invalid Operation\", msg \u003d \"Invalid error reason\");\n     } else {\n         test:assertFail(msg \u003d \"Expected an error\");\n     }\n }\n function bar() {\n     panic error(\"Invalid Operation\");\n }\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"condition","description":"Boolean condition to evaluate\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"Assertion Failed!\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"msg","description":"Assertion error message\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"assertFalse","description":"Asserts whether the given condition is false. If it is not, a AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertFalse() {\n     boolean value \u003d false;\n     test:assertFalse(value, msg \u003d \"AssertFalse failed\");\n }\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"actual","description":"Actual value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"expected","description":"Expected value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"Assertion Failed!\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"msg","description":"Assertion error message\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"assertNotEquals","description":"Asserts whether the given values are not equal. If it is equal, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertIntEquals() {\n     int answer \u003d intAdd(5, 3);\n     test:assertNotEquals(answer, 8, msg \u003d \"Matches\");\n }\n function intAdd(int a, int b) returns (int) {\n     return (a + b);\n }\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"actual","description":"Actual value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"any","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"expected","description":"Expected value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"Assertion Failed!\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"msg","description":"Assertion error message\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"assertNotExactEquals","description":"Asserts whether the given values are not exactly equal. If it is equal, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\nclass Person {\n     public string name \u003d \"\";\n     public int age \u003d 0;\n     public Person? parent \u003d ();\n     private string email \u003d \"default@abc.com\";\n     string address \u003d \"No 20, Palm grove\";\n }\n @test:Config {}\n function testAssertNotExactEqualsObject() {\n     Person p1 \u003d new;\n     Person p2 \u003d new ();\n     test:assertNotExactEquals(p1, p2, msg \u003d \"Objects are exactly equal\");\n }\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"condition","description":"Boolean condition to evaluate\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"Assertion Failed!\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"msg","description":"Assertion error message\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"name":"assertTrue","description":"Asserts whether the given condition is true. If it is not, a AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertTrue() {\n     boolean value \u003d false;\n     test:assertTrue(value, msg \u003d \"AssertTrue failed\");\n }\n```\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"errorMessage","description":"Custom message for the Ballerina error\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"category","description":"Error category\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"An AssertError with custom message and category\n","isDeprecated":false,"isReadOnly":false}],"name":"createBallerinaError","description":"Creates an `AssertError` with the custom message and category.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":true,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"name":"object{}","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0}},"name":"T","description":"Type of object to create the mock\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"object { }","type":{"name":"object{} ","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"mockObject","description":"Mock object to replace the original (optional)\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"name":"T","category":"reference","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Created mock object or throw an error if validation failed\n","isDeprecated":false,"isReadOnly":false}],"name":"mock","description":"Creates a mock object of provided type description.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"object {} ","category":"other","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"mockObject","description":"Created default mock object\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MockObject","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Prepared object that allows a member function/field to register stubs\n","isDeprecated":false,"isReadOnly":false}],"name":"prepare","description":"Prepares a provided default mock object for stubbing.\n\n","isDeprecated":false,"isReadOnly":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MockFunction","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"mockFunction","description":"Function name to allow stubbing\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"FunctionStub","category":"classes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Object that allows stubbing calls to provided function\n","isDeprecated":false,"isReadOnly":false}],"name":"when","description":"Objects and functions related to function mocking\nAllows a function to stub.\n\n","isDeprecated":false,"isReadOnly":false}],"constants":[{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"value":"\"__ANY__\"","name":"ANY","description":"Represents the placeholder to be given for object or record type arguments.\n","isDeprecated":false,"isReadOnly":false},{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"value":"\"FunctionCallError\"","name":"FUNCTION_CALL_ERROR","description":"Represents the reason for function mocking related errors.\n","isDeprecated":false,"isReadOnly":false},{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"value":"\"FunctionNotFoundError\"","name":"FUNCTION_NOT_FOUND_ERROR","description":"Represents the reason for the non-existing member function related errors.\n","isDeprecated":false,"isReadOnly":false},{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"value":"\"FunctionSignatureMismatchError\"","name":"FUNCTION_SIGNATURE_MISMATCH_ERROR","description":"Represents the reason for the function signature related errors.\n","isDeprecated":false,"isReadOnly":false},{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"value":"\"InvalidMemberFieldError\"","name":"INVALID_MEMBER_FIELD_ERROR","description":"Represents the reason for the object member field related errors.\n","isDeprecated":false,"isReadOnly":false},{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"value":"\"InvalidObjectError\"","name":"INVALID_OBJECT_ERROR","description":"Represents the reason for the mock object related errors.\n","isDeprecated":false,"isReadOnly":false}],"annotations":[{"attachmentPoints":"function","name":"AfterEach","description":"Identifies afterTest function.\n","isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"AfterGroupsConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"function","name":"AfterGroups","description":"Identifies afterGroup function.\n","isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"AfterSuiteConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"function","name":"AfterSuite","description":"Identifies afterSuite function.\n","isDeprecated":false,"isReadOnly":false},{"attachmentPoints":"function","name":"BeforeEach","description":"Identifies beforeTest function.\n","isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"BeforeGroupsConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"function","name":"BeforeGroups","description":"Identifies beforeGroup function.\n","isDeprecated":false,"isReadOnly":false},{"attachmentPoints":"function","name":"BeforeSuite","description":"Identifies beforeSuite function.\n","isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"TestConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"function","name":"Config","description":"","isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"MockConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"source var, function","name":"Mock","description":"Identifies the MockFunction object\n","isDeprecated":false,"isReadOnly":false}],"errors":[{"detailType":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"InvalidObjectError","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"FunctionNotFoundError","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"FunctionSignatureMismatchError","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"InvalidMemberFieldError","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"test","version":"0.0.0","name":"FunctionCallError","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"isDistinct":false,"name":"Error","description":"Represents mocking related errors.\n","isDeprecated":false,"isReadOnly":false},{"isDistinct":true,"name":"FunctionCallError","description":"","isDeprecated":false,"isReadOnly":false},{"isDistinct":true,"name":"FunctionNotFoundError","description":"","isDeprecated":false,"isReadOnly":false},{"isDistinct":true,"name":"FunctionSignatureMismatchError","description":"","isDeprecated":false,"isReadOnly":false},{"isDistinct":true,"name":"InvalidMemberFieldError","description":"","isDeprecated":false,"isReadOnly":false},{"isDistinct":true,"name":"InvalidObjectError","description":"","isDeprecated":false,"isReadOnly":false}],"types":[],"enums":[],"variables":[],"id":"test","summary":"This module facilitates writing tests for Ballerina code in a simple manner. It provides a number of capabilities such as configuring the setup and cleanup steps at different levels, ordering and grouping of tests, providing value-sets to tests, and independence from external functions and endpoints via mocking capabilities.\n","description":"## Module Overview\n\nThis module facilitates writing tests for Ballerina code in a simple manner. It provides a number of capabilities such as configuring the setup and cleanup steps at different levels, ordering and grouping of tests, providing value-sets to tests, and independence from external functions and endpoints via mocking capabilities.\n\n## Annotations\nA Ballerina testsuite can be implemented using a set of annotations. The available annotations enable executing instructions before and after the testsuite or a single test, organize a set of tests into a group, define data-driven tests, specify an order of execution, disable tests and mocking.\n\n### Test Config \n\nThe following example shows a simple testsuite.\n```ballerina\nimport ballerina/test;\n\n// Test function\n@test:Config {}\nfunction testFunction() {\n    test:assertTrue(true, msg \u003d \"Failed!\");\n}\n```\n\nThe `before` and `after` attributes can be used to set the execution order by specifying the functions to run before and/or after the test.\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\nfunction beforeFunc() {\n    io:println(\"I\u0027m the before function!\");\n}\n\n@test:Config {\n    before: beforeFunc,\n    after: afterFunc\n}\nfunction testFunction() {\n    io:println(\"I\u0027m in test function!\");\n    test:assertTrue(true, msg \u003d \"Failed!\");\n}\n\nfunction afterFunc() {\n    io:println(\"I\u0027m the after function!\");\n}\n```\n\nThe `dependsOn` attribute can also be used to set the test execution order by specifying the list of functions that the test function depends on.\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n@test:Config { \n    dependsOn: [testFunction2] }\nfunction testFunction1() {\n    io:println(\"I\u0027m in test function 1!\");\n    test:assertTrue(true, msg \u003d \"Failed!\");\n}\n\n@test:Config {}\nfunction testFunction2() {\n    io:println(\"I\u0027m in test function 2!\");\n    test:assertTrue(true, msg \u003d \"Failed!\");\n}\n```\n\nThe `dataProvider` attribute can be used to assign a function to act as a data provider for a test.\nThe data provider can return data as a map of tuples or as an array of arrays. If there is an issue\n while generating the data set, it can return an error which will be handled by the test framework.\n\n```ballerina\nfunction mapDataProviderTest(int value1, int value2, string fruit) returns error? {\n    test:assertEquals(value1, value2, msg \u003d \"The provided values are not equal\");\n    test:assertEquals(fruit.length(), 6);\n}\n\n// The data provider function, which returns a  data set as a map of tuples.\nfunction mapDataProvider() returns map\u003c[int, int, string]\u003e|error {\n    map\u003c[int, int, string]\u003e dataSet \u003d {\n        \"banana\": [10, 10, \"banana\"],\n        \"cherry\": [5, 5, \"cherry\"]\n    };\n    return dataSet;\n}\n```\n\n### Before and After Suite\n\nThe `BeforeSuite` annotation is used to execute a particular function before the test suite is executed. This can be used to setup the prerequisites before executing the test suite. \n\n```ballerina\n@test:BeforeSuite\nfunction beforeSuit() {\n    // initialize or execute pre-requisites\n}\n\n```\n\nThe `AfterSuite` annotation is used to execute a particular function after the test suite is executed. This is used to tear-down the prerequisites or execute post actions after executing the test suite.\n\n```ballerina\n@test:AfterSuite\nfunction afterSuit() {\n    // tear-down\n}\n\n```\n\n### Before and After Groups\n\nThe `BeforeGroups` and annotation can be used to execute the function before the first test function belonging the specified groups.\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n@test:BeforeGroups { value:[\"g1\"] }\nfunction beforeGroupsFunc() {\n    io:println(\"I\u0027m the before groups function!\");\n}\n\n@test:Config { groups: [\"g1\"]}\nfunction testFunction1() {\n    io:println(\"I\u0027m in test function 1!\");\n    test:assertTrue(true, msg \u003d \"Failed!\");\n}\n```\n\nThe `AfterGroups` and annotation can be used to execute the function after the last test function belonging the specified groups.\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n@test:AfterGroups { value:[\"g1\"] }\nfunction afterGroupsFunc() {\n    io:println(\"I\u0027m the after groups function!\");\n}\n\n@test:Config { groups: [\"g1\"]}\nfunction testFunction1() {\n    io:println(\"I\u0027m in test function 1!\");\n    test:assertTrue(true, msg \u003d \"Failed!\");\n}\n```\n\n\n## Assertions\nThis module provides a number of assertions in order to verify the expected behaviour of a piece of code. These assertions can be used to decide if the test is passing or failing based on the condition.\n\nFollowing sample shows how to use assertions in Testerina.\n```ballerina\nimport ballerina/test;\n\nclass Person {\n     public string name \u003d \"\";\n     public int age \u003d 0;\n     public Person? parent \u003d ();\n     private string email \u003d \"default@abc.com\";\n     string address \u003d \"No 20, Palm grove\";\n}\n\n@test:Config{}\nfunction testAssertIntEquals() {\n    int answer \u003d 0;\n    int a \u003d 5;\n    int b \u003d 3;\n    answer \u003d intAdd(a, b);\n    test:assertEquals(answer, 8, msg \u003d \"int values not equal\");\n}\n\n@test:Config {}\nfunction testAssertNotEqualsString() {\n    string s1 \u003d \"abc\";\n    string s2 \u003d \"def\";\n    test:assertNotEquals(s1, s2, msg \u003d \"string values are equal\");\n}\n\n@test:Config {}\nfunction testAssertExactEqualsObject() {\n    Person p1 \u003d new;\n    Person p2 \u003d p1;\n    test:assertExactEquals(p1, p2, msg \u003d \"Objects are not exactly equal\");\n}\n\n@test:Config {}\nfunction testAssertNotExactEqualsObject() {\n    Person p1 \u003d new;\n    Person p2 \u003d new ();\n    test:assertNotExactEquals(p1, p2, msg \u003d \"Objects are exactly equal\");\n}\n\n@test:Config {}\nfunction testAssertTrue() {\n    boolean value \u003d true;\n    test:assertTrue(value, msg \u003d \"AssertTrue failed\");\n}\n\n@test:Config {}\nfunction testAssertFalse() {\n    boolean value \u003d false;\n    test:assertFalse(value, msg \u003d \"AssertFalse failed\");\n}\n\n@test:Config {}\nfunction testAssertFail() {\n    if (true) {\n        return;\n    }\n    test:assertFail(msg \u003d \"AssertFailed\");\n}\n\nfunction intAdd(int a, int b) returns (int) {\n    return (a + b);\n}\n```\n\n## Mocking\n\nThe test module provides capabilities to mock a function or an object for unit testing. The mocking features can be used to control the behavior of functions and objects by defining return values or replacing the entire object or function with a user-defined equivalent. This feature will help you to test the Ballerina code independently from other modules and external endpoints.\n\n### Function Mocking\nFunction mocking allows to control the behavior of a function in the module being tested or a function of an imported module.\n\nThe annotation `@test:Mock {}` is used to declare a `MockFunction` object, with details of the name of the function to be mocked, as well as the module name if an import function is being mocked. The module name value of the annotation is optional if the function being mocked is not an import function.\n\n```ballerina\nimport ballerina/io;\nimport ballerina/test;\n\n@test:Mock {\n    moduleName: \"ballerina/io\",\n    functionName: \"println\"\n}\ntest:MockFunction printlnMockFn \u003d new();\n\nint tally \u003d 0;\npublic function mockPrint(any|error... val) {\n    tally \u003d tally + 1;\n}\n\n@test:Config {}\nfunction testCall() {\n    test:when(printlnMockFn).call(\"mockPrint\");\n\n    io:println(\"Testing 1\");\n    io:println(\"Testing 2\");\n    io:println(\"Testing 3\");\n    test:assertEquals(tally, 3);\n}\n```\n\nDeclaring the annotation with this object will create a default mock object in place of the original function. Subsequent to the declaration, the function call should be stubbed using the available mocking features. Different behaviors can be defined for different test cases if required.\n\n##### Samples\n\n_main.bal_\n```ballerina\npublic function intAdd(int a, int b) returns (int) {\n    return a + b;\n}\n```\n\n_test.bal_\n\nThe following example shows different ways of stubbing a function call.\n\n```ballerina\nimport ballerina/test;\n\n@test:Mock { \n    functionName: \"intAdd\"\n}\ntest:MockFunction intAddMockFn \u003d new();\n\npublic function mockIntAdd(int x, int y) returns int {\n    return x - y;\n}\n\n@test:Config {}\npublic function testMockCall() {\n    // stubbing to invoke the created mock function\n    test:when(intAddMockFn).call(\"mockIntAdd\");\n    test:assertEquals(intAdd(10, 6), 4);\n    \n    // stubbing to return the specified value\n    test:when(intAddMockFn).thenReturn(5);\n    test:assertEquals(intAdd(10, 4), 5);\n    \n    // stubbing to return a value based on input\n    test:when(intAddMockFn).withArguments(20, 14).thenReturn(100);\n    test:assertEquals(intAdd(20, 14), 100);\n}\n```\n\n### Object Mocking\n\nObject mocking enables controlling the values of member variables and the behavior of the member functions of an object. This is vital when working with client objects as the remote functions can be stubbed to return a mock value without having to actually make calls to the remote endpoint.\n\nMocking of objects can be done in two ways.The available features provide the functionality to substitute the real object with a user-defined mock object or to stub the behavior of required functions.\n\n1. Creating a test double (providing an equivalent object in place of the real)\n2. Stubbing the member function or member variable (specifying the behavior of functions and values of variables)\n\nCreating a test double is suitable when a single mock function/object can be used throughout all tests whereas stubbing is ideal when defining different behaviors for different test cases is required.\n\n#### Creating a test double\n\nA custom mock object can be defined in place of the real object which should contain the member variables and functions that need to be replaced. The custom object should be made structurally equivalent to the real object via the mocking features in the test module. A runtime exception will be thrown if any of the defined functions or variables is not equivalent to the counterpart of the original object.\n\n_main.bal_\n```ballerina\nimport ballerina/http;\n\nhttp:Client clientEndpoint \u003d check new (\"http://petstore.com\");\n\nfunction getPet(string petId) returns http:Response | error {\n  http:Response result \u003d check clientEndpoint-\u003eget(\"/pets?id\u003d\"+petId);\n  return result;\n}\n\nfunction deletePet(string petId) returns error? {\n    http:Response res \u003d check clientEndpoint-\u003edelete(\"/pets/delete?id\u003d\"+petId);\n}\n```\n\n_test.bal_\n```ballerina\nimport ballerina/test;\nimport ballerina/http;\n\n// Mock object definition for http:Client object\npublic client class MockHttpClient {\n    remote isolated function get(@untainted string path, map\u003cstring|string[]\u003e? headers \u003d (),\n    http:TargetType targetType \u003d http:Response) returns http:Response | http:PayloadType | http:ClientError {\n        http:Response response \u003d new;\n        response.statusCode \u003d 500;\n        return response;\n    }\n}\n\n@test:Config {}\nfunction testTestDouble() returns error? {\n    //mock object that would act as the test double to the clientEndpoint\n    clientEndpoint \u003d test:mock(http:Client, new MockHttpClient());\n    http:Response res \u003d check getPet(\"D123\");\n    test:assertEquals(res.statusCode, 500);\n}\n```\n\n#### Stubbing member functions and variables of an object\n\nThe member functions and variables are stubbed to return a specific value or to do nothing when invoked. Using the test module, a default mock object of the specified type. The default action of any member function/variable is to panic upon invocation/retrieval.  After mock object creation, the required functions and variables of the default mock object should be stubbed to return a value or to do nothing when called.\n\n##### Samples\n\nThe following example demonstrates how to stub a member function to return a specific value.\n```ballerina\n\n@test:Config {}\nfunction testThenReturn() returns error? {\n   clientEndpoint \u003d test:mock(http:Client);\n\n    http:Response mockResponse \u003d new;\n    mockResponse.statusCode \u003d 300;\n\n    // stubbing to return the specified value \n    test:prepare(clientEndpoint).when(\"get\").thenReturn(mockResponse);\n\n    http:Response res \u003d check getPet(\"D123\");\n    test:assertEquals(res.statusCode, 300);\n}\n```\n\nThe following example demonstrates how to stub a member function to return different values on subsequent calls.\n\n```ballerina\n@test:Config {}\nfunction testThenReturnSequence() returns error? {\n     clientEndpoint \u003d test:mock(http:Client);\n\n    http:Response mockResponse1 \u003d new;\n    mockResponse1.statusCode \u003d 400;\n\n    http:Response mockResponse2 \u003d new;\n    mockResponse2.statusCode \u003d 401;\n    \n    // Stubbing to return different values for each function call.\n    test:prepare(clientEndpoint).when(\"get\").thenReturnSequence(mockResponse1, mockResponse2);\n\n    http:Response res \u003d check getPet(\"D123\");\n    test:assertEquals(res.statusCode, 400);\n    res \u003d check getPet(\"D123\");\n    test:assertEquals(res.statusCode, 401);\n}\n```\n\nThe following example demonstrates how to stub a member function to do nothing when called.\n\n```ballerina\n@test:Config {}\nfunction testDoNothing() returns error? {\n    clientEndpoint \u003d test:mock(http:Client);\n    \n    // Stubbing to return different values for each function call.\n    test:prepare(clientEndpoint).when(\"delete\").doNothing();\n\n    error? err \u003d deletePet(\"D123\");\n    test:assertEquals(err, ());\n}\n```\n\nThe following example shows how to return a value when a member variable is accessed.\n```ballerina\n@test:Config {}\nfunction testMemberVariable() {\n  clientEndpoint \u003d test:mock(http:Client);\n  test:prepare(clientEndpoint).getMember(\"url\").thenReturn(\"https://foo.com/\");\n  test:assertEquals(clientEndpoint.url, \"https://foo.com/\");\n}\n```\n","orgName":"ballerina","version":"0.0.0"}]},"searchData":{"modules":[{"id":"test","description":"This module facilitates writing tests for Ballerina code in a simple manner. It provides a number of capabilities such as configuring the setup and cleanup steps at different levels, ordering and grouping of tests, providing value-sets to tests, and independence from external functions and endpoints via mocking capabilities.\n","orgName":"ballerina","version":"0.0.0"}],"classes":[{"id":"FunctionStub","description":"Represents an object that allows stubbing function invocations.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MemberFunctionStub","description":"Represents an object that allows stubbing member function invocations.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MemberVariableStub","description":"Represents an object that allows stubbing member variables retrieved.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MockFunction","description":"Represents a MockFunction object.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MockObject","description":"Represents a Mock object in which stubs for member functions and variables need to be specified.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"functions":[{"id":"assertEquals","description":"Asserts whether the given values are equal. If it is not, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n@test:Config {}\n function testAssertIntEquals() {\n     int answer \u003d intAdd(5, 3);\n     test:assertEquals(answer, 8, msg \u003d \"IntAdd function failed\");\n }\n function intAdd(int a, int b) returns (int) {\n     return (a + b);\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertExactEquals","description":"Asserts whether the given values are exactly equal. If it is not, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n class Person {\n     public string name \u003d \"\";\n     public int age \u003d 0;\n     public Person? parent \u003d ();\n     private string email \u003d \"default@abc.com\";\n     string address \u003d \"No 20, Palm grove\";\n }\n @test:Config {}\n function testAssertExactEqualsObject() {\n     Person p1 \u003d new;\n     Person p2 \u003d p1;\n     test:assertExactEquals(p1, p2, msg \u003d \"Objects are not exactly equal\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertFail","description":"Assert failure is triggered based on your discretion. AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function foo() {\n     error? e \u003d trap bar(); // Expecting `bar()` to panic\n     if (e is error) {\n         test:assertEquals(e.message().toString(), \"Invalid Operation\", msg \u003d \"Invalid error reason\");\n     } else {\n         test:assertFail(msg \u003d \"Expected an error\");\n     }\n }\n function bar() {\n     panic error(\"Invalid Operation\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertFalse","description":"Asserts whether the given condition is false. If it is not, a AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertFalse() {\n     boolean value \u003d false;\n     test:assertFalse(value, msg \u003d \"AssertFalse failed\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertNotEquals","description":"Asserts whether the given values are not equal. If it is equal, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertIntEquals() {\n     int answer \u003d intAdd(5, 3);\n     test:assertNotEquals(answer, 8, msg \u003d \"Matches\");\n }\n function intAdd(int a, int b) returns (int) {\n     return (a + b);\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertNotExactEquals","description":"Asserts whether the given values are not exactly equal. If it is equal, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\nclass Person {\n     public string name \u003d \"\";\n     public int age \u003d 0;\n     public Person? parent \u003d ();\n     private string email \u003d \"default@abc.com\";\n     string address \u003d \"No 20, Palm grove\";\n }\n @test:Config {}\n function testAssertNotExactEqualsObject() {\n     Person p1 \u003d new;\n     Person p2 \u003d new ();\n     test:assertNotExactEquals(p1, p2, msg \u003d \"Objects are exactly equal\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertTrue","description":"Asserts whether the given condition is true. If it is not, a AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertTrue() {\n     boolean value \u003d false;\n     test:assertTrue(value, msg \u003d \"AssertTrue failed\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createBallerinaError","description":"Creates an `AssertError` with the custom message and category.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"mock","description":"Creates a mock object of provided type description.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"prepare","description":"Prepares a provided default mock object for stubbing.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"when","description":"Objects and functions related to function mocking\nAllows a function to stub.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"records":[{"id":"AfterGroupsConfig","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AfterSuiteConfig","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"BeforeGroupsConfig","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MockConfig","description":"Configuration of the function to be mocked.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"TestConfig","description":"Configuration set for test functions.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"constants":[{"id":"ANY","description":"Represents the placeholder to be given for object or record type arguments.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FUNCTION_CALL_ERROR","description":"Represents the reason for function mocking related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FUNCTION_NOT_FOUND_ERROR","description":"Represents the reason for the non-existing member function related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FUNCTION_SIGNATURE_MISMATCH_ERROR","description":"Represents the reason for the function signature related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"INVALID_MEMBER_FIELD_ERROR","description":"Represents the reason for the object member field related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"INVALID_OBJECT_ERROR","description":"Represents the reason for the mock object related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"errors":[{"id":"Error","description":"Represents mocking related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FunctionCallError","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FunctionNotFoundError","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FunctionSignatureMismatchError","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"InvalidMemberFieldError","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"InvalidObjectError","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"types":[],"clients":[],"listeners":[],"annotations":[{"id":"AfterEach","description":"Identifies afterTest function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AfterGroups","description":"Identifies afterGroup function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AfterSuite","description":"Identifies afterSuite function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"BeforeEach","description":"Identifies beforeTest function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"BeforeGroups","description":"Identifies beforeGroup function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"BeforeSuite","description":"Identifies beforeSuite function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Config","description":"","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Mock","description":"Identifies the MockFunction object\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"objectTypes":[],"enums":[]}}