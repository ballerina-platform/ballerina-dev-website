var docData = {"packages":[{"isSingleFile":false,"name":"rabbitmq","orgName":"ballerinax","version":"1.0.7","description":"## Module Overview\n\nThis module contains the functionality to support messaging with the RabbitMQ broker (AMQP 0-9-1). It assumes that the most recent version of Ballerina is used and is built on top of the basics.\n\n[RabbitMQ](https://www.rabbitmq.com/) is one of the most popular open-source enterprise messaging systems modelled on the Advanced Message Queuing Protocol (AMQP) standard. This guide covers the Ballerina RabbitMQ module and its public API. \n \nKey sections include: \n- Connecting to RabbitMQ\n- Using Exchanges and Queues\n- Publishing Messages\n- Consuming Messages Using Consumer Services\n- Client Acknowledgements \n\n### Connecting to RabbitMQ\n\nThe following code connects to a RabbitMQ node with default host and port: \n\n```ballerina\n   rabbitmq:Client newClient \u003d new;\n```\n\nThe `rabbitmq:Client` can now be used to send and receive messages as described in the subsequent sections. \n\n#### Disconnecting from RabbitMQ\n\nTo disconnect, simply close the open channels and the connections: \n\n```ballerina\n   rabbitmq:Error? closeResult \u003d newClient.close();\n```\n\n### Using exchanges and queues\n\nClient applications work with exchanges and queues, which are the high-level building blocks of the AMQP protocol. These must be declared before they can be used. The following code declares an exchange and a server-named queue and then binds them together. \n\n```ballerina\n   rabbitmq:Error? exchangeResult \u003d newClient-\u003eexchangeDeclare(\"MyExchange\", \n                                                                rabbitmq:DIRECT_EXCHANGE);\n   \n   string|rabbitmq:Error? queueResult \u003d newClient-\u003equeueDeclare(\"MyQueue\");\n   if (queueResult is string) {\n        rabbitmq:Error? bindResult \u003d newClient-\u003equeueBind(\"MyQueue\", \"MyExchange\", \"routing-key\");\n   }\n```\n\nThis sample code will declare,\n- a durable auto-delete exchange of the type `rabbitmq:DIRECT_EXCHANGE`\n- a non-durable, exclusive auto-delete queue with an auto-generated name\n\nNext, the above function is called to bind the queue to the exchange with the given routing key. \n\n```ballerina\n   rabbitmq:Error? exchangeResult \u003d newClient-\u003eexchangeDeclare(\"MyExchange\",\n                                                        rabbitmq:DIRECT_EXCHANGE);\n   \n   string|rabbitmq:Error? queueResult \u003d newClient-\u003equeueDeclare(\"MyQueue\", \n                                                { durable: true,\n                                                  exclusive: false,\n                                                  autoDelete: false });\n\n   rabbitmq:Error? bindResult \u003d newClient-\u003equeueBind(\"MyQueue\", \"MyExchange\", \"routing-key\");\n```\n\nThis sample code will declare,\n - a durable auto-delete exchange of the type `rabbitmq:DIRECT_EXCHANGE`\n - a durable, non-exclusive non-auto-delete queue with a well-known name\n\n#### Deleting entities and purging queues\n\n- Delete a queue:\n```ballerina\n   rabbitmq:Error? deleteResult \u003d newClient-\u003equeueDelete(\"MyQueue\");\n```\n- Delete a queue only if it is empty:\n```ballerina\n   rabbitmq:Error? deleteResult \u003d newClient-\u003equeueDelete(\"MyQueue\", false, true);\n```\n- Delete a queue only if it is unused (does not have any consumers):\n```ballerina\n   rabbitmq:Error? deleteResult \u003d newClient-\u003equeueDelete(\"MyQueue\", true, false);\n```\n- Delete an exchange:\n```ballerina\n   rabbitmq:Error? deleteResult \u003d newClient-\u003eexchangeDelete(\"MyExchange\");\n```\n- Purge a queue (delete all of its messages):\n```ballerina\n   rabbitmq:Error? purgeResult \u003d newClient-\u003equeuePurge(\"MyQueue\");\n```\n\n### Publishing messages\n\nTo publish a message to an exchange, use the `publishMessage()` function as follows:\n\n```ballerina\n    string message \u003d \"Hello from Ballerina\";\n   rabbitmq:Error? sendResult \u003d newClient-\u003epublishMessage({ content: message.toBytes(), routingKey: queueName });\n``` \nSetting other properties of the message such as routing headers can be done by using the `BasicProperties` record with the appropriate values. \n\n### Consuming messages using consumer services\n\nThe most efficient way to receive messages is to set up a subscription using a Ballerina RabbitMQ `rabbitmq:Listener` and any number of consumer services. The messages will then be delivered automatically as they arrive rather than having to be explicitly requested. \n\nMultiple consumer services can be bound to one Ballerina RabbitMQ `rabbitmq:Listener`. The queue to which the service is listening is configured in the `rabbitmq:ServiceConfig` annotation of the service. \n\n```ballerina\nlistener rabbitmq:Listener channelListener\u003d new;\n\n@rabbitmq:ServiceConfig {\n    queueName: \"MyQueue\"\n}\nservice rabbitmqConsumer on channelListener {\n    remote function onMessage(rabbitmq:Message message) {\n        // Do something with the message here \n    }\n}\n```\nThe `rabbitmq:Message` record received can be used to retrieve its contents. \n\n### Client acknowledgements\n\nThe message consuming is supported by mainly two types of acknowledgement modes, which are auto acknowledgements and client acknowledgements. \nClient acknowledgements can further be divided into to two different types as positive and negative acknowledgements. \nThe default acknowledgement mode is auto-ack (messages are acknowledged immediately after consuming).\n\u003e WARNING: To ensure the reliability of receiving messages, use the client-ack mode. \n\nThe negatively-acknowledged (rejected) messages can be re-queued. \n\n\n\u003e**Note:** The default thread pool size used in Ballerina is the number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n\nFor information on the operations, which you can perform with this module, see the below **Functions**. \n\nFor examples on the usage of the connector, see the following.\n* [Producer Example](https://ballerina.io/learn/by-example/rabbitmq-producer.html).\n* [Consumer Example](https://ballerina.io/learn/by-example/rabbitmq-consumer.html)\n* [Client Acknowledgements Example](https://ballerina.io/learn/by-example/rabbitmq-consumer-with-client-acknowledgement.html)\n* [QoS Settings Example](https://ballerina.io/learn/by-example/rabbitmq-consumer-with-qos-settings.html)\n","summary":"This module contains the functionality to support messaging with the RabbitMQ broker (AMQP 0-9-1). It assumes that the most recent version of Ballerina is used and is built on top of the basics.\n","modules":[{"id":"rabbitmq","orgName":"ballerinax","version":"1.0.7","records":[{"fields":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"replyTo","description":"The queue name to which the other apps should send the response\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"contentType","description":"Content type of the message\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"contentEncoding","description":"Content encoding of the message\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"correlationId","description":"Client-specific ID that can be used to mark or identify messages between clients\n","isDeprecated":false}],"isClosed":true,"name":"BasicProperties","description":"Basic properties of the message - routing headers etc.\n\n","isDeprecated":false},{"fields":[{"defaultValue":"\"localhost\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"host","description":"The host used for establishing the connection\n","isDeprecated":false},{"defaultValue":"5672","type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"port","description":"The port used for establishing the connection\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"username","description":"The username used for establishing the connection\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"password","description":"The password used for establishing the connection\n","isDeprecated":false},{"defaultValue":"","type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"connectionTimeoutInMillis","description":"Connection TCP establishment timeout in milliseconds and zero for infinite\n","isDeprecated":false},{"defaultValue":"","type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"handshakeTimeoutMillis","description":" The AMQP 0-9-1 protocol handshake timeout in milliseconds\n","isDeprecated":false},{"defaultValue":"","type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"shutdownTimeoutInMillis","description":"Shutdown timeout in milliseconds, zero for infinite, and the default value is 10000. If the consumers exceed\n                    this timeout, then any remaining queued deliveries (and other Consumer callbacks) will be lost\n","isDeprecated":false},{"defaultValue":"","type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"heartbeatInSeconds","description":"The initially-requested heartbeat timeout in seconds and zero for none\n","isDeprecated":false},{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"SecureSocket","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"secureSocket","description":"Configurations for facilitating secure connections\n","isDeprecated":false},{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Credentials","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"auth","description":"Configurations releated to authentication\n","isDeprecated":false}],"isClosed":true,"name":"ConnectionConfig","description":"Configurations used to create a `rabbitmq:Connection`.\n\n","isDeprecated":false},{"fields":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"username","description":"Username to use for authentication\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"password","description":"Password/secret/token to use for authentication\n","isDeprecated":false}],"isClosed":true,"name":"Credentials","description":"Configurations related to authentication.\n\n","isDeprecated":false},{"fields":[{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"durable","description":"True if declaring a durable exchange (the exchange will survive in a server restart)\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"autoDelete","description":"True if an autodelete exchange is declared (the server will delete it when it is no longer in use)\n","isDeprecated":false},{"defaultValue":"","type":{"name":"map","category":"map","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"arguments","description":"Other properties (construction arguments) for the queue\n","isDeprecated":false}],"isClosed":true,"name":"ExchangeConfig","description":"Additional configurations used to declare an exchange.\n\n","isDeprecated":false},{"fields":[{"defaultValue":"","type":{"isAnonymousUnionType":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"name":"byte","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"content","description":"Content of the message\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"routingKey","description":"The routing key to which the message is sent to\n","isDeprecated":false},{"defaultValue":"\"\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"exchange","description":"The exchange to which the message is sent to\n","isDeprecated":false},{"defaultValue":"","type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"deliveryTag","description":"The delivery tag of the message\n","isDeprecated":false},{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"BasicProperties","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"properties","description":"Basic properties of the message - routing headers etc.\n","isDeprecated":false}],"isClosed":true,"name":"Message","description":"Represents the message, which a RabbitMQ server sends to its subscribed services.\n\n","isDeprecated":false},{"fields":[{"defaultValue":"","type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"prefetchCount","description":"Maximum number of messages that the server will deliver.\n                  Give the value as 0 if unlimited\n","isDeprecated":false},{"defaultValue":"","type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"prefetchSize","description":"Maximum amount of content (measured in octets)\n                  that the server will deliver and 0 if unlimited\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"global","description":"True if the settings should be shared among all consumers\n","isDeprecated":false}],"isClosed":true,"name":"QosSettings","description":"QoS settings to limit the number of unacknowledged\nmessages on a channel.\n\n","isDeprecated":false},{"fields":[{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"durable","description":"True if declaring a durable queue (the queue will survive in a server restart)\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"exclusive","description":"True if declaring an exclusive queue (restricted to this connection)\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"autoDelete","description":"True if declaring an auto-delete queue (the server will delete it when it is no longer in use)\n","isDeprecated":false},{"defaultValue":"","type":{"name":"map","category":"map","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0,"constraint":{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},"name":"arguments","description":"Other properties (construction arguments) for the queue\n","isDeprecated":false}],"isClosed":true,"name":"QueueConfig","description":"Additional configurations used to declare a queue.\n\n","isDeprecated":false},{"fields":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"Name of the queue to be subscribed\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"autoAck","description":"If false, should manually acknowledge\n","isDeprecated":false}],"isClosed":true,"name":"RabbitMQServiceConfig","description":"Configurations required to create a subscription.\n\n","isDeprecated":false},{"fields":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"crypto","version":"1.0.5","name":"TrustStore","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"trustStore","description":"Configurations associated with the TrustStore\n","isDeprecated":false},{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"crypto","version":"1.0.5","name":"KeyStore","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"keyStore","description":"Configurations associated with the KeyStore\n","isDeprecated":false},{"defaultValue":"\"TLS\"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"protocol","description":"TLS protocol\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"verifyHostname","description":"True if hostname verification should be enabled\n","isDeprecated":false}],"isClosed":true,"name":"SecureSocket","description":"Configurations for facilitating secure connections.\n\n","isDeprecated":false}],"classes":[],"abstractObjects":[{"fields":[],"methods":[],"name":"Service","description":"The RabbitMQ service type\n","isDeprecated":false}],"clients":[{"remoteMethods":[{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"multiple","description":"`true` to acknowledge all messages up to and including the called on message and\n             `false` to acknowledge just the called on message\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"basicAck","description":"Acknowledges one or several received messages.\n```ballerina\n    # rabbitmq:Error? ackResult \u003d caller-\u003ebasicAck(true);\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"multiple","description":"`true` to reject all messages up to and including the called on message and\n             `false` to reject just the called on message\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"requeue","description":"`true` if the rejected message(s) should be re-queued rather than discarded/dead-lettered\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"basicNack","description":"Rejects one or several received messages.\n```ballerina\n    # rabbitmq:Error? nackResult \u003d caller-\u003ebasicNack(true, requeue \u003d false);\n    # ```\n\n","isDeprecated":false}],"fields":[],"methods":[{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"multiple","description":"`true` to acknowledge all messages up to and including the called on message and\n             `false` to acknowledge just the called on message\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"basicAck","description":"Acknowledges one or several received messages.\n```ballerina\n    # rabbitmq:Error? ackResult \u003d caller-\u003ebasicAck(true);\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"multiple","description":"`true` to reject all messages up to and including the called on message and\n             `false` to reject just the called on message\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"requeue","description":"`true` if the rejected message(s) should be re-queued rather than discarded/dead-lettered\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"basicNack","description":"Rejects one or several received messages.\n```ballerina\n    # rabbitmq:Error? nackResult \u003d caller-\u003ebasicNack(true, requeue \u003d false);\n    # ```\n\n","isDeprecated":false}],"otherMethods":[],"isReadOnly":false,"isIsolated":false,"name":"Caller","description":"Provides the functionality to manipulate the messages received by the consumer services.\n","isDeprecated":false},{"remoteMethods":[{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the queue\n","isDeprecated":false},{"defaultValue":"()","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"QueueConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"config","description":"Configurations required to declare a queue\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` if the queue was successfully generated or else a `rabbitmq:Error`\n              if an I/O error is encountered\n","isDeprecated":false}],"name":"queueDeclare","description":"Declares a non-exclusive, auto-delete, or non-durable queue with the given configurations.\n```ballerina\n    # string|rabbitmq:Error? queueResult \u003d newClient-\u003equeueDeclare(\"MyQueue\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The name of the queue, or else a `rabbitmq:Error`\n            if an I/O error is encountered\n","isDeprecated":false}],"name":"queueAutoGenerate","description":"Declares a queue with a server generated name.\n```ballerina\n    # string|rabbitmq:Error? queueName \u003d newClient-\u003equeueAutoGenerate();\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"The name of the exchange\n","isDeprecated":false},{"defaultValue":"DIRECT_EXCHANGE","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"ExchangeType","category":"types","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"exchangeType","description":"The type of the exchange\n","isDeprecated":false},{"defaultValue":"()","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"ExchangeConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"config","description":"Configurations required to declare an exchange\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"exchangeDeclare","description":"Declares a non-auto-delete, non-durable exchange with no extra arguments.\nIf the arguments are specified, then the exchange is declared accordingly.\n```ballerina\n    # rabbitmq:Error? exchangeResult \u003d newClient-\u003eexchangeDeclare(\"MyExchange\",\n    #                                               rabbitmq:DIRECT_EXCHANGE);\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"Name of the queue\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"exchangeName","description":"Name of the exchange\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"bindingKey","description":"Binding key used to bind the queue to the exchange\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"queueBind","description":"Binds a queue to an exchange with the given binding key.\n```ballerina\n    # rabbitmq:Error? bindResult \u003d newClient-\u003equeueBind(\"MyQueue\", \"MyExchange\", \"routing-key\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Message","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"message","description":"Message to be published \n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"publishMessage","description":"Publishes a message. Publishing to a non-existent exchange will result in a channel-level\nprotocol error, which closes the channel.\n```ballerina\n    # rabbitmq:Error? sendResult \u003d newClient-\u003epublishMessage(messageInBytes, \"MyQueue\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"The name of the queue\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"autoAck","description":"If false, should manually acknowledge\n","isDeprecated":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Message","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Message` object containing the retrieved message data or else a`rabbitmq:Error` if an\n           I/O error is encountered\n","isDeprecated":false}],"name":"consumeMessage","description":"Retrieves a message synchronously from the given queue providing direct access to the messages in the queue.\n```ballerina\n    # rabbitmq:Message|rabbitmq:Error getResult \u003d newClient-\u003econsumeMessage(\"MyQueue\", rabbitmq:AUTO_ACK);\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Message","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"message","description":"Message to be acknowledged\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"multiple","description":"`true` to acknowledge all messages up to and including the called on message and\n             `false` to acknowledge just the called on message\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"basicAck","description":"Acknowledges one or several received messages.\n```ballerina\n    # rabbitmq:Error? ackResult \u003d newClient-\u003ebasicAck(\u003cmessage\u003e);\n    # ```\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Message","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"message","description":"Message to be rejected\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"multiple","description":"`true` to reject all messages up to and including the called on message and\n             `false` to reject just the called on message\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"requeue","description":"`true` if the rejected message(s) should be re-queued rather than discarded/dead-lettered\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"basicNack","description":"Rejects one or several received messages.\n```ballerina\n    # rabbitmq:Error? nackResult \u003d newClient-\u003ebasicNack(\u003cmessage\u003e);\n    # ```\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"Name of the queue to be deleted\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"ifUnused","description":"True if the queue should be deleted only if it\u0027s not in use\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"ifEmpty","description":"True if the queue should be deleted only if it\u0027s empty\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"queueDelete","description":"Deletes the queue with the given name although it is in use or has messages in it.\nIf the `ifUnused` or `ifEmpty` parameters are given, the queue is checked before deleting.\n```ballerina\n    # rabbitmq:Error? deleteResult \u003d newClient-\u003equeueDelete(\"MyQueue\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"exchangeName","description":"The name of the exchange\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"exchangeDelete","description":"Deletes the exchange with the given name.\n```ballerina\n    # rabbitmq:Error? deleteResult \u003d newClient-\u003eexchangeDelete(\"MyExchange\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"The name of the queue\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"queuePurge","description":"Purges the content of the given queue.\n```ballerina\n    # rabbitmq:Error? purgeResult \u003d newClient-\u003equeuePurge(\"MyQueue\");\n    # ```\n\n","isDeprecated":false}],"fields":[],"methods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"{}","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"ConnectionConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"connectionData","description":"A connection configuration\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false}],"name":"init","description":"Initializes a `rabbitmq:Client` object.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the queue\n","isDeprecated":false},{"defaultValue":"()","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"QueueConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"config","description":"Configurations required to declare a queue\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` if the queue was successfully generated or else a `rabbitmq:Error`\n              if an I/O error is encountered\n","isDeprecated":false}],"name":"queueDeclare","description":"Declares a non-exclusive, auto-delete, or non-durable queue with the given configurations.\n```ballerina\n    # string|rabbitmq:Error? queueResult \u003d newClient-\u003equeueDeclare(\"MyQueue\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"","description":"The name of the queue, or else a `rabbitmq:Error`\n            if an I/O error is encountered\n","isDeprecated":false}],"name":"queueAutoGenerate","description":"Declares a queue with a server generated name.\n```ballerina\n    # string|rabbitmq:Error? queueName \u003d newClient-\u003equeueAutoGenerate();\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"The name of the exchange\n","isDeprecated":false},{"defaultValue":"DIRECT_EXCHANGE","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"ExchangeType","category":"types","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"exchangeType","description":"The type of the exchange\n","isDeprecated":false},{"defaultValue":"()","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"ExchangeConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"config","description":"Configurations required to declare an exchange\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"exchangeDeclare","description":"Declares a non-auto-delete, non-durable exchange with no extra arguments.\nIf the arguments are specified, then the exchange is declared accordingly.\n```ballerina\n    # rabbitmq:Error? exchangeResult \u003d newClient-\u003eexchangeDeclare(\"MyExchange\",\n    #                                               rabbitmq:DIRECT_EXCHANGE);\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"Name of the queue\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"exchangeName","description":"Name of the exchange\n","isDeprecated":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"bindingKey","description":"Binding key used to bind the queue to the exchange\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"queueBind","description":"Binds a queue to an exchange with the given binding key.\n```ballerina\n    # rabbitmq:Error? bindResult \u003d newClient-\u003equeueBind(\"MyQueue\", \"MyExchange\", \"routing-key\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Message","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"message","description":"Message to be published \n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"publishMessage","description":"Publishes a message. Publishing to a non-existent exchange will result in a channel-level\nprotocol error, which closes the channel.\n```ballerina\n    # rabbitmq:Error? sendResult \u003d newClient-\u003epublishMessage(messageInBytes, \"MyQueue\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"The name of the queue\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"autoAck","description":"If false, should manually acknowledge\n","isDeprecated":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Message","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Message` object containing the retrieved message data or else a`rabbitmq:Error` if an\n           I/O error is encountered\n","isDeprecated":false}],"name":"consumeMessage","description":"Retrieves a message synchronously from the given queue providing direct access to the messages in the queue.\n```ballerina\n    # rabbitmq:Message|rabbitmq:Error getResult \u003d newClient-\u003econsumeMessage(\"MyQueue\", rabbitmq:AUTO_ACK);\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Message","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"message","description":"Message to be acknowledged\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"multiple","description":"`true` to acknowledge all messages up to and including the called on message and\n             `false` to acknowledge just the called on message\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"basicAck","description":"Acknowledges one or several received messages.\n```ballerina\n    # rabbitmq:Error? ackResult \u003d newClient-\u003ebasicAck(\u003cmessage\u003e);\n    # ```\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Message","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"message","description":"Message to be rejected\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"multiple","description":"`true` to reject all messages up to and including the called on message and\n             `false` to reject just the called on message\n","isDeprecated":false},{"defaultValue":"true","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"requeue","description":"`true` if the rejected message(s) should be re-queued rather than discarded/dead-lettered\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"basicNack","description":"Rejects one or several received messages.\n```ballerina\n    # rabbitmq:Error? nackResult \u003d newClient-\u003ebasicNack(\u003cmessage\u003e);\n    # ```\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"Name of the queue to be deleted\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"ifUnused","description":"True if the queue should be deleted only if it\u0027s not in use\n","isDeprecated":false},{"defaultValue":"false","type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"ifEmpty","description":"True if the queue should be deleted only if it\u0027s empty\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"queueDelete","description":"Deletes the queue with the given name although it is in use or has messages in it.\nIf the `ifUnused` or `ifEmpty` parameters are given, the queue is checked before deleting.\n```ballerina\n    # rabbitmq:Error? deleteResult \u003d newClient-\u003equeueDelete(\"MyQueue\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"exchangeName","description":"The name of the exchange\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"exchangeDelete","description":"Deletes the exchange with the given name.\n```ballerina\n    # rabbitmq:Error? deleteResult \u003d newClient-\u003eexchangeDelete(\"MyExchange\");\n    # ```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":true,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"queueName","description":"The name of the queue\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"A `rabbitmq:Error` if an I/O error is encountered or else `()`\n","isDeprecated":false}],"name":"queuePurge","description":"Purges the content of the given queue.\n```ballerina\n    # rabbitmq:Error? purgeResult \u003d newClient-\u003equeuePurge(\"MyQueue\");\n    # ```\n\n","isDeprecated":false}],"initMethod":{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"{}","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"ConnectionConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"connectionData","description":"A connection configuration\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false}],"name":"init","description":"Initializes a `rabbitmq:Client` object.\n\n","isDeprecated":false},"otherMethods":[],"isReadOnly":false,"isIsolated":false,"name":"Client","description":"The Ballerina interface to provide AMQP Channel related functionality.\n","isDeprecated":false}],"listeners":[{"lifeCycleMethods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Service","category":"abstractObjects","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"s","description":"Type descriptor of the service\n","isDeprecated":false},{"defaultValue":"()","type":{"isAnonymousUnionType":true,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"isAnonymousUnionType":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the service\n","isDeprecated":false}],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else a `rabbitmq:Error` upon failure to register the service\n","isDeprecated":false}],"name":"attach","description":"Attaches the service to the `rabbitmq:Listener` endpoint.\n\n","isDeprecated":false}],"fields":[],"methods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"{}","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"ConnectionConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"connectionData","description":"The connection configuration\n","isDeprecated":false},{"defaultValue":"()","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"QosSettings","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"qosSettings","description":"Consumer prefetch settings\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false}],"name":"init","description":"Initializes a Listener object with the given connection configuration. Sets the global QoS settings,\nwhich will be applied to the entire `rabbitmq:Listener`.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Service","category":"abstractObjects","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"s","description":"Type descriptor of the service\n","isDeprecated":false},{"defaultValue":"()","type":{"isAnonymousUnionType":true,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"isAnonymousUnionType":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":1,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}},{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0},"name":"name","description":"Name of the service\n","isDeprecated":false}],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else a `rabbitmq:Error` upon failure to register the service\n","isDeprecated":false}],"name":"attach","description":"Attaches the service to the `rabbitmq:Listener` endpoint.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else a `rabbitmq:Error` upon failure to start\n","isDeprecated":false}],"name":"\u0027start","description":"Starts consuming the messages on all the attached services.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Service","category":"abstractObjects","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"s","description":"Type descriptor of the service\n","isDeprecated":false}],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else  a `rabbitmq:Error` upon failure to detach the service\n","isDeprecated":false}],"name":"detach","description":"Stops consuming messages and detaches the service from the `rabbitmq:Listener` endpoint.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else  a `rabbitmq:Error` upon failure to close the `ChannelListener`\n","isDeprecated":false}],"name":"gracefulStop","description":"Stops consuming messages through all consumer services by terminating the connection and all its channels.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else  a `rabbitmq:Error` upon failure to close ChannelListener.\n","isDeprecated":false}],"name":"immediateStop","description":"Stops consuming messages through all the consumer services and terminates the connection\nwith the server.\n\n","isDeprecated":false}],"initMethod":{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"{}","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"ConnectionConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"connectionData","description":"The connection configuration\n","isDeprecated":false},{"defaultValue":"()","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"QosSettings","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"qosSettings","description":"Consumer prefetch settings\n","isDeprecated":false}],"returnParameters":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Error","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false}],"name":"init","description":"Initializes a Listener object with the given connection configuration. Sets the global QoS settings,\nwhich will be applied to the entire `rabbitmq:Listener`.\n\n","isDeprecated":false},"otherMethods":[{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else a `rabbitmq:Error` upon failure to start\n","isDeprecated":false}],"name":"\u0027start","description":"Starts consuming the messages on all the attached services.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"Service","category":"abstractObjects","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"s","description":"Type descriptor of the service\n","isDeprecated":false}],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else  a `rabbitmq:Error` upon failure to detach the service\n","isDeprecated":false}],"name":"detach","description":"Stops consuming messages and detaches the service from the `rabbitmq:Listener` endpoint.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else  a `rabbitmq:Error` upon failure to close the `ChannelListener`\n","isDeprecated":false}],"name":"gracefulStop","description":"Stops consuming messages through all consumer services by terminating the connection and all its channels.\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"","description":"`()` or else  a `rabbitmq:Error` upon failure to close ChannelListener.\n","isDeprecated":false}],"name":"immediateStop","description":"Stops consuming messages through all the consumer services and terminates the connection\nwith the server.\n\n","isDeprecated":false}],"isReadOnly":false,"isIsolated":false,"name":"Listener","description":"Ballerina RabbitMQ Message Listener.\nProvides a listener to consume messages from the RabbitMQ server.\n","isDeprecated":false}],"functions":[],"constants":[{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"value":"\"direct\"","name":"DIRECT_EXCHANGE","description":"Constant for the RabbitMQ Direct Exchange type.\n","isDeprecated":false},{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"value":"\"fanout\"","name":"FANOUT_EXCHANGE","description":"Constant for the RabbitMQ Fan-out Exchange type.\n","isDeprecated":false},{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"value":"\"topic\"","name":"TOPIC_EXCHANGE","description":"Constant for the RabbitMQ Topic Exchange type.\n","isDeprecated":false}],"annotations":[{"type":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"RabbitMQServiceConfig","category":"records","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"attachmentPoints":"service, class","name":"ServiceConfig","description":"The annotation, which is used to configure the subscription.\n","isDeprecated":false}],"errors":[{"detailType":{"orgName":"ballerinax","moduleName":"rabbitmq","version":"1.0.7","name":"RabbitMqError","category":"errors","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"Error","description":"The union of the RabbitMQ module related errors.\n","isDeprecated":false},{"name":"RabbitMqError","description":"Represents the RabbitMQ module related errors.\n","isDeprecated":false}],"types":[{"name":"ExchangeType","description":"Types of exchanges supported by the Ballerina RabbitMQ Connector.\n","isAnonymousUnionType":true,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"\"direct\"","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"name":"\"fanout\"","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"name":"\"topic\"","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"name":"\"headers\"","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isReadOnly":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0}],"enums":[]}]}]};