{"releaseVersion":"swan-lake-alpha4","releaseShortVersion":"slalpha4","description":"The following is a list of standard library packages that are available with the distribution, followed by a list of built in types.","packages":[{"name":"auth","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides listener Basic authentication providers, which can be used to authenticate the provided credentials against a file user store or an LDAP user store, and a client Basic authentication provider, which can be used to authenticate against an external endpoint.\n"},{"name":"awslambda","orgName":"ballerinax","version":"0.0.0","summary":"This module offers the capabilities of creating AWS Lambda functions using Ballerina.\n"},{"name":"azure_functions","orgName":"ballerinax","version":"1.0.0","summary":"This module provides an annotation based Azure Functions extension implementation for Ballerina.\n"},{"name":"cache","orgName":"ballerina","version":"2.1.0-alpha7","summary":"This package provides APIs for handle caching in Ballerina. It consists of a default implementation based on the LRU eviction algorithm.\n"},{"name":"cloud","orgName":"ballerina","version":"1.0.0","summary":"This module offers an annotation based Kubernetes extension implementation for ballerina.\n"},{"name":"crypto","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides the necessary utilities that are required to hash content using different hashing mechanisms and algorithms.\n"},{"name":"email","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package contains functions to perform email operations such as sending and reading emails using the SMTP, POP3, and IMAP4 protocols.\n"},{"name":"file","orgName":"ballerina","version":"0.7.0-alpha7","summary":"This package contains functions to perform file system based operations such as create, delete, rename the\nfile/directory, and retrieve metadata of the file.\n"},{"name":"ftp","orgName":"ballerina","version":"1.1.0-alpha8","summary":"This module provides an FTP client and an FTP server listener implementation to facilitate an FTP connection to a remote location.\n"},{"name":"graphql","orgName":"ballerina","version":"0.2.0-alpha7","summary":"This package provides an implementation for connecting and interacting with GraphQL endpoints.\n"},{"name":"grpc","orgName":"ballerina","version":"0.8.0-alpha7","summary":"This package provides support for the gRPC messaging protocol. gRPC is an inter-process communication technology that allows you to connect, invoke and operate distributed heterogeneous applications as easily as making a local function call. The gRPC protocol is layered over HTTP/2 and It uses Protocol Buffers for marshaling/unmarshaling messages. This makes gRPC, highly efficient on wire and a simple service definition framework.\n"},{"name":"http","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides an implementation for connecting and interacting with HTTP and HTTP2 endpoints. The package facilitates two types of network entry points as ‘Client’ and ‘Listener’.\n"},{"name":"io","orgName":"ballerina","version":"0.6.0-alpha7","summary":"The following diagram depicts the overview architecture of the I/O package.\n"},{"name":"jballerina.java","orgName":"ballerina","version":"0.9.0","summary":"This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods, and fields can provide implementations of Ballerina functions with external function bodies.\n"},{"name":"jballerina.java.arrays","orgName":"ballerina","version":"0.10.0-alpha7","summary":"This package provides APIs to create new Java array instances, get elements from arrays, set elements, etc.\n"},{"name":"jwt","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides a listener JWT authentication provider, which can be used to authenticate the provided credentials against the provided JWT validator configurations, and a client self-signed JWT authentication provider, which can be used to authenticate against an external endpoint with a self-signed JWT issued against the provided JWT issuer configurations. Also, this module provides the functionality related to issuing and validating a JWT.\n"},{"name":"lang.array","orgName":"ballerina","version":"1.1.0","summary":"This module provides lang library list operations defined by the language specification 2020R1."},{"name":"lang.boolean","orgName":"ballerina","version":"1.0.0","summary":"This module provides lang library operations on \"boolean\" values defined by the language specification 2020R1."},{"name":"lang.decimal","orgName":"ballerina","version":"1.0.0","summary":"This module provides lang library operations on \"decimal\" values defined by the language specification 2020R1."},{"name":"lang.error","orgName":"ballerina","version":"1.0.0","summary":"This module provides lang library operations on \"error\" values defined by the language specification 2020R1."},{"name":"lang.float","orgName":"ballerina","version":"1.0.0","summary":"This module provides lang library operations on \"float\" values defined by the language specification 2020R1."},{"name":"lang.future","orgName":"ballerina","version":"1.0.0","summary":"This module provides lang library operations on \"future\" values defined by the language specification 2020R1."},{"name":"lang.int","orgName":"ballerina","version":"1.1.0","summary":"This module provides lang library operations on \"int\" values defined by the language specification 2020R1."},{"name":"lang.map","orgName":"ballerina","version":"1.1.0","summary":"This module provides lang library map operations defined by the language specification 2020R1."},{"name":"lang.runtime","orgName":"ballerina","version":"0.0.1","summary":"This module defines the lang.runtime apis."},{"name":"lang.stream","orgName":"ballerina","version":"0.4.0","summary":"This module provides lang library operations on \"stream\" values defined by the language specification 2020R1."},{"name":"lang.string","orgName":"ballerina","version":"1.1.0","summary":"This module provides lang library string operations defined by the language specification 2020R1."},{"name":"lang.table","orgName":"ballerina","version":"0.4.0","summary":"This module provides lang library operations on \"table\" values defined by the language specification 2020R1."},{"name":"lang.transaction","orgName":"ballerina","version":"0.0.1","summary":"This module provides lang library operations on \"transaction\"s."},{"name":"lang.value","orgName":"ballerina","version":"1.0.0","summary":"This module provides lang library operations common to all values defined by the language specification 2020R1."},{"name":"lang.xml","orgName":"ballerina","version":"0.8.0","summary":"This module provides lang library operations on \"xml\" values defined by the language specification 2020R1."},{"name":"log","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides a basic API for logging.\n"},{"name":"mime","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides functions to encapsulate multiple body parts such as attachments into a single message. The\ncommunication of such messages follow the MIME (Multipurpose Internet Mail Extensions) specification as specified in\nthe \"RFC 2045 standard\" (https://www.ietf.org/rfc/rfc2045.txt).\n"},{"name":"oauth2","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides a listener OAuth2 authentication provider, which can be used to authenticate the provided credentials against an introspection endpoint, and a client OAuth2 authentication provider, which can be used to authenticate against an external endpoint.\n"},{"name":"observe","orgName":"ballerina","version":"0.9.0","summary":"This module provides apis for observing Ballerina services.\nBallerina supports Observability out of the box. This module provides user api\u0027s to make Ballerina Observability more flexible for the user.\n"},{"name":"openapi","orgName":"ballerina","version":"2.0.10","summary":"The OpenAPI tools provide the following capabilities.\n"},{"name":"os","orgName":"ballerina","version":"0.8.0-alpha7","summary":"This package provides functions to retrieve information about the operating system and the current users of the operating system.\n"},{"name":"random","orgName":"ballerina","version":"0.10.0-alpha7","summary":"This package provides functions related to random number generation. The \"random:createDecimal\" method generates a random decimal number between 0.0 and 1.0. The \"random:createIntInRange\" method generates a random number between the given start(inclusive) and end(exclusive) values.\n"},{"name":"regex","orgName":"ballerina","version":"0.7.0-alpha7","summary":"This package provides the following regex utility functions.\n"},{"name":"sql","orgName":"ballerina","version":"0.6.0-alpha7","summary":"This Package provides the common interface and functionality to interact with a database. The corresponding database\nclients can be created by using specific database packages such as \"MySQL\" or using the Java Database Connectivity\npackage \"JDBC\".\n"},{"name":"task","orgName":"ballerina","version":"2.0.0-alpha8","summary":"This package provides the functionality to schedule a Ballerina job and manages the execution of Ballerina jobs either once or periodically.\n"},{"name":"tcp","orgName":"ballerina","version":"0.8.0-alpha7","summary":"This package provides an implementation for sending/receiving messages to/from another application process (local or remote) for both connection-oriented protocols.\n"},{"name":"test","orgName":"ballerina","version":"0.0.0","summary":"This module facilitates developers to write automation tests for ballerina code in a simple manner. It provides a number of capabilities such as configuring setup and cleanup steps in different levels, ordering and grouping of tests, providing value-sets to tests and independence from external functions and endpoints via mocking capabilities.\n"},{"name":"time","orgName":"ballerina","version":"2.0.0-alpha8","summary":"This package provides implementations related to the UTC and localized time. In the world of cloud computing, the most essential type of time is UTC.\nTherefore, the more focus on this module is to give the most precise UTC and also handle some complex use cases such as leap seconds and daylight time-saving.\n"},{"name":"transaction","orgName":"ballerinai","version":"1.0.11","summary":"This module provides Ballerina transaction manager implementation."},{"name":"udp","orgName":"ballerina","version":"0.9.0-alpha7","summary":"This package provides an implementation for sending/receiving messages to/from another application process (local or remote) for connectionless protocols.\n"},{"name":"url","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides the necessary utilities, which are required to encode and decode a URL or part of a URL.\n"},{"name":"uuid","orgName":"ballerina","version":"0.10.0-alpha7","summary":"This package provides functions related to UUID (Universally unique identifier). For an example on the usage of the operations, see the \"UUID Example\" (https://ballerina.io/learn/by-example/uuid.html)."},{"name":"websocket","orgName":"ballerina","version":"1.2.0-alpha7","summary":"This package provides an implementation for connecting and interacting with WebSocket endpoints. The package facilitates three types of network entry points as ‘Client’, ‘AsyncClient’, and ‘Listener’.\n"},{"name":"websub","orgName":"ballerina","version":"1.2.0-alpha7","summary":"This package contains an implementation of the W3C \"WebSub\" (https://www.w3.org/TR/websub/) recommendation, which facilitates a push-based content delivery/notification mechanism between publishers and subscribers.\n"},{"name":"websubhub","orgName":"ballerina","version":"0.2.0-alpha7","summary":"This package contains an API specification to implement W3C \"WebSub Hub\" (https://www.w3.org/TR/websub/) which facilitates\na push-based content delivery / notification mechanism.\n"},{"name":"xmldata","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides functions to perform the conversion between \"xml\" and \"json\". It provides APIs to convert a natural representation of data in XML into a natural representation of data in JSON and vice-versa."},{"name":"xslt","orgName":"ballerina","version":"1.1.0-alpha7","summary":"This package provides a function to transform the XML content to another XML/HTML/plain text using XSL transformations.\n"}],"builtinTypes":[{"name":"()","description":"The nil type contains a single value, called nil, which is used to represent the absence of any other value. The nil value is written (). The nil value can also be written null, for compatibility with JSON; the use of null should be restricted to JSON-related contexts.\n\nThe nil type is special, in that it is the only basic type that consists of a single value. The type descriptor for the nil type is not written using a keyword, but is instead written () like the value."},{"name":"any","description":"The `any` data type represents all the available data types."},{"name":"boolean","description":"The `boolean` data type has only two possible values of `true` and `false`. A variable of `boolean` type defaults to `true`.","langlib":{"name":"lang.boolean","orgName":"ballerina","version":"1.0.0"}},{"name":"byte","description":"int in the range 0 to 255 inclusive."},{"name":"decimal","description":"Decimal floating point numbers.","langlib":{"name":"lang.decimal","orgName":"ballerina","version":"1.0.0"}},{"name":"error","description":"An indication that there has been an error, with a string identifying the reason for the error, and a mapping giving additional details about the error.\n\nAn error value provides information about an error that has occurred. Error values belong to a separate basic type; this makes it possible for language constructs to handle errors differently from other values.\n\nThe error type is inherently immutable. An error value contains the following information:\n\n- a message, which is a string containing a human-readable message describing the error\n- a cause, which is either nil or another error value that was the cause of this error\n- a detail, which is an immutable mapping providing additional information about the error\n- a stack trace, which is an immutable snapshot of the state of the execution stack","langlib":{"name":"lang.error","orgName":"ballerina","version":"1.0.0"}},{"name":"float","description":"The `float` data type is a double-precision 64-bit IEEE 754 floating point.","langlib":{"name":"lang.float","orgName":"ballerina","version":"1.0.0"}},{"name":"future","description":"A value to be returned by a function execution","langlib":{"name":"lang.future","orgName":"ballerina","version":"1.0.0"}},{"name":"handle","description":"Reference to externally managed storage."},{"name":"int","description":"The `int` data type is a 64-bit two\u0027s complement integer. ","langlib":{"name":"lang.int","orgName":"ballerina","version":"1.1.0"}},{"name":"json","description":"The `json` data type which represents the standard `JSON` format. It is a collection of `numbers`, `string`, `true`, `false`, `null`,  an `array` of `JSON`, or an `object` with key-value pairs where value is another `JSON`."},{"name":"map","description":"A mapping from keys, which are strings, to values; specifies mappings in terms of a single type to which all keys are mapped.","langlib":{"name":"lang.map","orgName":"ballerina","version":"1.1.0"}},{"name":"never","description":"The type descriptor never describes the type that does not contain any shapes. No value ever belongs to the never.\n\nThis can be useful to describe for the return type of a function, if the function never returns. It can also be useful as a type parameter. For example, xml\u003cnever\u003e describes the an xml type that has no constituents, i.e. the empty xml value."},{"name":"stream","description":"A sequence of values that can be generated lazily.\nA stream is an object-like value that can generate a sequence of values. There is also a value associated with the completion of the generation of the sequence, which is either nil, indicating the generation of the sequence completed successfully, or an error. ","langlib":{"name":"lang.stream","orgName":"ballerina","version":"0.4.0"}},{"name":"string","description":"The `string` data type is a series of characters gathered together. ","langlib":{"name":"lang.string","orgName":"ballerina","version":"1.1.0"}},{"name":"typedesc","description":"A type descriptor. A type descriptor value is an immutable value representing a resolved type descriptor. The type typedesc contains all values with basic type typedesc. A typedesc value t belongs to a type typedesc\u003cT\u003e if and only if the type described by t is a subtype of T. The typedesc type is thus covariant with its type parameter."},{"name":"xml","description":"The `xml` data type represents an immutable sequence of zero or more `XML` elements, comments, text or processing instructions.","langlib":{"name":"lang.xml","orgName":"ballerina","version":"0.8.0"}}],"keywords":[{"name":"isolated","description":"There are three possible operations on storage: read, write and execute. The concept of immutability relates to reading and writing storage, and provides limited information about execution: execution cannot lead to mutation of an immutable value. For functions and objects, it is useful to have more information about how execution may lead to mutation. Ballerina has a concept of isolation that provides this.\n\nObjects have an isolated bit in addition to a read-only bit; an object value is isolated if its isolated bit is set. Mutable state is defined to be freely reachable from a value or variable if it is reachable without following a reference to an isolated object. A variable or value is an isolated root if its mutable state is isolated from the rest of the program\u0027s mutable state: any mutable state that is freely reachable from the isolated root is reachable from outside only through the isolated root. More precisely, if some mutable state s is freely reachable from an isolated root value r, then s is not freely reachable from a variable or value that is not reachable from r except by following a reference through r; similarly, if some mutable state s is freely reachable from an isolated root variable r, then s is not freely reachable from a value that is not reachable from r and is not freely reachable from any variable other than r. A variable can also be declared to be isolated. Ballerina maintains the invariant that isolated objects and isolated variables are isolated roots. Ballerina also guarantees that any mutable state freely reachable from an isolated object or isolated variable is accessed only within the scope of a lock statement, which ensures that there is no data race in accessing that mutable state. This implies that there will be no data race accessing any mutable state that is reachable (not just freely reachable) from an isolated object or isolated variable.\n\nFunctions and methods have an isolated bit in addition to a read-only bit; a function or method is isolated if its isolated bit is set. Ballerina guarantees that a call an isolated method or function will only result in access to mutable state if at least one of the following conditions applies:\n\n- the mutable state is freely reachable from an argument passed to the function or method and the access happens on the strand on which the function is called; the object on which a method is invoked is considered as an argument for this purpose;\n- the mutable state is freely reachable from an isolated variable or an isolated object;\n- the mutable state is part of a new value created by the call.\n- The caller of a function can thus ensure that a function call will not lead to a data race by ensuring that no data race is possible for the mutable state freely reachable from the arguments that it passes to the function, for example by passing only immutable values or isolated objects."},{"name":"readonly","description":"A shape belongs to the type readonly if its read-only bit is on.\n\nA value belonging to an inherently immutable basic type will always have its read-only bit on. These basic types are:\n\nall simple types\n- nil\n- boolean\n- int\n- float\n- decimal\n- string\n- error\n- function\n- typedesc\n- handle\n\nA value belonging to a selectively immutable basic type may have its read-only bit on. These basic types are:\n\n- xml\n- list\n- mapping\n- table\n- object"}]}