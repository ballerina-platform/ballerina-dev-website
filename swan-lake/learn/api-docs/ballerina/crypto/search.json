{
  "modules": [
    {
      "id": "crypto",
      "description": "\u003cp\u003eThis module provides the necessary utilities that are required to hash content using different hashing mechanisms and algorithms.\u003c/p\u003e"
    }
  ],
  "classes": [],
  "functions": [
    {
      "id": "buildRsaPublicKey",
      "description": "\u003cp\u003eReturns the \u003ccode\u003ecrypto:PublicKey\u003c/code\u003e created with the modulus and exponent retrieved from the JWK\u0027s endpoint.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "crc32b",
      "description": "\u003cp\u003eReturns the Hex-encoded CRC32B value for the provided element.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "decodePrivateKey",
      "description": "\u003cp\u003eReads a private key from the provided PKCS#12 archive file.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "decodePublicKey",
      "description": "\u003cp\u003eReads a public key from the provided PKCS#12 archive file.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "decryptAesCbc",
      "description": "\u003cp\u003eReturns the AES-CBC-decrypted value for the given AES-CBC-encrypted data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "decryptAesEcb",
      "description": "\u003cp\u003eReturns the AES-ECB-decrypted value for the given AES-ECB-encrypted data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "decryptAesGcm",
      "description": "\u003cp\u003eReturns the AES-GCM-decrypted value for the given AES-GCM-encrypted data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "decryptRsaEcb",
      "description": "\u003cp\u003eReturns the RSA-decrypted value for the given RSA-encrypted data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "encryptAesCbc",
      "description": "\u003cp\u003eReturns the AES-CBC-encrypted value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "encryptAesEcb",
      "description": "\u003cp\u003eReturns the AES-ECB-encrypted value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "encryptAesGcm",
      "description": "\u003cp\u003eReturns the AES-GCM-encrypted value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "encryptRsaEcb",
      "description": "\u003cp\u003eReturns the RSA-encrypted value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hashMd5",
      "description": "\u003cp\u003eReturns the MD5 hash of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hashSha1",
      "description": "\u003cp\u003eReturns the SHA-1 hash of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hashSha256",
      "description": "\u003cp\u003eReturns the SHA-256 hash of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hashSha384",
      "description": "\u003cp\u003eReturns the SHA-384 hash of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hashSha512",
      "description": "\u003cp\u003eReturns the SHA-512 hash of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hmacMd5",
      "description": "\u003cp\u003eReturns the HMAC using the MD-5 hash function of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hmacSha1",
      "description": "\u003cp\u003eReturns the HMAC using the SHA-1 hash function of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hmacSha256",
      "description": "\u003cp\u003eReturns the HMAC using the SHA-256 hash function of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hmacSha384",
      "description": "\u003cp\u003eReturns the HMAC using the SHA-384 hash function of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "hmacSha512",
      "description": "\u003cp\u003eReturns the HMAC using the SHA-512 hash function of the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "signRsaMd5",
      "description": "\u003cp\u003eReturns the RSA-MD5-based signature value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "signRsaSha1",
      "description": "\u003cp\u003eReturns the RSA-SHA1-based signature value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "signRsaSha256",
      "description": "\u003cp\u003eReturns the RSA-SHA256-based signature value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "signRsaSha384",
      "description": "\u003cp\u003eReturns the RSA-SHA384-based signature value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "signRsaSha512",
      "description": "\u003cp\u003eReturns the RSA-SHA512-based signature value for the given data.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "verifyRsaMd5Signature",
      "description": "\u003cp\u003eVerifies the RSA-MD5-based signature.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "verifyRsaSha1Signature",
      "description": "\u003cp\u003eVerifies the RSA-SHA1-based signature.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "verifyRsaSha256Signature",
      "description": "\u003cp\u003eVerifies the RSA-SHA256-based signature.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "verifyRsaSha384Signature",
      "description": "\u003cp\u003eVerifies the RSA-SHA384-based signature.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "verifyRsaSha512Signature",
      "description": "\u003cp\u003eVerifies the RSA-SHA512-based signature.\u003c/p\u003e",
      "moduleId": "crypto"
    }
  ],
  "records": [
    {
      "id": "Certificate",
      "description": "\u003cp\u003eX509 public key certificate information.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "KeyStore",
      "description": "\u003cp\u003eKey store related configurations.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "PrivateKey",
      "description": "\u003cp\u003ePrivate key used in cryptographic operations.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "PublicKey",
      "description": "\u003cp\u003ePublic key used in cryptographic operations.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "TrustStore",
      "description": "\u003cp\u003eTrust store related configurations.\u003c/p\u003e",
      "moduleId": "crypto"
    }
  ],
  "constants": [
    {
      "id": "NONE",
      "description": "\u003cp\u003eNo padding.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "PKCS1",
      "description": "\u003cp\u003eThe \u003ccode\u003ePKCS1\u003c/code\u003e padding mode.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "PKCS5",
      "description": "\u003cp\u003eThe \u003ccode\u003ePKCS5\u003c/code\u003e padding mode.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "OAEPwithMD5andMGF1",
      "description": "\u003cp\u003eThe \u003ccode\u003eOAEPwithMD5andMGF1\u003c/code\u003e padding mode.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "OAEPWithSHA1AndMGF1",
      "description": "\u003cp\u003eThe \u003ccode\u003eOAEPWithSHA1AndMGF1\u003c/code\u003e padding mode.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "OAEPWithSHA256AndMGF1",
      "description": "\u003cp\u003eThe \u003ccode\u003eOAEPWithSHA256AndMGF1\u003c/code\u003e padding mode.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "OAEPwithSHA384andMGF1",
      "description": "\u003cp\u003eThe \u003ccode\u003eOAEPwithSHA384andMGF1\u003c/code\u003e padding mode.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "OAEPwithSHA512andMGF1",
      "description": "\u003cp\u003eThe \u003ccode\u003eOAEPwithSHA512andMGF1\u003c/code\u003e padding mode.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "RSA",
      "description": "\u003cp\u003eThe \u003ccode\u003eRSA\u003c/code\u003e algorithm.\u003c/p\u003e",
      "moduleId": "crypto"
    }
  ],
  "errors": [
    {
      "id": "CryptoError",
      "description": "\u003cp\u003eRepresents the Crypto error.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "Error",
      "description": "\u003cp\u003eThe union of all the Crypto related errors\u003c/p\u003e\n",
      "moduleId": "crypto"
    }
  ],
  "types": [
    {
      "id": "AesPadding",
      "description": "\u003cp\u003ePadding algorithms supported by AES encryption and decryption.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "KeyAlgorithm",
      "description": "\u003cp\u003eThe key algorithms supported by the Crypto module.\u003c/p\u003e",
      "moduleId": "crypto"
    },
    {
      "id": "RsaPadding",
      "description": "\u003cp\u003ePadding algorithms supported with RSA encryption and decryption.\u003c/p\u003e",
      "moduleId": "crypto"
    }
  ],
  "clients": [],
  "listeners": [],
  "annotations": [],
  "abstractObjects": []
}