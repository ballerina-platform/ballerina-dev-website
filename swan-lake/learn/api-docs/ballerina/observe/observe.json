{
  "id": "observe",
  "summary": "\u003cp\u003eThis module provides apis for observing Ballerina services.\nBallerina supports Observability out of the box. This module provides user api\u0027s to make Ballerina Observability more flexible for the user.\u003c/p\u003e\n",
  "description": "\u003ch2\u003eModule Overview\u003c/h2\u003e\n\u003cp\u003eThis module provides apis for observing Ballerina services.\nBallerina supports Observability out of the box. This module provides user api\u0027s to make Ballerina Observability more flexible for the user.\u003c/p\u003e\n\u003cp\u003eTo observe Ballerina code, the \u0027--b7a.observability.enabled\u003dtrue\u0027 property should be given when starting the service.\ni.e. `ballerina run hello_world.bal --b7a.observability.enabled\u003dtrue\u0027\nFor more information on Ballerina Observability visit \u003ca href\u003d\"https://ballerina.io/v1-2/learn/how-to-observe-ballerina-code/\"\u003eHow to Observe Ballerina Services\u003c/a\u003e.\u003c/p\u003e\n\u003ch1\u003eTracing\u003c/h1\u003e\n\u003cp\u003eTracing provides information regarding the roundtrip of a service invocation based on the concept of spans, which are\nstructured in a hierarchy based on the cause and effect concept. The tracing API allows users to tap into that\ntracing information, introduce new spans, and add additional information to existing spans using user-defined tags.\u003c/p\u003e\n\u003ch2\u003eSamples\u003c/h2\u003e\n\u003ch3\u003eStart a root span \u0026amp; attach a child span\u003c/h3\u003e\n\u003cp\u003eThe following code snippet show an example of how start a root span with no parent and start another span as a child of the first span.\nNote: Make sure that all started spans are closed properly to ensure that all spans are reported properly.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003eint spanId \u003d observe:startRootSpan(\u0026quot;Parent Span\u0026quot;);\n\n// Do Something.\n\nint spanId2 \u003d checkpanic observe:startSpan(\u0026quot;Child Span\u0026quot;, parentSpanId \u003d spanId);\n\n// Do Something.\n\nvar ret1 \u003d observe:finishSpan(spanId2);\n\n// Do Something.\n\nvar ret2 \u003d observe:finishSpan(spanId);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eStart a span attached to a system trace\u003c/h3\u003e\n\u003cp\u003eWhen no parentSpanId is given or a parentSpanId of -1 is given, a span is started as a child span to the current active span in the ootb system trace.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003eint spanId \u003d checkpanic observe:startSpan(\u0026quot;Child Span\u0026quot;);\n\n// Do Something.\n\nvar ret \u003d observe:finishSpan(spanId);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eAttach a tag to a span\u003c/h3\u003e\n\u003cp\u003eIt is possible to add tags to span by using the \u003ccode\u003eobserve:addTagToSpan()\u003c/code\u003e api by providing the span id and relevant tag key and tag value.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e_ \u003d observe:addTagToSpan(spanId \u003d spanId, \u0026quot;Tag Key\u0026quot;, \u0026quot;Tag Value\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eAttach a tag to a span in the system trace\u003c/h3\u003e\n\u003cp\u003eWhen no spanId is provided or -1 is given, the defined tags are added to the current active span in the ootb system trace.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003evar ret \u003d observe:addTagToSpan(\u0026quot;Tag Key\u0026quot;, \u0026quot;Tag Value\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch1\u003eMetrics\u003c/h1\u003e\n\u003cp\u003eThere are mainly two kind of metrics instances supported; Counter and Gauge. A counter is a cumulative metric that\nrepresents a single monotonically increasing counter whose value can only increase or be reset to zero on restart.\nFor example, you can use a counter to represent the number of requests served, tasks completed, or errors.\nThe Gauge metric instance represents a single numerical value that can arbitrarily go up and down, and also based on the\nstatistics configurations provided to the Gauge, it can also report the statistics such as max, min, mean, percentiles, etc.\u003c/p\u003e\n\u003ch2\u003eCounter Samples\u003c/h2\u003e\n\u003ch3\u003eCreate\u003c/h3\u003e\n\u003cp\u003eThe following code snippets provides the information on how Counter instances can be created. Instantiating the counter\nwill simply create an instance based on the params passed.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e// Create counter with simply by name.\nobserve:Counter simpleCounter \u003d new(\u0026quot;SimpleCounter\u0026quot;); \n\n// Create counter with description.\nobserve:Counter counterWithDesc \u003d new(\u0026quot;CounterWithDesc\u0026quot;, desc \u003d \u0026quot;This is a sample counter description\u0026quot;);\n\n// Create counter with tags.\nmap\u0026lt;string\u0026gt; counterTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Counter counterWithTags \u003d new(\u0026quot;CounterWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d counterTags);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eRegister\u003c/h3\u003e\n\u003cp\u003eThe counter can registered with the global metrics registry, therefore it can be looked up later without having the\nreference of the counter that was created. Also, only the registered counters will be reported to the Metrics reporter\nsuch as Prometheus. In case, if there is already another non counter metric registered,\nthen there will be an error returned. But if it\u0027s another counter instance, then the registered counter instance will\nbe returned.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; counterTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Counter counterWithTags \u003d new(\u0026quot;CounterWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d counterTags);\nvar anyError \u003d counterWithTags.register();\nif anyError is error {\n    log:printError(\u0026quot;Cannot register the counter\u0026quot;, err \u003d anyError);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eUnregister\u003c/h3\u003e\n\u003cp\u003eThe counter can unregistered with the global metrics registry if it is already registered. If a metrics is unregistered,\nthen further it\u0027ll not be included in metrics reporting.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; counterTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Counter counterWithTags \u003d new(\u0026quot;CounterWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d counterTags);\nvar anyError \u003d counterWithTags.register();\nif anyError is error {\n    log:printError(\u0026quot;Cannot register the counter\u0026quot;, err \u003d anyError);\n}\ncounterWithTags.unregister();\n    \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eIncrement\u003c/h3\u003e\n\u003cp\u003eThe counter can be incremented without passing any params (defaulted to 1), or by a specific amount.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; counterTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Counter counterWithTags \u003d new(\u0026quot;CounterWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d counterTags);\n// Increment by 1.\ncounterWithTags.increment(); \n// Increment by amount 10.\ncounterWithTags.increment(amount \u003d 10);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eReset\u003c/h3\u003e\n\u003cp\u003eThe counter can be resetted to default amount \u003d 0.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; counterTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Counter counterWithTags \u003d new(\u0026quot;CounterWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d counterTags);\ncounterWithTags.reset();\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eGet Value\u003c/h3\u003e\n\u003cp\u003eThe current value can be retrieved by this operation.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; counterTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Counter counterWithTags \u003d new(\u0026quot;CounterWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d counterTags);\nint currentValue \u003d counterWithTags.getValue();\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eGauge Samples\u003c/h2\u003e\n\u003ch3\u003eCreate\u003c/h3\u003e\n\u003cp\u003eThe following code snippets provides the information on how Gauge instances can be created. Instantiating the gauge\nwill simply create an instance based on the params passed.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e// Create gauge with simply by name. \n// Uses the default statistics configuration. \nobserve:Gauge simpleGauge \u003d new(\u0026quot;SimpleGauge\u0026quot;); \n\n// Create gauge with description.\n// Uses the default statistics configuration. \nobserve:Gauge gaugeWithDesc \u003d new(\u0026quot;GaugeWithDesc\u0026quot;, desc \u003d \u0026quot;This is a sample gauge description\u0026quot;);\n\n// Create gauge with tags.\n// Uses the default statistics configuration. \nmap\u0026lt;string\u0026gt; gaugeTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Counter gaugeWithTags \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d gaugeTags);\n\n// Create gauge with disabled statistics. \nobserve:StatisticConfig[] statsConfigs \u003d [];\nobserve:Gauge gaugeWithNoStats \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, \n                                    tags \u003d gaugeTags, statisticConfig \u003d statsConfigs);\n\n// Create gauge with statistics config. \nobserve:StatisticConfig config \u003d { timeWindow: 30000, percentiles: [0.33, 0.5, 0.9, 0.99], buckets: 3 };\nstatsConfigs[0]\u003dconfig; \n\nobserve:Gauge gaugeWithStats \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, \n                                   tags \u003d gaugeTags, statisticConfig \u003d statsConfigs);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eRegister\u003c/h3\u003e\n\u003cp\u003eThe gauge can registered with the global metrics registry, therefore it can be looked up later without having the\nreference of the gauge that was created. Also, only the registered counters will be reported to the Metrics reporter\nsuch as Prometheus. In case, if there is already another non gauge metric registered,\nthen there will be an error returned. But if it\u0027s another gauge instance, then the registered gauge instance will\nbe returned.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; gaugeTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Gauge gaugeWithTags \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d gaugeTags);\nvar anyError \u003d gaugeWithTags.register();\nif anyError is error {\n    log:printError(\u0026quot;Cannot register the gauge\u0026quot;, err \u003d anyError);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eUnregister\u003c/h3\u003e\n\u003cp\u003eThe gauge can unregistered with the global metrics registry if it is already registered. If a metrics is unregistered,\nthen further it\u0027ll not be included in metrics reporting.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; gaugeTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Gauge gaugeWithTags \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d gaugeTags);\nvar anyError \u003d gaugeWithTags.register();\nif anyError is error {\n    log:printError(\u0026quot;Cannot register the gauge\u0026quot;, err \u003d anyError);\n}\ngaugeWithTags.unregister();\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eIncrement\u003c/h3\u003e\n\u003cp\u003eThe gauge can be incremented without passing any params (defaulted to 1.0), or by a specific amount.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; gaugeTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Gauge gaugeWithTags \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d gaugeTags);\n// Increment by 1.\ngaugeWithTags.increment(); \n// Increment by amount 10.\ngaugeWithTags.increment(amount \u003d 10.0);  \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eDecrement\u003c/h3\u003e\n\u003cp\u003eThe gauge can be decremented without passing any params (defaulted to 1.0), or by a specific amount.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; gaugeTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Gauge gaugeWithTags \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d gaugeTags);\n// Increment by 1.\ngaugeWithTags.decrement(); \n// Increment by amount 10.\ngaugeWithTags.decrement(amount \u003d 10.0);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eSet Value\u003c/h3\u003e\n\u003cp\u003eThis method sets the gauge\u0027s value with specific amount.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; gaugeTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Gauge gaugeWithTags \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d gaugeTags);\ngaugeWithTags.setValue(100.0);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eGet Value.\u003c/h3\u003e\n\u003cp\u003eThe current value can be retrieved by this operation.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; gaugeTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Gauge gaugeWithTags \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d gaugeTags);\nfloat currentValue \u003d gaugeWithTags.getValue(); \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eGet Snapshot.\u003c/h3\u003e\n\u003cp\u003eThis method retrieves current snapshot of the statistics calculation based on the configurations passed to the gauge.\nIf the statistics are disabled, then it\u0027ll be returning nil ().\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; gaugeTags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Gauge gaugeWithTags \u003d new(\u0026quot;GaugeWithTags\u0026quot;, desc \u003d \u0026quot;Some description\u0026quot;, tags \u003d gaugeTags);\ngaugeWithTags.setValue(1.0);\ngaugeWithTags.setValue(2.0);\ngaugeWithTags.setValue(3.0);\n\nobserve:Snapshot[]? summarySnapshot \u003d gaugeWithTags.getSnapshot();\nif summarySnapshot is observe:Snapshot[] {\n    io:println(summarySnapshot);\n} else {\n    io:println(\u0026quot;No statistics available!\u0026quot;);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eGlobal Metrics Samples\u003c/h2\u003e\n\u003ch3\u003eGet All Metrics\u003c/h3\u003e\n\u003cp\u003eThis method returns all the metrics that are registered in the global metrics registry. This method is mainly useful for\nmetric reporters, where they can fetch all metrics, format those, and report.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003eobserve:Metric[] metrics \u003d observe:getAllMetrics();\nforeach var metric in metrics {\n    // Do something.\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eLookup Metric\u003c/h3\u003e\n\u003cp\u003eThis method will lookup for the metric from the global metric registry and return it.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003emap\u0026lt;string\u0026gt; tags \u003d { \u0026quot;method\u0026quot;: \u0026quot;GET\u0026quot; };\nobserve:Counter|observe:Gauge|() metric \u003d observe:lookupMetric(\u0026quot;MetricName\u0026quot;, tags \u003d tags);\nif metric is observe:Counter {\n    metric.increment(amount \u003d 10);\n} else if metric is observe:Gauge {\n    metric.increment(amount \u003d 10.0);\n} else {\n    io:println(\u0026quot;No Metric Found!\u0026quot;);\n}\n\u003c/code\u003e\u003c/pre\u003e\n",
  "orgName": "ballerina",
  "version": "0.8.0",
  "records": [
    {
      "fields": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "name",
          "description": "\u003cp\u003eName of the metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "desc",
          "description": "\u003cp\u003eDescription of the metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "map",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "tags",
          "description": "\u003cp\u003eTags associated with the metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "metricType",
          "description": "\u003cp\u003eType of the metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "observe",
            "category": "types",
            "isAnonymousUnionType": true,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "int",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            ],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "value",
          "description": "\u003cp\u003eCurrent value the metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "category": "UNKNOWN",
            "isAnonymousUnionType": false,
            "isArrayType": true,
            "isNullable": true,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": false,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 1,
            "elementType": {
              "orgName": "ballerina",
              "moduleName": "observe",
              "name": "Snapshot",
              "category": "records",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": false,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            }
          },
          "name": "summary",
          "description": "\u003cp\u003eIf the metric is configured with statistics config, then the calculated statistics of the metric.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "isAnonymous": false,
      "name": "Metric",
      "description": "\u003cp\u003eThis represents the generic metric record that can represent both counter and gauge.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "fields": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "float",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "percentile",
          "description": "\u003cp\u003eThe percentile of the reported value.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "float",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "value",
          "description": "\u003cp\u003eThe value of the percentile.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "isAnonymous": false,
      "name": "PercentileValue",
      "description": "\u003cp\u003eThis represents the percentile value record.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "fields": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "timeWindow",
          "description": "\u003cp\u003eThe time window in which variation of the values are considered.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "float",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "mean",
          "description": "\u003cp\u003eThe average value within the time window.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "float",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "max",
          "description": "\u003cp\u003eThe max value within the time window.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "float",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "min",
          "description": "\u003cp\u003eThe min value within the time window.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "float",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "stdDev",
          "description": "\u003cp\u003eThe standard deviation value within the time window.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "category": "UNKNOWN",
            "isAnonymousUnionType": false,
            "isArrayType": true,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": false,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 1,
            "elementType": {
              "orgName": "ballerina",
              "moduleName": "observe",
              "name": "PercentileValue",
              "category": "records",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": false,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            }
          },
          "name": "percentileValues",
          "description": "\u003cp\u003eThe percentiles values calculated wihtin the time window.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "isAnonymous": false,
      "name": "Snapshot",
      "description": "\u003cp\u003eThis represents the snapshot of the statistics calculation of the gauge.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "fields": [
        {
          "defaultValue": "",
          "type": {
            "category": "UNKNOWN",
            "isAnonymousUnionType": false,
            "isArrayType": true,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 1,
            "elementType": {
              "orgName": "ballerina",
              "moduleName": "lang.annotations",
              "name": "float",
              "category": "builtin",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": false,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            }
          },
          "name": "percentiles",
          "description": "\u003cp\u003eThe percentiles that needs to be calculated.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "timeWindow",
          "description": "\u003cp\u003eThe time window (in milli seconds) in which variation of the values are considered.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "buckets",
          "description": "\u003cp\u003eThe number of buckets used in the sliding time window.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "isAnonymous": false,
      "name": "StatisticConfig",
      "description": "\u003cp\u003eThis represents the statistic configuration that can be used to instatiate gauge metric.\u003c/p\u003e\n",
      "isDeprecated": false
    }
  ],
  "objects": [
    {
      "fields": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "name",
          "description": "\u003cp\u003eName of the counter metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "description",
          "description": "\u003cp\u003eDescription of the counter metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "map",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "metricTags",
          "description": "\u003cp\u003eTags associated with the counter metric.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "methods": [
        {
          "isRemote": false,
          "isExtern": false,
          "parameters": [
            {
              "defaultValue": "",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "string",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "name",
              "description": "\u003cp\u003eName of the Counter instance.\u003c/p\u003e\n",
              "isDeprecated": false
            },
            {
              "defaultValue": "\u003cstring?\u003e ",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "string",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "desc",
              "description": "\u003cp\u003eDescription of the Counter instance. If no description is provided, the the default empty string\nwill be used.\u003c/p\u003e\n",
              "isDeprecated": false
            },
            {
              "defaultValue": "\u003cmap\u003cstring\u003e?\u003e ()",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "map",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "tags",
              "description": "\u003cp\u003eThe key/value pair of Tags. If no tags are provided, the default nil value will be used.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "init",
          "description": "\u003cp\u003eThis instantiates the Counter object. Name field is mandatory, and description and tags fields\nare optional and have its own default values when no params are passed.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "",
              "description": "\u003cp\u003eReturns error if there is any metric registered already with the same name\nbut different parameters or in a different kind.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "register",
          "description": "\u003cp\u003eRegister the counter metric instance with the Metric Registry.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [],
          "name": "unregister",
          "description": "\u003cp\u003eUnregister the counter metric instance with the Metric Registry.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [
            {
              "defaultValue": "1",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "int",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "amount",
              "description": "\u003cp\u003eThe amount by which the value needs to be increased. The amount is defaulted as 1 and will be\nused if there is no amount passed in.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "increment",
          "description": "\u003cp\u003eIncrement the counter\u0027s value by an amount.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [],
          "name": "reset",
          "description": "\u003cp\u003eResets the counter\u0027s value to zero.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "int",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "",
              "description": "\u003cp\u003eThe current value of the counter.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "getValue",
          "description": "\u003cp\u003eRetrieves the counter\u0027s current value.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "initMethod": {
        "isRemote": false,
        "isExtern": false,
        "parameters": [
          {
            "defaultValue": "",
            "type": {
              "orgName": "ballerina",
              "moduleName": "lang.annotations",
              "name": "string",
              "category": "builtin",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": false,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            },
            "name": "name",
            "description": "\u003cp\u003eName of the Counter instance.\u003c/p\u003e\n",
            "isDeprecated": false
          },
          {
            "defaultValue": "\u003cstring?\u003e ",
            "type": {
              "orgName": "ballerina",
              "moduleName": "lang.annotations",
              "name": "string",
              "category": "builtin",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": true,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            },
            "name": "desc",
            "description": "\u003cp\u003eDescription of the Counter instance. If no description is provided, the the default empty string\nwill be used.\u003c/p\u003e\n",
            "isDeprecated": false
          },
          {
            "defaultValue": "\u003cmap\u003cstring\u003e?\u003e ()",
            "type": {
              "orgName": "ballerina",
              "moduleName": "lang.annotations",
              "name": "map",
              "category": "builtin",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": true,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            },
            "name": "tags",
            "description": "\u003cp\u003eThe key/value pair of Tags. If no tags are provided, the default nil value will be used.\u003c/p\u003e\n",
            "isDeprecated": false
          }
        ],
        "returnParameters": [],
        "name": "init",
        "description": "\u003cp\u003eThis instantiates the Counter object. Name field is mandatory, and description and tags fields\nare optional and have its own default values when no params are passed.\u003c/p\u003e\n",
        "isDeprecated": false
      },
      "otherMethods": [
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "",
              "description": "\u003cp\u003eReturns error if there is any metric registered already with the same name\nbut different parameters or in a different kind.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "register",
          "description": "\u003cp\u003eRegister the counter metric instance with the Metric Registry.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [],
          "name": "unregister",
          "description": "\u003cp\u003eUnregister the counter metric instance with the Metric Registry.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [
            {
              "defaultValue": "1",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "int",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "amount",
              "description": "\u003cp\u003eThe amount by which the value needs to be increased. The amount is defaulted as 1 and will be\nused if there is no amount passed in.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "increment",
          "description": "\u003cp\u003eIncrement the counter\u0027s value by an amount.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [],
          "name": "reset",
          "description": "\u003cp\u003eResets the counter\u0027s value to zero.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "int",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "",
              "description": "\u003cp\u003eThe current value of the counter.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "getValue",
          "description": "\u003cp\u003eRetrieves the counter\u0027s current value.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "Counter",
      "description": "\u003cp\u003eThis represents the metric type - counter, that can be only increased by an integer number.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "fields": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "name",
          "description": "\u003cp\u003eName of the counter metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "description",
          "description": "\u003cp\u003eDescription of the counter metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "map",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "metricTags",
          "description": "\u003cp\u003eTags associated with the counter metric.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "category": "UNKNOWN",
            "isAnonymousUnionType": false,
            "isArrayType": true,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": false,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 1,
            "elementType": {
              "orgName": "ballerina",
              "moduleName": "observe",
              "name": "StatisticConfig",
              "category": "records",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": false,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            }
          },
          "name": "statisticConfigs",
          "description": "\u003cp\u003eArray of StatisticConfig objects which defines about the statistical calculation\nof the gauge during its usage.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "methods": [
        {
          "isRemote": false,
          "isExtern": false,
          "parameters": [
            {
              "defaultValue": "",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "string",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "name",
              "description": "\u003cp\u003eName of the Gauge instance.\u003c/p\u003e\n",
              "isDeprecated": false
            },
            {
              "defaultValue": "\u003cstring?\u003e ",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "string",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "desc",
              "description": "\u003cp\u003eDescription of the Gauge instance. If no description is provided, the the default empty string\nwill be used.\u003c/p\u003e\n",
              "isDeprecated": false
            },
            {
              "defaultValue": "\u003cmap\u003cstring\u003e?\u003e ()",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "map",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "tags",
              "description": "\u003cp\u003eThe key/value pair of Tags. If no tags are provided, the default nil value will be used.\u003c/p\u003e\n",
              "isDeprecated": false
            },
            {
              "defaultValue": "\u003cballerina/observe:0.8.0:StatisticConfig[]?\u003e ()",
              "type": {
                "category": "UNKNOWN",
                "isAnonymousUnionType": false,
                "isArrayType": true,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": false,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 1,
                "elementType": {
                  "orgName": "ballerina",
                  "moduleName": "observe",
                  "name": "StatisticConfig",
                  "category": "records",
                  "isAnonymousUnionType": false,
                  "isArrayType": false,
                  "isNullable": false,
                  "isTuple": false,
                  "isLambda": false,
                  "isDeprecated": false,
                  "generateUserDefinedTypeLink": true,
                  "memberTypes": [],
                  "paramTypes": [],
                  "arrayDimensions": 0
                }
              },
              "name": "statisticConfig",
              "description": "\u003cp\u003eStatistics configurations array is used for statistics calculation. In case if empty\nstatistics configurations array is passed, then statistics calculation will be disabled.\nIf nil () is passed, then default statistics configs will be used for the statitics\ncalculation.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "init",
          "description": "\u003cp\u003eThis instantiates the Gauge object. Name field is mandatory, and description, tags, and statitics config fields\nare optional and have its own default values when no params are passed.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "",
              "description": "\u003cp\u003eReturns error if there is any metric registered already with the same name\nbut different parameters or in a different kind.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "register",
          "description": "\u003cp\u003eRegister the gauge metric instance with the Metric Registry.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [],
          "name": "unregister",
          "description": "\u003cp\u003eUnregister the counter metric instance with the Metric Registry.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [
            {
              "defaultValue": "1.0",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "amount",
              "description": "\u003cp\u003eThe amount by which the value of gauge needs to be increased.\nThe amount is defaulted as 1.0 and will be used if there is no amount passed in.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "increment",
          "description": "\u003cp\u003eIncrement the gauge\u0027s value by an amount.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [
            {
              "defaultValue": "1.0",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "amount",
              "description": "\u003cp\u003eThe amount by which the value of gauge needs to be decreased.\nThe amount is defaulted as 1.0 and will be used if there is no amount passed in.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "decrement",
          "description": "\u003cp\u003eDecrement the gauge\u0027s value by an amount.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [
            {
              "defaultValue": "",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "amount",
              "description": "\u003cp\u003eThe instantaneous value that needs to be set as gauge value.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "setValue",
          "description": "\u003cp\u003eSets the instantaneous value for gauge.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "",
              "description": "\u003cp\u003eThe current value of the gauge.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "getValue",
          "description": "\u003cp\u003eRetrieves the gauge\u0027s current value.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "category": "UNKNOWN",
                "isAnonymousUnionType": false,
                "isArrayType": true,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": false,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 1,
                "elementType": {
                  "orgName": "ballerina",
                  "moduleName": "observe",
                  "name": "Snapshot",
                  "category": "records",
                  "isAnonymousUnionType": false,
                  "isArrayType": false,
                  "isNullable": false,
                  "isTuple": false,
                  "isLambda": false,
                  "isDeprecated": false,
                  "generateUserDefinedTypeLink": true,
                  "memberTypes": [],
                  "paramTypes": [],
                  "arrayDimensions": 0
                }
              },
              "name": "",
              "description": "\u003cp\u003eArray of the statistics snapshots.\nIf there is no statisticsConfigs provided, then it will be nil.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "getSnapshot",
          "description": "\u003cp\u003eRetrieves statistics snapshots based on the statistics configs of the gauge.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "initMethod": {
        "isRemote": false,
        "isExtern": false,
        "parameters": [
          {
            "defaultValue": "",
            "type": {
              "orgName": "ballerina",
              "moduleName": "lang.annotations",
              "name": "string",
              "category": "builtin",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": false,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            },
            "name": "name",
            "description": "\u003cp\u003eName of the Gauge instance.\u003c/p\u003e\n",
            "isDeprecated": false
          },
          {
            "defaultValue": "\u003cstring?\u003e ",
            "type": {
              "orgName": "ballerina",
              "moduleName": "lang.annotations",
              "name": "string",
              "category": "builtin",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": true,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            },
            "name": "desc",
            "description": "\u003cp\u003eDescription of the Gauge instance. If no description is provided, the the default empty string\nwill be used.\u003c/p\u003e\n",
            "isDeprecated": false
          },
          {
            "defaultValue": "\u003cmap\u003cstring\u003e?\u003e ()",
            "type": {
              "orgName": "ballerina",
              "moduleName": "lang.annotations",
              "name": "map",
              "category": "builtin",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": true,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            },
            "name": "tags",
            "description": "\u003cp\u003eThe key/value pair of Tags. If no tags are provided, the default nil value will be used.\u003c/p\u003e\n",
            "isDeprecated": false
          },
          {
            "defaultValue": "\u003cballerina/observe:0.8.0:StatisticConfig[]?\u003e ()",
            "type": {
              "category": "UNKNOWN",
              "isAnonymousUnionType": false,
              "isArrayType": true,
              "isNullable": true,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": false,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 1,
              "elementType": {
                "orgName": "ballerina",
                "moduleName": "observe",
                "name": "StatisticConfig",
                "category": "records",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            },
            "name": "statisticConfig",
            "description": "\u003cp\u003eStatistics configurations array is used for statistics calculation. In case if empty\nstatistics configurations array is passed, then statistics calculation will be disabled.\nIf nil () is passed, then default statistics configs will be used for the statitics\ncalculation.\u003c/p\u003e\n",
            "isDeprecated": false
          }
        ],
        "returnParameters": [],
        "name": "init",
        "description": "\u003cp\u003eThis instantiates the Gauge object. Name field is mandatory, and description, tags, and statitics config fields\nare optional and have its own default values when no params are passed.\u003c/p\u003e\n",
        "isDeprecated": false
      },
      "otherMethods": [
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "",
              "description": "\u003cp\u003eReturns error if there is any metric registered already with the same name\nbut different parameters or in a different kind.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "register",
          "description": "\u003cp\u003eRegister the gauge metric instance with the Metric Registry.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [],
          "name": "unregister",
          "description": "\u003cp\u003eUnregister the counter metric instance with the Metric Registry.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [
            {
              "defaultValue": "1.0",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "amount",
              "description": "\u003cp\u003eThe amount by which the value of gauge needs to be increased.\nThe amount is defaulted as 1.0 and will be used if there is no amount passed in.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "increment",
          "description": "\u003cp\u003eIncrement the gauge\u0027s value by an amount.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [
            {
              "defaultValue": "1.0",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "amount",
              "description": "\u003cp\u003eThe amount by which the value of gauge needs to be decreased.\nThe amount is defaulted as 1.0 and will be used if there is no amount passed in.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "decrement",
          "description": "\u003cp\u003eDecrement the gauge\u0027s value by an amount.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [
            {
              "defaultValue": "",
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "amount",
              "description": "\u003cp\u003eThe instantaneous value that needs to be set as gauge value.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "returnParameters": [],
          "name": "setValue",
          "description": "\u003cp\u003eSets the instantaneous value for gauge.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              "name": "",
              "description": "\u003cp\u003eThe current value of the gauge.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "getValue",
          "description": "\u003cp\u003eRetrieves the gauge\u0027s current value.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "isRemote": false,
          "isExtern": true,
          "parameters": [],
          "returnParameters": [
            {
              "type": {
                "category": "UNKNOWN",
                "isAnonymousUnionType": false,
                "isArrayType": true,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": false,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 1,
                "elementType": {
                  "orgName": "ballerina",
                  "moduleName": "observe",
                  "name": "Snapshot",
                  "category": "records",
                  "isAnonymousUnionType": false,
                  "isArrayType": false,
                  "isNullable": false,
                  "isTuple": false,
                  "isLambda": false,
                  "isDeprecated": false,
                  "generateUserDefinedTypeLink": true,
                  "memberTypes": [],
                  "paramTypes": [],
                  "arrayDimensions": 0
                }
              },
              "name": "",
              "description": "\u003cp\u003eArray of the statistics snapshots.\nIf there is no statisticsConfigs provided, then it will be nil.\u003c/p\u003e\n",
              "isDeprecated": false
            }
          ],
          "name": "getSnapshot",
          "description": "\u003cp\u003eRetrieves statistics snapshots based on the statistics configs of the gauge.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "Gauge",
      "description": "\u003cp\u003eThis represents the metric type - gauge, that can hold instantaneous, increased or decreased value\nduring the usage.\u003c/p\u003e\n",
      "isDeprecated": false
    }
  ],
  "clients": [],
  "listeners": [],
  "functions": [
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "tagKey",
          "description": "\u003cp\u003eKey of the tag\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "tagValue",
          "description": "\u003cp\u003eValue of the tag\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "-1",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "spanId",
          "description": "\u003cp\u003eId of span to which the tags should be added or -1 to add tags to the current active span\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "error",
            "category": "errors",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": true,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eAn error if an error occurred while attaching tag to the span\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "addTagToSpan",
      "description": "\u003cp\u003eAdd a key value pair as a tag to the span.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": false,
      "parameters": [],
      "returnParameters": [
        {
          "type": {
            "name": "error?",
            "category": "types",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "",
          "isDeprecated": false
        }
      ],
      "name": "ballerina/observe:0.8.0.\u003cinit\u003e0",
      "description": "",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "spanId",
          "description": "\u003cp\u003eId of span to finish\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "error",
            "category": "errors",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": true,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eAn error if an error occurred while finishing the span\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "finishSpan",
      "description": "\u003cp\u003eFinish the current span.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [],
      "returnParameters": [
        {
          "type": {
            "category": "UNKNOWN",
            "isAnonymousUnionType": false,
            "isArrayType": true,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": false,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 1,
            "elementType": {
              "orgName": "ballerina",
              "moduleName": "observe",
              "name": "Metric",
              "category": "records",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": false,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            }
          },
          "name": "",
          "description": "\u003cp\u003eArray of all registered metrics.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "getAllMetrics",
      "description": "\u003cp\u003eRetrieve all registered metrics including default metrics from the ballerina runtime, and user defined metrics.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "boolean",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eTrue if observability had been enabled.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "isObservabilityEnabled",
      "description": "\u003cp\u003eChecks of either metrics or tracing had been enabled.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "name",
          "description": "\u003cp\u003eName of the metric to lookup.\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "\u003cmap\u003cstring\u003e?\u003e ()",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "map",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": true,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "tags",
          "description": "\u003cp\u003eThe key/value pair tags that associated with the metric that should be looked up.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "observe",
            "category": "types",
            "isAnonymousUnionType": true,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [
              {
                "orgName": "ballerina",
                "moduleName": "observe",
                "name": "Counter",
                "category": "objects",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "observe",
                "name": "Gauge",
                "category": "objects",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": true,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            ],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eThe metric instance.\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "lookupMetric",
      "description": "\u003cp\u003eRetrieves the specific metric that is described by the given name and tags.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "spanName",
          "description": "\u003cp\u003eName of the span\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "\u003cmap\u003cstring\u003e?\u003e ()",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "map",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": true,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "tags",
          "description": "\u003cp\u003eTags to be associated to the span\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eSpanId of the started span\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "startRootSpan",
      "description": "\u003cp\u003eStart a span with no parent span.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "spanName",
          "description": "\u003cp\u003eName of the span\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "\u003cmap\u003cstring\u003e?\u003e ()",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "map",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": true,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "tags",
          "description": "\u003cp\u003eTags to be associated to the span\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "-1",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "parentSpanId",
          "description": "\u003cp\u003eId of the parent span or -1 if parent span should be taken from system trace\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "observe",
            "category": "types",
            "isAnonymousUnionType": true,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "int",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            ],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eSpanId of the started span\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "startSpan",
      "description": "\u003cp\u003eStart a span and create child relationship to current active span or user specified span.\u003c/p\u003e\n",
      "isDeprecated": false
    }
  ],
  "constants": [],
  "annotations": [
    {
      "attachmentPoints": "function",
      "name": "Observable",
      "description": "",
      "isDeprecated": false
    }
  ],
  "errors": [],
  "finiteTypes": [],
  "unionTypes": [],
  "resources": []
}