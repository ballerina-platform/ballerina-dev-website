{
  "id": "config",
  "summary": "\u003cp\u003eThis module provides the Config API to read configurations from environment variables, TOML files, and command-line parameters and build a consolidated set of configurations.\u003c/p\u003e\n",
  "description": "\u003ch2\u003eModule Overview\u003c/h2\u003e\n\u003cp\u003eThis module provides the Config API to read configurations from environment variables, TOML files, and command-line parameters and build a consolidated set of configurations.\u003c/p\u003e\n\u003cp\u003eThe precedence order for configuration lookup is as follows:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCLI arguments (used with the --)\u003c/li\u003e\n\u003cli\u003eEnvironment variables\u003c/li\u003e\n\u003cli\u003eConfiguration files in the TOML format\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThis configuration resolution happens at the start of the program execution. Configurations can be set programmatically as well.\u003c/p\u003e\n\u003cp\u003eThe Config API provides the capability to feed sensitive data (e.g., passwords) to Ballerina programs securely by encrypting them.\u003c/p\u003e\n\u003ch2\u003eSetting configurations\u003c/h2\u003e\n\u003cp\u003eTo specify a configuration file explicitly, the \u003ccode\u003e--b7a.config.file\u003d\u0026lt;path to configuration file\u0026gt;\u003c/code\u003e property can be used. If\nthis property is not set when\nrunning a project, Ballerina looks for a \u003ccode\u003eballerina.conf\u003c/code\u003e file in the project root. When running a single file or a\n\u003ccode\u003e.jar\u003c/code\u003e, it\u0027s picked from the same directory in which the \u003ccode\u003e.jar\u003c/code\u003e or source resides. The path to the configuration\nfile can either be an absolute or a relative path.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-sh\"\u003eballerina run my-program.bal --b7a.config.file\u003d/path/to/conf/file/custom-config-file-name.conf \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eA configuration file should conform to the TOML format. Ballerina only supports the following features of TOML: value types (string, int, float and boolean), tables, and nested tables.\nGiven below is a sample:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-toml\"\u003e[b7a.http.tracelog]\nconsole\u003dtrue\npath\u003d\u0026quot;./trace.log\u0026quot;\n\n[b7a.http.accesslog]\nconsole\u003dtrue\npath\u003d\u0026quot;./access.log\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eA key given inside a bracket forms a namespace. Any configuration that is specified between two such keys belongs to the namespace of the first of these keys. To access a configuration in a namespace, the fully qualified key should be given (e.g., \u003ccode\u003eb7a.http.tracelog.path\u003c/code\u003e).\u003c/p\u003e\n\u003cp\u003eThe following types can be given through a configuration file: \u003ccode\u003estring\u003c/code\u003e, \u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003efloat\u003c/code\u003e, and \u003ccode\u003eboolean\u003c/code\u003e. If the configuration value is not an \u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003efloat\u003c/code\u003e, or a \u003ccode\u003eboolean\u003c/code\u003e, it is considered a \u003ccode\u003estring\u003c/code\u003e and should always be quoted.\u003c/p\u003e\n\u003cp\u003eThe same configs can be set using CLI parameters as follows.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-bash\"\u003eballerina run my-program.bal --b7a.http.tracelog.console\u003dtrue --b7a.http.tracelog.path\u003d./trace.log\n  --b7a.http.accesslog.console\u003dtrue --b7a.http.accesslog.path\u003d./access.log\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eConfigurations in a file can be overridden by environment variables. To override a particular configuration, an environment variable that matches the configuration key must be set. As periods are not allowed in environment variables, periods in a configuration key should be replaced by underscores.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-bash\"\u003e// In Linux and Mac.\n$ export b7a_http_tracelog_path\u003d”./trace.log”\n$ export b7a_http_accesslog_path\u003d”./access.log”\n\n// In Windows.\n$ set(x) b7a_http_tracelog_path\u003d”./trace.log”\n$ set(x) b7a_http_accesslog_path\u003d”./access.log”\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf the configurations need to be shared during runtime, they can be set using the \u003ccode\u003esetConfig()\u003c/code\u003e function.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003econfig:setConfig(\u0026quot;john.country\u0026quot;, \u0026quot;USA\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eReading configurations\u003c/h2\u003e\n\u003cp\u003eThe API provides functions to read configurations in their original type. Check function descriptors for example usages.\u003c/p\u003e\n\u003cp\u003eA set of configurations belonging to a particular namespace can be retrieved as a \u003ccode\u003emap\u003c/code\u003e using the \u003ccode\u003egetAsMap()\u003c/code\u003e function. Here is an example:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-toml\"\u003e[b7a.http.tracelog]\nconsole\u003dtrue\npath\u003d\u0026quot;./trace.log\u0026quot;\nhost\u003d\u0026quot;@env:{TRACE_LOG_READER_HOST}\u0026quot;\nport\u003d5757\n\n[b7a.http.accesslog]\nconsole\u003dtrue\npath\u003d\u0026quot;./access.log\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe configurations for HTTP trace logs can be retrieved as a \u003ccode\u003emap\u003c/code\u003e as follows:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e// Reads a configuration section as a map.\n// Here, the map’s key-value pairs represent config key-value pairs.\nmap\u0026lt;anydata\u0026gt; serverAlphaMap  \u003d config:getAsMap(\u0026quot;b7a.http.tracelog\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn the above configuration file, the \u003ccode\u003ehost\u003c/code\u003e is specified as \u003ccode\u003e@env:{TRACE_LOG_READER_HOST}\u003c/code\u003e. When resolving the configurations, Ballerina looks for a variable named \u003ccode\u003eTRACE_LOG_READER_HOST\u003c/code\u003e in the environment variables and maps \u003ccode\u003eb7a.http.tracelog.host\u003c/code\u003e to its value.\u003c/p\u003e\n\u003cp\u003eIf the specified environment variable does not exist, it will will treat \u003ccode\u003e@env:{TRACE_LOG_READER_HOST}\u003c/code\u003e as a normal string value.\u003c/p\u003e\n\u003ch2\u003eSecuring configuration values\u003c/h2\u003e\n\u003cp\u003eSensitive values can be encrypted using the \u003ccode\u003eencrypt\u003c/code\u003e command as follows:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-sh\"\u003e$ ballerina encrypt\nEnter value: \n\nEnter secret: \n\nRe-enter secret to verify: \n\nAdd the following to the runtime config:\n@encrypted:{JqlfWNWKM6gYiaGnS0Hse1J9F/v48gUR0Kxfa5gwjcM\u003d}\n\nOr add the following to the runtime command-line:\n-e\u0026lt;param\u0026gt;\u003d@encrypted:{JqlfWNWKM6gYiaGnS0Hse1J9F/v48gUR0Kxfa5gwjcM\u003d}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis encrypted value can then be placed in a configuration file or provided as a CLI parameter.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-bash\"\u003e[admin]\npassword\u003d”@encrypted:{JqlfWNWKM6gYiaGnS0Hse1J9F/v48gUR0Kxfa5gwjcM\u003d}”\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eReading config files with encrypted values\u003c/h2\u003e\n\u003cp\u003eWhen trying to run a Ballerina program with a configuration file or CLI parameters that contain encrypted values, Ballerina will first check to see if the \u003ccode\u003eb7a.config.secret\u003c/code\u003e configuration is set. This configuration is used to set the path to a file containing the secret required to decrypt the configurations. If it is set, the secret is read, and the secret file is deleted.\u003c/p\u003e\n\u003cp\u003eIf a secret file is not provided, the user is prompted to enter the secret. Values are decrypted only on demand when an encrypted value is looked up using the \u003ccode\u003egetAsString()\u003c/code\u003e function.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-bash\"\u003e$ ballerina run program.bal \nballerina: enter secret for config value decryption:\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: \u003cem\u003eThe same config file cannot contain values that are encrypted using different secrets.\u003c/em\u003e\u003c/p\u003e\n",
  "orgName": "ballerina",
  "version": "1.0.0",
  "records": [],
  "objects": [],
  "clients": [],
  "listeners": [],
  "functions": [
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "key",
          "description": "\u003cp\u003eThe configuration key to be looked-up\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "boolean",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eReturns true if the key is present; if not returs false\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "contains",
      "description": "\u003cp\u003eChecks whether the given key is in the configuration registry.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e boolean configAvailable \u003d config:contains(\u0026quot;host\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": false,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "key",
          "description": "\u003cp\u003eThe key of the configuration to be retrieved\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "category": "UNKNOWN",
            "isAnonymousUnionType": false,
            "isArrayType": true,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 1,
            "elementType": {
              "orgName": "ballerina",
              "moduleName": "lang.annotations",
              "name": "anydata",
              "category": "builtin",
              "isAnonymousUnionType": false,
              "isArrayType": false,
              "isNullable": false,
              "isTuple": false,
              "isLambda": false,
              "isDeprecated": false,
              "generateUserDefinedTypeLink": true,
              "memberTypes": [],
              "paramTypes": [],
              "arrayDimensions": 0
            }
          },
          "name": "",
          "description": "\u003cp\u003eConfiguration value mapped with the given key. If there is no mapping, an empty array will be returned\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "getAsArray",
      "description": "\u003cp\u003eRetrieves the specified configuration value as an array.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e int[]|error ports \u003d config:getAsArray(\u0026quot;ports\u0026quot;).cloneWithType(int[]);\n\u003c/code\u003e\u003c/pre\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": false,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "key",
          "description": "\u003cp\u003eThe key of the configuration to be retrieved\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "false",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "boolean",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "defaultValue",
          "description": "\u003cp\u003eThe default value to be used in case there is no mapping for the provided key\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "boolean",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eConfiguration value mapped with the given key\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "getAsBoolean",
      "description": "\u003cp\u003eRetrieves the specified configuration value as a boolean.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e boolean cachingEnabled \u003d config:getAsBoolean(\u0026quot;http.caching_enabled\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": false,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "key",
          "description": "\u003cp\u003eThe key of the configuration to be retrieved\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "0.0",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "float",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "defaultVal",
          "description": "\u003cp\u003eThe default value to be used in case there is no mapping for the provided key\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "float",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eConfiguration value mapped with the given key\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "getAsFloat",
      "description": "\u003cp\u003eRetrieves the specified configuration value as a float.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e float evictionFactor \u003d config:getAsFloat(\u0026quot;http.eviction_factor\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": false,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "key",
          "description": "\u003cp\u003eThe key of the configuration to be retrieved\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "0",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "defaultValue",
          "description": "\u003cp\u003eThe default value to be used in case there is no mapping for the provided key\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "int",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eConfiguration value mapped with the given key\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "getAsInt",
      "description": "\u003cp\u003eRetrieves the specified configuration value as an int.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e int port \u003d config:getAsInt(\u0026quot;http.port\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": false,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "key",
          "description": "\u003cp\u003eThe key of the configuration to be retrieved\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "map",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eConfiguration value mapped with the given key. If there is no mapping, an empty map will be returned\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "getAsMap",
      "description": "\u003cp\u003eRetrieves the specified configuration value as a map.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e map\u0026lt;anydata\u0026gt; configValue \u003d config:getAsMap(\u0026quot;http.listenerConfig\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": false,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "key",
          "description": "\u003cp\u003eThe key of the configuration to be retrieved\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "defaultValue",
          "description": "\u003cp\u003eThe default value to be used in case there is no mapping for the provided key\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eConfiguration value mapped with the given key\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "getAsString",
      "description": "\u003cp\u003eRetrieves the specified configuration value as a string.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e string host \u003d config:getAsString(\u0026quot;http.host\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "key",
          "description": "\u003cp\u003eThe key of the configuration value to be set\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "config",
            "category": "types",
            "isAnonymousUnionType": true,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "string",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "int",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "float",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "boolean",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            ],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "value",
          "description": "\u003cp\u003eThe configuration value to be set\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [],
      "name": "setConfig",
      "description": "\u003cp\u003eSets the specified key/value pair as a configuration.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-ballerina\"\u003e config:setConfig(\u0026quot;john.country\u0026quot;, \u0026quot;USA\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\n",
      "isDeprecated": false
    }
  ],
  "constants": [],
  "annotations": [],
  "errors": [],
  "finiteTypes": [
    {
      "valueSpace": [
        "STRING"
      ],
      "name": "$anonType$0",
      "description": "",
      "isAnonymousUnionType": false,
      "isArrayType": false,
      "isNullable": false,
      "isTuple": false,
      "isLambda": false,
      "isDeprecated": false,
      "generateUserDefinedTypeLink": true,
      "memberTypes": [],
      "paramTypes": [],
      "arrayDimensions": 0
    },
    {
      "valueSpace": [
        "INT"
      ],
      "name": "$anonType$1",
      "description": "",
      "isAnonymousUnionType": false,
      "isArrayType": false,
      "isNullable": false,
      "isTuple": false,
      "isLambda": false,
      "isDeprecated": false,
      "generateUserDefinedTypeLink": true,
      "memberTypes": [],
      "paramTypes": [],
      "arrayDimensions": 0
    },
    {
      "valueSpace": [
        "FLOAT"
      ],
      "name": "$anonType$2",
      "description": "",
      "isAnonymousUnionType": false,
      "isArrayType": false,
      "isNullable": false,
      "isTuple": false,
      "isLambda": false,
      "isDeprecated": false,
      "generateUserDefinedTypeLink": true,
      "memberTypes": [],
      "paramTypes": [],
      "arrayDimensions": 0
    },
    {
      "valueSpace": [
        "BOOLEAN"
      ],
      "name": "$anonType$3",
      "description": "",
      "isAnonymousUnionType": false,
      "isArrayType": false,
      "isNullable": false,
      "isTuple": false,
      "isLambda": false,
      "isDeprecated": false,
      "generateUserDefinedTypeLink": true,
      "memberTypes": [],
      "paramTypes": [],
      "arrayDimensions": 0
    },
    {
      "valueSpace": [
        "MAP"
      ],
      "name": "$anonType$4",
      "description": "",
      "isAnonymousUnionType": false,
      "isArrayType": false,
      "isNullable": false,
      "isTuple": false,
      "isLambda": false,
      "isDeprecated": false,
      "generateUserDefinedTypeLink": true,
      "memberTypes": [],
      "paramTypes": [],
      "arrayDimensions": 0
    },
    {
      "valueSpace": [
        "ARRAY"
      ],
      "name": "$anonType$5",
      "description": "",
      "isAnonymousUnionType": false,
      "isArrayType": false,
      "isNullable": false,
      "isTuple": false,
      "isLambda": false,
      "isDeprecated": false,
      "generateUserDefinedTypeLink": true,
      "memberTypes": [],
      "paramTypes": [],
      "arrayDimensions": 0
    }
  ],
  "unionTypes": [],
  "resources": []
}