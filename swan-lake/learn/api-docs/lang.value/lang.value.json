{
  "id": "lang.value",
  "summary": "\u003cp\u003eThis module provides lang library operations common to all values defined by the language specification 2020R1.\u003c/p\u003e\n",
  "description": "\u003ch2\u003eModule Overview\u003c/h2\u003e\n\u003cp\u003eThis module provides lang library operations common to all values defined by the language specification 2020R1.\u003c/p\u003e\n",
  "orgName": "ballerina",
  "version": "1.0.0",
  "records": [],
  "objects": [],
  "clients": [],
  "listeners": [],
  "functions": [
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "v",
          "description": "\u003cp\u003esource value\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eclone of \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "clone",
      "description": "\u003cp\u003eReturns a clone of \u003ccode\u003ev\u003c/code\u003e.\nA clone is a deep copy that does not copy immutable subtrees.\nA clone can therefore safely be used concurrently with the original.\nIt corresponds to the Clone(v) abstract operation,\ndefined in the Ballerina Language Specification.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "v",
          "description": "\u003cp\u003esource value\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003eimmutable clone of \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "cloneReadOnly",
      "description": "\u003cp\u003eReturns a clone of \u003ccode\u003ev\u003c/code\u003e that is read-only, i.e. immutable.\nIt corresponds to the ImmutableClone(v) abstract operation,\ndefined in the Ballerina Language Specification.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "anydata",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "v",
          "description": "\u003cp\u003ethe value to be cloned\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "typedesc",
            "category": "UNKNOWN",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "t",
          "description": "\u003cp\u003ethe type for the cloned to be constructed\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.value",
            "category": "types",
            "isAnonymousUnionType": true,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [
              {
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            ],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003ea new value that belongs to \u003ccode\u003et\u003c/code\u003e, or an error if this cannot be done\u003c/p\u003e\n\u003cp\u003eWhen \u003ccode\u003ev\u003c/code\u003e is a structural value, the inherent type of the value to be constructed\ncomes from \u003ccode\u003et\u003c/code\u003e. When \u003ccode\u003et\u003c/code\u003e is a union, it must be possible to determine which\nmember of the union to use for the inherent type by following the same rules\nthat are used by list constructor expressions and mapping constructor expressions\nwith the contextually expected type. If not, then an error is returned.\nThe \u003ccode\u003econstructFrom\u003c/code\u003e operation is recursively applied to each member of \u003ccode\u003ev\u003c/code\u003e using\nthe type descriptor that the inherent type requires for that member.\u003c/p\u003e\n\u003cp\u003eLike the Clone abstract operation, this does a deep copy, but differs in\nthe following respects:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe inherent type of any structural values constructed comes from the specified\ntype descriptor rather than the value being constructed\u003c/li\u003e\n\u003cli\u003ethe read-only bit of values and fields comes from the specified type descriptor\u003c/li\u003e\n\u003cli\u003ethe graph structure of \u003ccode\u003ev\u003c/code\u003e is not preserved; the result will always be a tree;\nan error will be returned if \u003ccode\u003ev\u003c/code\u003e has cycles\u003c/li\u003e\n\u003cli\u003eimmutable structural values are copied rather being returned as is; all\nstructural values in the result will be mutable, except for error values\n(which are always immutable)\u003c/li\u003e\n\u003cli\u003enumeric values can be converted using the NumericConvert abstract operation\u003c/li\u003e\n\u003cli\u003eif a record type descriptor specifies default values, these will be used\nto supply any missing members\u003c/li\u003e\n\u003c/ul\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "cloneWithType",
      "description": "\u003cp\u003eConstructs a value with a specified type by cloning another value.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "str",
          "description": "\u003cp\u003estring representation of json\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.value",
            "category": "types",
            "isAnonymousUnionType": true,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "json",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            ],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003e\u003ccode\u003estr\u003c/code\u003e parsed to json or error\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "fromJsonString",
      "description": "\u003cp\u003eParses a string in JSON format and returns the the value that it represents.\nAll numbers in the JSON will be represented as float values.\nReturns an error if the string cannot be parsed.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "anydata",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "v",
          "description": "\u003cp\u003esource value\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "boolean",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003etrue if read-only, false otherwise\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "isReadOnly",
      "description": "\u003cp\u003eTests whether \u003ccode\u003ev\u003c/code\u003e is read-only, i.e. immutable\nReturns true if read-only, false otherwise.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "json",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "j1",
          "description": "\u003cp\u003ejson value\u003c/p\u003e\n",
          "isDeprecated": false
        },
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "json",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "j2",
          "description": "\u003cp\u003ejson value\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.value",
            "category": "types",
            "isAnonymousUnionType": true,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "json",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            ],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003ethe merge of \u003ccode\u003ej1\u003c/code\u003e with \u003ccode\u003ej2\u003c/code\u003e or an error if the merge fails\u003c/p\u003e\n\u003cp\u003eThe merge of \u003ccode\u003ej1\u003c/code\u003e with \u003ccode\u003ej2\u003c/code\u003e is defined as follows:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eif \u003ccode\u003ej1\u003c/code\u003e is \u003ccode\u003e()\u003c/code\u003e, then the result is \u003ccode\u003ej2\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ej2\u003c/code\u003e is \u003ccode\u003e()\u003c/code\u003e, then the result is \u003ccode\u003ej1\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ej1\u003c/code\u003e is a mapping and \u003ccode\u003ej2\u003c/code\u003e is a mapping, then for each entry [k, j] in j2,\nset \u003ccode\u003ej1[k]\u003c/code\u003e to the merge of \u003ccode\u003ej1[k]\u003c/code\u003e with \u003ccode\u003ej\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eif \u003ccode\u003ej1[k]\u003c/code\u003e is undefined, then set \u003ccode\u003ej1[k]\u003c/code\u003e to \u003ccode\u003ej\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eif any merge fails, then the merge of \u003ccode\u003ej1\u003c/code\u003e with \u003ccode\u003ej2\u003c/code\u003e fails\u003c/li\u003e\n\u003cli\u003eotherwise, the result is \u003ccode\u003ej1\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eotherwise, the merge fails\nIf the merge fails, then \u003ccode\u003ej1\u003c/code\u003e is unchanged.\u003c/li\u003e\n\u003c/ul\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "mergeJson",
      "description": "\u003cp\u003eMerges two json values.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "json",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "v",
          "description": "\u003cp\u003ejson value\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003estring representation of json\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "toJsonString",
      "description": "\u003cp\u003eReturns the string that represents \u003ccode\u003ev\u003c/code\u003e in JSON format.\u003c/p\u003e\n",
      "isDeprecated": false
    },
    {
      "isRemote": false,
      "isExtern": true,
      "parameters": [
        {
          "defaultValue": "",
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.value",
            "category": "types",
            "isAnonymousUnionType": true,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "any",
                "category": "builtin",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              },
              {
                "orgName": "ballerina",
                "moduleName": "lang.annotations",
                "name": "error",
                "category": "errors",
                "isAnonymousUnionType": false,
                "isArrayType": false,
                "isNullable": false,
                "isTuple": false,
                "isLambda": false,
                "isDeprecated": false,
                "generateUserDefinedTypeLink": true,
                "memberTypes": [],
                "paramTypes": [],
                "arrayDimensions": 0
              }
            ],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "v",
          "description": "\u003cp\u003ethe value to be converted to a string\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "returnParameters": [
        {
          "type": {
            "orgName": "ballerina",
            "moduleName": "lang.annotations",
            "name": "string",
            "category": "builtin",
            "isAnonymousUnionType": false,
            "isArrayType": false,
            "isNullable": false,
            "isTuple": false,
            "isLambda": false,
            "isDeprecated": false,
            "generateUserDefinedTypeLink": true,
            "memberTypes": [],
            "paramTypes": [],
            "arrayDimensions": 0
          },
          "name": "",
          "description": "\u003cp\u003ea string resulting from the conversion\u003c/p\u003e\n\u003cp\u003eThe result of \u003ccode\u003etoString(v)\u003c/code\u003e is as follows:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is a string, then returns \u003ccode\u003ev\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is \u003ccode\u003e()\u003c/code\u003e, then returns an empty string\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is boolean, then the string \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is an int, then return \u003ccode\u003ev\u003c/code\u003e represented as a decimal string\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is a float or decimal, then return \u003ccode\u003ev\u003c/code\u003e represented as a decimal string,\nwith a decimal point only if necessary, but without any suffix indicating the type of \u003ccode\u003ev\u003c/code\u003e;\nreturn \u003ccode\u003eNaN\u003c/code\u003e, \u003ccode\u003eInfinity\u003c/code\u003e for positive infinity, and \u003ccode\u003e-Infinity\u003c/code\u003e for negative infinity\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is a list, then returns the results toString on each member of the list\nseparated by a space character\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is a map, then returns key\u003dvalue for each member separated by a space character\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is xml, then returns \u003ccode\u003ev\u003c/code\u003e in XML format (as if it occurred within an XML element)\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is table, TBD\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is an error, then a string consisting of the following in order\n\u003col\u003e\n\u003cli\u003ethe string \u003ccode\u003eerror\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ea space character\u003c/li\u003e\n\u003cli\u003ethe reason string\u003c/li\u003e\n\u003cli\u003eif the detail record is non-empty\n\u003col\u003e\n\u003cli\u003ea space character\u003c/li\u003e\n\u003cli\u003ethe result of calling toString on the detail record\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is an object, then\n\u003cul\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e provides a \u003ccode\u003etoString\u003c/code\u003e method with a string return type and no required methods,\nthen the result of calling that method on \u003ccode\u003ev\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eotherwise, \u003ccode\u003eobject\u003c/code\u003e followed by some implementation-dependent string\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eif \u003ccode\u003ev\u003c/code\u003e is any other behavioral type, then the identifier for the behavioral type\n(\u003ccode\u003efunction\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eservice\u003c/code\u003e, \u003ccode\u003etypedesc\u003c/code\u003e or \u003ccode\u003ehandle\u003c/code\u003e)\nfollowed by some implementation-dependent string\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNote that \u003ccode\u003etoString\u003c/code\u003e may produce the same string for two Ballerina values\nthat are not equal (in the sense of the \u003ccode\u003e\u003d\u003d\u003c/code\u003e operator).\u003c/p\u003e\n",
          "isDeprecated": false
        }
      ],
      "name": "toString",
      "description": "\u003cp\u003ePerforms a minimal conversion of a value to a string.\nThe conversion is minimal in particular in the sense\nthat the conversion applied to a value that is already\na string does nothing.\u003c/p\u003e\n",
      "isDeprecated": false
    }
  ],
  "constants": [],
  "annotations": [],
  "errors": [],
  "finiteTypes": [],
  "unionTypes": [],
  "resources": []
}